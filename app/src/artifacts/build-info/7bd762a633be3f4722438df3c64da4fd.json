{"id":"7bd762a633be3f4722438df3c64da4fd","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC4626.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4626.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"../token/ERC20/extensions/IERC20Metadata.sol\";\n\n/**\n * @dev Interface of the ERC4626 \"Tokenized Vault Standard\", as defined in\n * https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\n */\ninterface IERC4626 is IERC20, IERC20Metadata {\n    event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares);\n\n    event Withdraw(\n        address indexed sender,\n        address indexed receiver,\n        address indexed owner,\n        uint256 assets,\n        uint256 shares\n    );\n\n    /**\n     * @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n     *\n     * - MUST be an ERC-20 token contract.\n     * - MUST NOT revert.\n     */\n    function asset() external view returns (address assetTokenAddress);\n\n    /**\n     * @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n     *\n     * - SHOULD include any compounding that occurs from yield.\n     * - MUST be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT revert.\n     */\n    function totalAssets() external view returns (uint256 totalManagedAssets);\n\n    /**\n     * @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n     * through a deposit call.\n     *\n     * - MUST return a limited value if receiver is subject to some deposit limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n     * - MUST NOT revert.\n     */\n    function maxDeposit(address receiver) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n     *   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n     *   in the same transaction.\n     * - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n     *   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewDeposit(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   deposit execution, and are accounted for during deposit.\n     * - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function deposit(uint256 assets, address receiver) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n     * - MUST return a limited value if receiver is subject to some mint limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n     * - MUST NOT revert.\n     */\n    function maxMint(address receiver) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n     *   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n     *   same transaction.\n     * - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n     *   would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by minting.\n     */\n    function previewMint(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n     *   execution, and are accounted for during mint.\n     * - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function mint(uint256 shares, address receiver) external returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n     * Vault, through a withdraw call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxWithdraw(address owner) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n     *   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n     *   called\n     *   in the same transaction.\n     * - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n     *   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewWithdraw(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   withdraw execution, and are accounted for during withdraw.\n     * - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function withdraw(uint256 assets, address receiver, address owner) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n     * through a redeem call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxRedeem(address owner) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n     *   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n     *   same transaction.\n     * - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n     *   redemption would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by redeeming.\n     */\n    function previewRedeem(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   redeem execution, and are accounted for during redeem.\n     * - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256 assets);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC4626.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20, IERC20Metadata, ERC20} from \"../ERC20.sol\";\nimport {SafeERC20} from \"../utils/SafeERC20.sol\";\nimport {IERC4626} from \"../../../interfaces/IERC4626.sol\";\nimport {Math} from \"../../../utils/math/Math.sol\";\n\n/**\n * @dev Implementation of the ERC4626 \"Tokenized Vault Standard\" as defined in\n * https://eips.ethereum.org/EIPS/eip-4626[EIP-4626].\n *\n * This extension allows the minting and burning of \"shares\" (represented using the ERC20 inheritance) in exchange for\n * underlying \"assets\" through standardized {deposit}, {mint}, {redeem} and {burn} workflows. This contract extends\n * the ERC20 standard. Any additional extensions included along it would affect the \"shares\" token represented by this\n * contract and not the \"assets\" token which is an independent contract.\n *\n * [CAUTION]\n * ====\n * In empty (or nearly empty) ERC-4626 vaults, deposits are at high risk of being stolen through frontrunning\n * with a \"donation\" to the vault that inflates the price of a share. This is variously known as a donation or inflation\n * attack and is essentially a problem of slippage. Vault deployers can protect against this attack by making an initial\n * deposit of a non-trivial amount of the asset, such that price manipulation becomes infeasible. Withdrawals may\n * similarly be affected by slippage. Users can protect against this attack as well as unexpected slippage in general by\n * verifying the amount received is as expected, using a wrapper that performs these checks such as\n * https://github.com/fei-protocol/ERC4626#erc4626router-and-base[ERC4626Router].\n *\n * Since v4.9, this implementation uses virtual assets and shares to mitigate that risk. The `_decimalsOffset()`\n * corresponds to an offset in the decimal representation between the underlying asset's decimals and the vault\n * decimals. This offset also determines the rate of virtual shares to virtual assets in the vault, which itself\n * determines the initial exchange rate. While not fully preventing the attack, analysis shows that the default offset\n * (0) makes it non-profitable, as a result of the value being captured by the virtual shares (out of the attacker's\n * donation) matching the attacker's expected gains. With a larger offset, the attack becomes orders of magnitude more\n * expensive than it is profitable. More details about the underlying math can be found\n * xref:erc4626.adoc#inflation-attack[here].\n *\n * The drawback of this approach is that the virtual shares do capture (a very small) part of the value being accrued\n * to the vault. Also, if the vault experiences losses, the users try to exit the vault, the virtual shares and assets\n * will cause the first user to exit to experience reduced losses in detriment to the last users that will experience\n * bigger losses. Developers willing to revert back to the pre-v4.9 behavior just need to override the\n * `_convertToShares` and `_convertToAssets` functions.\n *\n * To learn more, check out our xref:ROOT:erc4626.adoc[ERC-4626 guide].\n * ====\n */\nabstract contract ERC4626 is ERC20, IERC4626 {\n    using Math for uint256;\n\n    IERC20 private immutable _asset;\n    uint8 private immutable _underlyingDecimals;\n\n    /**\n     * @dev Attempted to deposit more assets than the max amount for `receiver`.\n     */\n    error ERC4626ExceededMaxDeposit(address receiver, uint256 assets, uint256 max);\n\n    /**\n     * @dev Attempted to mint more shares than the max amount for `receiver`.\n     */\n    error ERC4626ExceededMaxMint(address receiver, uint256 shares, uint256 max);\n\n    /**\n     * @dev Attempted to withdraw more assets than the max amount for `receiver`.\n     */\n    error ERC4626ExceededMaxWithdraw(address owner, uint256 assets, uint256 max);\n\n    /**\n     * @dev Attempted to redeem more shares than the max amount for `receiver`.\n     */\n    error ERC4626ExceededMaxRedeem(address owner, uint256 shares, uint256 max);\n\n    /**\n     * @dev Set the underlying asset contract. This must be an ERC20-compatible contract (ERC20 or ERC777).\n     */\n    constructor(IERC20 asset_) {\n        (bool success, uint8 assetDecimals) = _tryGetAssetDecimals(asset_);\n        _underlyingDecimals = success ? assetDecimals : 18;\n        _asset = asset_;\n    }\n\n    /**\n     * @dev Attempts to fetch the asset decimals. A return value of false indicates that the attempt failed in some way.\n     */\n    function _tryGetAssetDecimals(IERC20 asset_) private view returns (bool, uint8) {\n        (bool success, bytes memory encodedDecimals) = address(asset_).staticcall(\n            abi.encodeCall(IERC20Metadata.decimals, ())\n        );\n        if (success && encodedDecimals.length >= 32) {\n            uint256 returnedDecimals = abi.decode(encodedDecimals, (uint256));\n            if (returnedDecimals <= type(uint8).max) {\n                return (true, uint8(returnedDecimals));\n            }\n        }\n        return (false, 0);\n    }\n\n    /**\n     * @dev Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This\n     * \"original\" value is cached during construction of the vault contract. If this read operation fails (e.g., the\n     * asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals.\n     *\n     * See {IERC20Metadata-decimals}.\n     */\n    function decimals() public view virtual override(IERC20Metadata, ERC20) returns (uint8) {\n        return _underlyingDecimals + _decimalsOffset();\n    }\n\n    /** @dev See {IERC4626-asset}. */\n    function asset() public view virtual returns (address) {\n        return address(_asset);\n    }\n\n    /** @dev See {IERC4626-totalAssets}. */\n    function totalAssets() public view virtual returns (uint256) {\n        return _asset.balanceOf(address(this));\n    }\n\n    /** @dev See {IERC4626-convertToShares}. */\n    function convertToShares(uint256 assets) public view virtual returns (uint256) {\n        return _convertToShares(assets, Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-convertToAssets}. */\n    function convertToAssets(uint256 shares) public view virtual returns (uint256) {\n        return _convertToAssets(shares, Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-maxDeposit}. */\n    function maxDeposit(address) public view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    /** @dev See {IERC4626-maxMint}. */\n    function maxMint(address) public view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    /** @dev See {IERC4626-maxWithdraw}. */\n    function maxWithdraw(address owner) public view virtual returns (uint256) {\n        return _convertToAssets(balanceOf(owner), Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-maxRedeem}. */\n    function maxRedeem(address owner) public view virtual returns (uint256) {\n        return balanceOf(owner);\n    }\n\n    /** @dev See {IERC4626-previewDeposit}. */\n    function previewDeposit(uint256 assets) public view virtual returns (uint256) {\n        return _convertToShares(assets, Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-previewMint}. */\n    function previewMint(uint256 shares) public view virtual returns (uint256) {\n        return _convertToAssets(shares, Math.Rounding.Ceil);\n    }\n\n    /** @dev See {IERC4626-previewWithdraw}. */\n    function previewWithdraw(uint256 assets) public view virtual returns (uint256) {\n        return _convertToShares(assets, Math.Rounding.Ceil);\n    }\n\n    /** @dev See {IERC4626-previewRedeem}. */\n    function previewRedeem(uint256 shares) public view virtual returns (uint256) {\n        return _convertToAssets(shares, Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-deposit}. */\n    function deposit(uint256 assets, address receiver) public virtual returns (uint256) {\n        uint256 maxAssets = maxDeposit(receiver);\n        if (assets > maxAssets) {\n            revert ERC4626ExceededMaxDeposit(receiver, assets, maxAssets);\n        }\n\n        uint256 shares = previewDeposit(assets);\n        _deposit(_msgSender(), receiver, assets, shares);\n\n        return shares;\n    }\n\n    /** @dev See {IERC4626-mint}.\n     *\n     * As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero.\n     * In this case, the shares will be minted without requiring any assets to be deposited.\n     */\n    function mint(uint256 shares, address receiver) public virtual returns (uint256) {\n        uint256 maxShares = maxMint(receiver);\n        if (shares > maxShares) {\n            revert ERC4626ExceededMaxMint(receiver, shares, maxShares);\n        }\n\n        uint256 assets = previewMint(shares);\n        _deposit(_msgSender(), receiver, assets, shares);\n\n        return assets;\n    }\n\n    /** @dev See {IERC4626-withdraw}. */\n    function withdraw(uint256 assets, address receiver, address owner) public virtual returns (uint256) {\n        uint256 maxAssets = maxWithdraw(owner);\n        if (assets > maxAssets) {\n            revert ERC4626ExceededMaxWithdraw(owner, assets, maxAssets);\n        }\n\n        uint256 shares = previewWithdraw(assets);\n        _withdraw(_msgSender(), receiver, owner, assets, shares);\n\n        return shares;\n    }\n\n    /** @dev See {IERC4626-redeem}. */\n    function redeem(uint256 shares, address receiver, address owner) public virtual returns (uint256) {\n        uint256 maxShares = maxRedeem(owner);\n        if (shares > maxShares) {\n            revert ERC4626ExceededMaxRedeem(owner, shares, maxShares);\n        }\n\n        uint256 assets = previewRedeem(shares);\n        _withdraw(_msgSender(), receiver, owner, assets, shares);\n\n        return assets;\n    }\n\n    /**\n     * @dev Internal conversion function (from assets to shares) with support for rounding direction.\n     */\n    function _convertToShares(uint256 assets, Math.Rounding rounding) internal view virtual returns (uint256) {\n        return assets.mulDiv(totalSupply() + 10 ** _decimalsOffset(), totalAssets() + 1, rounding);\n    }\n\n    /**\n     * @dev Internal conversion function (from shares to assets) with support for rounding direction.\n     */\n    function _convertToAssets(uint256 shares, Math.Rounding rounding) internal view virtual returns (uint256) {\n        return shares.mulDiv(totalAssets() + 1, totalSupply() + 10 ** _decimalsOffset(), rounding);\n    }\n\n    /**\n     * @dev Deposit/mint common workflow.\n     */\n    function _deposit(address caller, address receiver, uint256 assets, uint256 shares) internal virtual {\n        // If _asset is ERC777, `transferFrom` can trigger a reentrancy BEFORE the transfer happens through the\n        // `tokensToSend` hook. On the other hand, the `tokenReceived` hook, that is triggered after the transfer,\n        // calls the vault, which is assumed not malicious.\n        //\n        // Conclusion: we need to do the transfer before we mint so that any reentrancy would happen before the\n        // assets are transferred and before the shares are minted, which is a valid state.\n        // slither-disable-next-line reentrancy-no-eth\n        SafeERC20.safeTransferFrom(_asset, caller, address(this), assets);\n        _mint(receiver, shares);\n\n        emit Deposit(caller, receiver, assets, shares);\n    }\n\n    /**\n     * @dev Withdraw/redeem common workflow.\n     */\n    function _withdraw(\n        address caller,\n        address receiver,\n        address owner,\n        uint256 assets,\n        uint256 shares\n    ) internal virtual {\n        if (caller != owner) {\n            _spendAllowance(owner, caller, shares);\n        }\n\n        // If _asset is ERC777, `transfer` can trigger a reentrancy AFTER the transfer happens through the\n        // `tokensReceived` hook. On the other hand, the `tokensToSend` hook, that is triggered before the transfer,\n        // calls the vault, which is assumed not malicious.\n        //\n        // Conclusion: we need to do the transfer after the burn so that any reentrancy would happen after the\n        // shares are burned and after the assets are transferred, which is a valid state.\n        _burn(owner, shares);\n        SafeERC20.safeTransfer(_asset, receiver, assets);\n\n        emit Withdraw(caller, receiver, owner, assets, shares);\n    }\n\n    function _decimalsOffset() internal view virtual returns (uint8) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/CustomerContract.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\ninterface IInvokeOracle {\n    function requestData(address _caller) external returns (bytes32 requestId);\n\n    function showPrice() external view returns (uint256);\n}\n\ncontract CustomerContract {\n    address CONTRACTADDR = 0x4C50a698F8148b2560eAdb50a8397b614DcfF6A0;\n    bytes32 public requestId;\n\n    uint256 public _counter;\n\n    struct Temp{\n        uint256 id;\n        string bookName;\n    }\n\n    mapping(uint256 => Temp) public books;\n\n    constructor(){\n        _counter =1;\n    }\n\n    function addBooks(string memory _bookName) public {\n        books[_counter] = Temp(\n            _counter,\n            _bookName\n        );\n        _counter+=1;\n    }\n\n    //Fund this contract with sufficient PLI, before you trigger below function.\n    //Note, below function will not trigger if you do not put PLI in above contract address\n    function getPriceInfo() external returns (bytes32) {\n        (requestId) = IInvokeOracle(CONTRACTADDR).requestData({\n            _caller: msg.sender\n        });\n        return requestId;\n    }\n\n    //TODO - you can customize below function as you want, but below function will give you the pricing value\n    //This function will give you last stored value in the contract\n    function show() external view returns (uint256) {\n        return IInvokeOracle(CONTRACTADDR).showPrice();\n    }\n}\n"},"contracts/interface/IStatus.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\ninterface IStatus {\n    enum FlightStatus {\n        DELAYED,\n        UPCOMING,\n        DEPARTURED,\n        TRANSIT,\n        CANCELLED,\n        ONTIME\n    }\n\n    struct FlightMaster {\n        uint256 flightId;\n        string carrierFlightNumber;\n        string serviceProviderName;\n        address serviceProvider; //Should be metadata hash about the patients\n        uint256 registeredOn;\n        address registeredBy;\n    }\n\n    struct FlightInsurance {\n        uint256 polictyid;\n        address passenger;\n        string carrierFlightNumber;\n        uint256 departureOn;\n        uint256 arrivalOn;\n        uint256 bookedOn;\n        FlightStatus flightStatus;\n        uint256 yearmonthdate;\n        bool processed;\n    }\n}\n"},"contracts/lib/LibError.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nlibrary LibError {\n    //Oracle\n    error Oracle__ErrorPrice();\n\n    //PerBcn\n    error UDex__ErrorInsufficientCollateral();\n    error UDex__ErrorSize();\n    error UDex__PositionAlreadyExist();\n    error UDex__InsufficientPositionCollateral();\n    error UDex__BreaksHealthFactor();\n    error UDex__PositionDoesNotExist();\n}\n"},"contracts/UDex.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\n//import {Oracle} from \"./Oracle.sol\";\n//import {AggregatorV3Interface} from \"@pluginV2/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeCast} from \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\nimport {ERC4626} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport {LibError} from \"./lib/LibError.sol\";\n\ncontract UDex is ERC4626, Ownable, ReentrancyGuard {\n    //================================================================================\n    // Libraries\n    //================================================================================\n    //using Oracle for uint256;\n    using SafeERC20 for IERC20;\n    using SafeCast for int256;\n    using SafeCast for uint256;\n\n    //================================================================================\n    // State Variables\n    //================================================================================\n    //AggregatorV3Interface public immutable i_priceFeed;\n\n    IERC20 public immutable i_xdc;\n\n    PositionsSummary totalLongPositions;\n    PositionsSummary totalShortPositions;\n\n    mapping(address => Position) positions;\n    uint256 public tradersCollateral;\n    uint256 private positionFeeBasisPoints;\n    uint256 public s_totalLiquidityDeposited;\n\n    //================================================================================\n    // Events\n    //================================================================================\n\n    event PositionOpened(\n        address indexed user, bool isLong, uint256 collateral, uint256 size, uint256 xdcAmount, uint256 avgXdcPrice\n    );\n\n    event PositionDecreased(address indexed user, uint256 collateralDecreased, uint256 sizeDecreased);\n\n    //================================================================================\n    // Custom Structs\n    //================================================================================\n    struct Position {\n        uint256 collateral;\n        uint256 avgXdcPrice;\n        uint256 xdcAmount;\n        bool isLong;\n        uint256 lastChangeTimestamp;\n    }\n\n    struct PositionsSummary {\n        uint256 sizeInUsdt;\n        uint256 sizeInXdc;\n    }\n\n    //================================================================================\n    // Constants\n    //================================================================================\n\n    uint256 public constant MAX_LEVARAGE = 15;\n\n    constructor(address priceFeed, IERC20 _xdc) ERC4626(_xdc) ERC20(\"UDex\", \"UDX\") Ownable(msg.sender) {\n        //i_priceFeed = AggregatorV3Interface(priceFeed);\n        i_xdc = IERC20(_xdc);\n    }\n\n    //================================================================================\n    // Override ERC4626\n    //================================================================================\n\n    function totalAssets() public view virtual override returns (uint256) {\n        int256 tradersPnL = getTradersPnL();\n        if (tradersPnL > 0) {\n            return super.totalAssets() - tradersPnL.toUint256() - tradersCollateral;\n        }\n        tradersPnL = -tradersPnL;\n        return super.totalAssets() + tradersPnL.toUint256() - tradersCollateral;\n    }\n\n    function deposit(uint256 assets, address receiver) public override nonReentrant returns (uint256 shares) {\n        uint256 newTotalLiquidity = s_totalLiquidityDeposited + assets;\n        shares = super.deposit(assets, receiver);\n        s_totalLiquidityDeposited = newTotalLiquidity;\n    }\n\n    function withdraw(uint256 assets, address receiver, address owner)\n        public\n        override\n        nonReentrant\n        returns (uint256 shares)\n    {\n        uint256 newTotalLiquidity = s_totalLiquidityDeposited - assets;\n        shares = super.withdraw(assets, receiver, owner);\n        s_totalLiquidityDeposited = newTotalLiquidity;\n    }\n\n    function mint(uint256 shares, address receiver) public override nonReentrant returns (uint256 assets) {\n        assets = super.mint(shares, receiver);\n        s_totalLiquidityDeposited += assets;\n    }\n\n    function redeem(uint256 shares, address receiver, address owner)\n        public\n        override\n        nonReentrant\n        returns (uint256 assets)\n    {\n        assets = super.redeem(shares, receiver, owner);\n        s_totalLiquidityDeposited -= assets;\n    }\n    //================================================================================\n    // Traders functionality\n    //================================================================================\n\n    function tryfunction(bool isTrue) public returns (bool) {\n        return true;\n    }\n\n    function openPosition(uint256 size, uint256 collateral, uint256 currentXDCPrice, bool isLong) public {\n        if (collateral <= 0) {\n            revert LibError.UDex__ErrorInsufficientCollateral();\n        }\n        if (size <= 0) {\n            revert LibError.UDex__ErrorSize();\n        }\n        if (positions[msg.sender].collateral != 0) {\n            revert LibError.UDex__PositionAlreadyExist();\n        }\n\n        /* uint256 currentXDCPrice = getPrice(); */\n\n        //createPosition\n        Position memory position = Position({\n            avgXdcPrice: currentXDCPrice, //review about decimals precision\n            collateral: collateral, //same review\n            xdcAmount: size / currentXDCPrice, // review\n            isLong: isLong,\n            lastChangeTimestamp: block.timestamp\n        });\n        _checkPositionHealth(position, currentXDCPrice);\n        i_xdc.safeTransferFrom(msg.sender, address(this), collateral);\n\n        //contract state\n        tradersCollateral += position.collateral;\n        positions[msg.sender] = position;\n        _increasePositionsSumary(size, position.xdcAmount, isLong); //review decimals\n\n        emit PositionOpened(msg.sender, position.isLong, size, collateral, position.xdcAmount, position.avgXdcPrice);\n    }\n\n    /*  */\n\n    //================================================================================\n    // Public utility functions\n    //================================================================================\n    function getPosition(address owner) public view returns (Position memory position) {\n        Position memory requestedPosition = positions[owner];\n        if (requestedPosition.collateral == 0) {\n            revert LibError.UDex__PositionDoesNotExist();\n        }\n        return positions[owner];\n    }\n\n    function getTradersPnL() public view returns (int256) {\n        int256 longPnL =\n        //  200000e8 xdc   10000usdt\n         getUsdtValue(totalLongPositions.sizeInXdc, 1).toInt256() - totalLongPositions.sizeInUsdt.toInt256();\n\n        int256 shortPnL =\n            totalShortPositions.sizeInUsdt.toInt256() - getUsdtValue(totalShortPositions.sizeInXdc, 1).toInt256();\n\n        return (shortPnL + longPnL) / 1e18; //REVIEW\n    }\n\n    //================================================================================\n    // Oracle Price\n    //================================================================================\n    /* function getPrice() public view returns (uint256) {\n        return Oracle.getPrice(i_priceFeed);\n    }\n\n    function getUsdtValue(uint256 amount) public view returns (uint256) {\n        uint256 usdtValue = amount.getConversionRateinUsdt(i_priceFeed);\n        return (usdtValue);\n    } */\n\n    function getPrice(uint256 currentXDCPrice) public view returns (uint256) {\n        return currentXDCPrice;\n    }\n\n    function getUsdtValue(uint256 amount, uint256 currentXDCPrice) public view returns (uint256) {\n        uint256 xdcPrice = getPrice(currentXDCPrice);\n        uint256 xdcAmountInUsdt = (xdcPrice * amount);\n        return xdcAmountInUsdt;\n    }\n    //================================================================================\n    // Internal functions\n    //================================================================================\n\n    function _increasePositionsSumary(uint256 sizeInUsdt, uint256 sizeInXdc, bool isLong) internal {\n        if (isLong) {\n            totalLongPositions.sizeInUsdt += sizeInUsdt;\n            totalLongPositions.sizeInXdc += sizeInXdc;\n        } else {\n            totalShortPositions.sizeInUsdt += sizeInUsdt;\n            totalShortPositions.sizeInXdc += sizeInXdc;\n        }\n    }\n\n    function _decreasePositionsSummary(uint256 sizeInUsdt, uint256 sizeInXdc, bool isLong) internal {\n        if (isLong) {\n            totalLongPositions.sizeInUsdt -= sizeInUsdt;\n            totalLongPositions.sizeInXdc -= sizeInXdc;\n        } else {\n            totalShortPositions.sizeInUsdt -= sizeInUsdt;\n            totalShortPositions.sizeInXdc -= sizeInXdc;\n        }\n    }\n\n    function _checkPositionHealth(Position memory position, uint256 currentXdcPrice) internal pure {\n        int256 positionPnL = _calculatePositionPnL(position, currentXdcPrice);\n\n        if (position.collateral.toInt256() + positionPnL <= 0) {\n            revert LibError.UDex__InsufficientPositionCollateral();\n        }\n\n        uint256 positionCollateral = (position.collateral.toInt256() + positionPnL).toUint256();\n\n        uint256 levarage = ((position.xdcAmount * position.avgXdcPrice) / positionCollateral); // review\n\n        if (levarage >= MAX_LEVARAGE) {\n            revert LibError.UDex__BreaksHealthFactor();\n        }\n    }\n\n    function _calculatePositionPnL(Position memory position, uint256 currentXdcPrice) internal pure returns (int256) {\n        int256 currentPositionValue = (position.xdcAmount * currentXdcPrice).toInt256();\n        // 100000 * 0.05 = 5000\n        int256 positionValueWhenCreated = (position.xdcAmount * position.avgXdcPrice).toInt256();\n        // 100000 * 0.05 = 5000\n        if (position.isLong) {\n            return (currentPositionValue - positionValueWhenCreated);\n        } else {\n            return (positionValueWhenCreated - currentPositionValue);\n        }\n    } // review all function about decimals precision\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/UDex.sol:72:17:\n   |\n72 |     constructor(address priceFeed, IERC20 _xdc) ERC4626(_xdc) ERC20(\"UDex\", \"UDX\") Ownable(msg.sender) {\n   |                 ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":2879,"file":"contracts/UDex.sol","start":2862},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/UDex.sol:125:26:\n    |\n125 |     function tryfunction(bool isTrue) public returns (bool) {\n    |                          ^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4978,"file":"contracts/UDex.sol","start":4967},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/UDex.sol:125:5:\n    |\n125 |     function tryfunction(bool isTrue) public returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":5030,"file":"contracts/UDex.sol","start":4946},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/UDex.sol:197:5:\n    |\n197 |     function getPrice(uint256 currentXDCPrice) public view returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":7870,"file":"contracts/UDex.sol","start":7758},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2359],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2360,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2359,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2359],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC4626.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","exportedSymbols":{"IERC20":[1047],"IERC20Metadata":[1758],"IERC4626":[317]},"id":318,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":318,"sourceUnit":1048,"src":"133:49:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"../token/ERC20/extensions/IERC20Metadata.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":318,"sourceUnit":1759,"src":"183:76:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"191:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["420:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"420:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"420:6:1"},{"baseName":{"id":157,"name":"IERC20Metadata","nameLocations":["428:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":1758,"src":"428:14:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"428:14:1"}],"canonicalName":"IERC4626","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"261:136:1","text":" @dev Interface of the ERC4626 \"Tokenized Vault Standard\", as defined in\n https://eips.ethereum.org/EIPS/eip-4626[ERC-4626]."},"fullyImplemented":false,"id":317,"linearizedBaseContracts":[317,1758,1047],"name":"IERC4626","nameLocation":"408:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"dcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7","id":168,"name":"Deposit","nameLocation":"455:7:1","nodeType":"EventDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"479:6:1","nodeType":"VariableDeclaration","scope":168,"src":"463:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"463:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"503:5:1","nodeType":"VariableDeclaration","scope":168,"src":"487:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"518:6:1","nodeType":"VariableDeclaration","scope":168,"src":"510:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"510:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":166,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"534:6:1","nodeType":"VariableDeclaration","scope":168,"src":"526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"462:79:1"},"src":"449:93:1"},{"anonymous":false,"eventSelector":"fbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db","id":180,"name":"Withdraw","nameLocation":"554:8:1","nodeType":"EventDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"588:6:1","nodeType":"VariableDeclaration","scope":180,"src":"572:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"620:8:1","nodeType":"VariableDeclaration","scope":180,"src":"604:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"604:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"654:5:1","nodeType":"VariableDeclaration","scope":180,"src":"638:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"638:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":176,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"677:6:1","nodeType":"VariableDeclaration","scope":180,"src":"669:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"669:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":178,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"701:6:1","nodeType":"VariableDeclaration","scope":180,"src":"693:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"562:151:1"},"src":"548:166:1"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"720:207:1","text":" @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n - MUST be an ERC-20 token contract.\n - MUST NOT revert."},"functionSelector":"38d52e0f","id":186,"implemented":false,"kind":"function","modifiers":[],"name":"asset","nameLocation":"941:5:1","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"946:2:1"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"assetTokenAddress","nameLocation":"980:17:1","nodeType":"VariableDeclaration","scope":186,"src":"972:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"972:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"971:27:1"},"scope":317,"src":"932:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"1005:286:1","text":" @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n - SHOULD include any compounding that occurs from yield.\n - MUST be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT revert."},"functionSelector":"01e1d114","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"1305:11:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"1316:2:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"totalManagedAssets","nameLocation":"1350:18:1","nodeType":"VariableDeclaration","scope":192,"src":"1342:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"1342:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1341:28:1"},"scope":317,"src":"1296:74:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"1376:720:1","text":" @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."},"functionSelector":"c6e6f592","id":200,"implemented":false,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"2110:15:1","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"assets","nameLocation":"2134:6:1","nodeType":"VariableDeclaration","scope":200,"src":"2126:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2125:16:1"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"shares","nameLocation":"2173:6:1","nodeType":"VariableDeclaration","scope":200,"src":"2165:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2165:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2164:16:1"},"scope":317,"src":"2101:80:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2187:720:1","text":" @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."},"functionSelector":"07a2d13a","id":208,"implemented":false,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"2921:15:1","nodeType":"FunctionDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"shares","nameLocation":"2945:6:1","nodeType":"VariableDeclaration","scope":208,"src":"2937:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2937:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2936:16:1"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"assets","nameLocation":"2984:6:1","nodeType":"VariableDeclaration","scope":208,"src":"2976:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"2976:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2975:16:1"},"scope":317,"src":"2912:80:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"2998:386:1","text":" @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n through a deposit call.\n - MUST return a limited value if receiver is subject to some deposit limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n - MUST NOT revert."},"functionSelector":"402d267d","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"maxDeposit","nameLocation":"3398:10:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"receiver","nameLocation":"3417:8:1","nodeType":"VariableDeclaration","scope":216,"src":"3409:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"3409:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3408:18:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"maxAssets","nameLocation":"3458:9:1","nodeType":"VariableDeclaration","scope":216,"src":"3450:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3450:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3449:19:1"},"scope":317,"src":"3389:80:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3475:1012:1","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n current on-chain conditions.\n - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n   in the same transaction.\n - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."},"functionSelector":"ef8b30f7","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"previewDeposit","nameLocation":"4501:14:1","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"assets","nameLocation":"4524:6:1","nodeType":"VariableDeclaration","scope":224,"src":"4516:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4515:16:1"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"shares","nameLocation":"4563:6:1","nodeType":"VariableDeclaration","scope":224,"src":"4555:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:16:1"},"scope":317,"src":"4492:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"4577:651:1","text":" @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   deposit execution, and are accounted for during deposit.\n - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"functionSelector":"6e553f65","id":234,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"5242:7:1","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"assets","nameLocation":"5258:6:1","nodeType":"VariableDeclaration","scope":234,"src":"5250:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"5250:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"receiver","nameLocation":"5274:8:1","nodeType":"VariableDeclaration","scope":234,"src":"5266:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5249:34:1"},"returnParameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"shares","nameLocation":"5310:6:1","nodeType":"VariableDeclaration","scope":234,"src":"5302:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"5302:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5301:16:1"},"scope":317,"src":"5233:85:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"5324:341:1","text":" @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n - MUST return a limited value if receiver is subject to some mint limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n - MUST NOT revert."},"functionSelector":"c63d75b6","id":242,"implemented":false,"kind":"function","modifiers":[],"name":"maxMint","nameLocation":"5679:7:1","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"receiver","nameLocation":"5695:8:1","nodeType":"VariableDeclaration","scope":242,"src":"5687:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"5687:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5686:18:1"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"maxShares","nameLocation":"5736:9:1","nodeType":"VariableDeclaration","scope":242,"src":"5728:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"5728:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5727:19:1"},"scope":317,"src":"5670:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"5753:984:1","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n   same transaction.\n - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n   would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by minting."},"functionSelector":"b3d7f6b9","id":250,"implemented":false,"kind":"function","modifiers":[],"name":"previewMint","nameLocation":"6751:11:1","nodeType":"FunctionDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"shares","nameLocation":"6771:6:1","nodeType":"VariableDeclaration","scope":250,"src":"6763:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"6763:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6762:16:1"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"assets","nameLocation":"6810:6:1","nodeType":"VariableDeclaration","scope":250,"src":"6802:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"6802:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6801:16:1"},"scope":317,"src":"6742:76:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"6824:642:1","text":" @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n   execution, and are accounted for during mint.\n - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"functionSelector":"94bf804d","id":260,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"7480:4:1","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"shares","nameLocation":"7493:6:1","nodeType":"VariableDeclaration","scope":260,"src":"7485:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"7485:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"receiver","nameLocation":"7509:8:1","nodeType":"VariableDeclaration","scope":260,"src":"7501:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7484:34:1"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"assets","nameLocation":"7545:6:1","nodeType":"VariableDeclaration","scope":260,"src":"7537:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"7537:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7536:16:1"},"scope":317,"src":"7471:82:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"7559:293:1","text":" @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n Vault, through a withdraw call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST NOT revert."},"functionSelector":"ce96cb77","id":268,"implemented":false,"kind":"function","modifiers":[],"name":"maxWithdraw","nameLocation":"7866:11:1","nodeType":"FunctionDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"owner","nameLocation":"7886:5:1","nodeType":"VariableDeclaration","scope":268,"src":"7878:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"7878:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7877:15:1"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"maxAssets","nameLocation":"7924:9:1","nodeType":"VariableDeclaration","scope":268,"src":"7916:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"7916:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7915:19:1"},"scope":317,"src":"7857:78:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"7941:1034:1","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n given current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n   called\n   in the same transaction.\n - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."},"functionSelector":"0a28a477","id":276,"implemented":false,"kind":"function","modifiers":[],"name":"previewWithdraw","nameLocation":"8989:15:1","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"assets","nameLocation":"9013:6:1","nodeType":"VariableDeclaration","scope":276,"src":"9005:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"9005:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9004:16:1"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"shares","nameLocation":"9052:6:1","nodeType":"VariableDeclaration","scope":276,"src":"9044:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"9044:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9043:16:1"},"scope":317,"src":"8980:80:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"9066:670:1","text":" @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   withdraw execution, and are accounted for during withdraw.\n - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."},"functionSelector":"b460af94","id":288,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"9750:8:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"assets","nameLocation":"9767:6:1","nodeType":"VariableDeclaration","scope":288,"src":"9759:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"9759:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"receiver","nameLocation":"9783:8:1","nodeType":"VariableDeclaration","scope":288,"src":"9775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"9775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"owner","nameLocation":"9801:5:1","nodeType":"VariableDeclaration","scope":288,"src":"9793:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"9793:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9758:49:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"shares","nameLocation":"9834:6:1","nodeType":"VariableDeclaration","scope":288,"src":"9826:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"9826:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9825:16:1"},"scope":317,"src":"9741:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"9848:381:1","text":" @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n through a redeem call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n - MUST NOT revert."},"functionSelector":"d905777e","id":296,"implemented":false,"kind":"function","modifiers":[],"name":"maxRedeem","nameLocation":"10243:9:1","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"owner","nameLocation":"10261:5:1","nodeType":"VariableDeclaration","scope":296,"src":"10253:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"10253:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10252:15:1"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"maxShares","nameLocation":"10299:9:1","nodeType":"VariableDeclaration","scope":296,"src":"10291:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"10291:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10290:19:1"},"scope":317,"src":"10234:76:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"10316:1010:1","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n given current on-chain conditions.\n - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n   same transaction.\n - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n   redemption would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by redeeming."},"functionSelector":"4cdad506","id":304,"implemented":false,"kind":"function","modifiers":[],"name":"previewRedeem","nameLocation":"11340:13:1","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"shares","nameLocation":"11362:6:1","nodeType":"VariableDeclaration","scope":304,"src":"11354:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"11354:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11353:16:1"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"assets","nameLocation":"11401:6:1","nodeType":"VariableDeclaration","scope":304,"src":"11393:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"11393:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11392:16:1"},"scope":317,"src":"11331:78:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"11415:661:1","text":" @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   redeem execution, and are accounted for during redeem.\n - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."},"functionSelector":"ba087652","id":316,"implemented":false,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"12090:6:1","nodeType":"FunctionDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"shares","nameLocation":"12105:6:1","nodeType":"VariableDeclaration","scope":316,"src":"12097:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"12097:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"receiver","nameLocation":"12121:8:1","nodeType":"VariableDeclaration","scope":316,"src":"12113:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"12113:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"owner","nameLocation":"12139:5:1","nodeType":"VariableDeclaration","scope":316,"src":"12131:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"12131:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12096:49:1"},"returnParameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"assets","nameLocation":"12172:6:1","nodeType":"VariableDeclaration","scope":316,"src":"12164:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"12164:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:16:1"},"scope":317,"src":"12081:99:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":318,"src":"398:11784:1","usedErrors":[],"usedEvents":[168,180,981,990]}],"src":"107:12076:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[454],"IERC20Errors":[359],"IERC721Errors":[407]},"id":455,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":319,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"138:139:2","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":359,"linearizedBaseContracts":[359],"name":"IERC20Errors","nameLocation":"288:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"307:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":329,"name":"ERC20InsufficientBalance","nameLocation":"627:24:2","nodeType":"ErrorDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"sender","nameLocation":"660:6:2","nodeType":"VariableDeclaration","scope":329,"src":"652:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"mutability":"mutable","name":"balance","nameLocation":"676:7:2","nodeType":"VariableDeclaration","scope":329,"src":"668:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"needed","nameLocation":"693:6:2","nodeType":"VariableDeclaration","scope":329,"src":"685:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:2"},"src":"621:80:2"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"707:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":334,"name":"ERC20InvalidSender","nameLocation":"870:18:2","nodeType":"ErrorDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"sender","nameLocation":"897:6:2","nodeType":"VariableDeclaration","scope":334,"src":"889:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:2"},"src":"864:41:2"},{"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"911:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":339,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:2","nodeType":"ErrorDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:2","nodeType":"VariableDeclaration","scope":339,"src":"1102:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:2"},"src":"1075:45:2"},{"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"1126:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":348,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:2","nodeType":"ErrorDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"spender","nameLocation":"1517:7:2","nodeType":"VariableDeclaration","scope":348,"src":"1509:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:2","nodeType":"VariableDeclaration","scope":348,"src":"1526:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"needed","nameLocation":"1553:6:2","nodeType":"VariableDeclaration","scope":348,"src":"1545:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:2"},"src":"1476:85:2"},{"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"1567:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":353,"name":"ERC20InvalidApprover","nameLocation":"1752:20:2","nodeType":"ErrorDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"approver","nameLocation":"1781:8:2","nodeType":"VariableDeclaration","scope":353,"src":"1773:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:2"},"src":"1746:45:2"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"1797:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":358,"name":"ERC20InvalidSpender","nameLocation":"2003:19:2","nodeType":"ErrorDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"spender","nameLocation":"2031:7:2","nodeType":"VariableDeclaration","scope":358,"src":"2023:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:2"},"src":"1997:43:2"}],"scope":455,"src":"278:1764:2","usedErrors":[329,334,339,348,353,358],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"2044:141:2","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":407,"linearizedBaseContracts":[407],"name":"IERC721Errors","nameLocation":"2196:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"2216:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":365,"name":"ERC721InvalidOwner","nameLocation":"2446:18:2","nodeType":"ErrorDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"owner","nameLocation":"2473:5:2","nodeType":"VariableDeclaration","scope":365,"src":"2465:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:2"},"src":"2440:40:2"},{"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"2486:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":370,"name":"ERC721NonexistentToken","nameLocation":"2629:22:2","nodeType":"ErrorDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:2","nodeType":"VariableDeclaration","scope":370,"src":"2652:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":367,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:2"},"src":"2623:46:2"},{"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2675:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":379,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:2","nodeType":"ErrorDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"sender","nameLocation":"3004:6:2","nodeType":"VariableDeclaration","scope":379,"src":"2996:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:2","nodeType":"VariableDeclaration","scope":379,"src":"3012:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"owner","nameLocation":"3037:5:2","nodeType":"VariableDeclaration","scope":379,"src":"3029:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:2"},"src":"2969:75:2"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"3050:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":384,"name":"ERC721InvalidSender","nameLocation":"3213:19:2","nodeType":"ErrorDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"sender","nameLocation":"3241:6:2","nodeType":"VariableDeclaration","scope":384,"src":"3233:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:2"},"src":"3207:42:2"},{"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"3255:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":389,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:2","nodeType":"ErrorDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:2","nodeType":"VariableDeclaration","scope":389,"src":"3447:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:2"},"src":"3419:46:2"},{"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"3471:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":396,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:2","nodeType":"ErrorDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"operator","nameLocation":"3764:8:2","nodeType":"VariableDeclaration","scope":396,"src":"3756:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":391,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:2","nodeType":"VariableDeclaration","scope":396,"src":"3774:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:2"},"src":"3723:68:2"},{"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"3797:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":401,"name":"ERC721InvalidApprover","nameLocation":"3982:21:2","nodeType":"ErrorDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"approver","nameLocation":"4012:8:2","nodeType":"VariableDeclaration","scope":401,"src":"4004:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:2"},"src":"3976:46:2"},{"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"4028:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":406,"name":"ERC721InvalidOperator","nameLocation":"4236:21:2","nodeType":"ErrorDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"operator","nameLocation":"4266:8:2","nodeType":"VariableDeclaration","scope":406,"src":"4258:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:2"},"src":"4230:46:2"}],"scope":455,"src":"2186:2092:2","usedErrors":[365,370,379,384,389,396,401,406],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"4280:143:2","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":454,"linearizedBaseContracts":[454],"name":"IERC1155Errors","nameLocation":"4434:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"4455:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":419,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:2","nodeType":"ErrorDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"sender","nameLocation":"4862:6:2","nodeType":"VariableDeclaration","scope":419,"src":"4854:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"balance","nameLocation":"4878:7:2","nodeType":"VariableDeclaration","scope":419,"src":"4870:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"needed","nameLocation":"4895:6:2","nodeType":"VariableDeclaration","scope":419,"src":"4887:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:2","nodeType":"VariableDeclaration","scope":419,"src":"4903:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:2"},"src":"4821:99:2"},{"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"4926:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":424,"name":"ERC1155InvalidSender","nameLocation":"5089:20:2","nodeType":"ErrorDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"sender","nameLocation":"5118:6:2","nodeType":"VariableDeclaration","scope":424,"src":"5110:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:2"},"src":"5083:43:2"},{"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"5132:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":429,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:2","nodeType":"ErrorDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:2","nodeType":"VariableDeclaration","scope":429,"src":"5325:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:2"},"src":"5296:47:2"},{"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"5349:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":436,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:2","nodeType":"ErrorDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"operator","nameLocation":"5653:8:2","nodeType":"VariableDeclaration","scope":436,"src":"5645:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":434,"mutability":"mutable","name":"owner","nameLocation":"5671:5:2","nodeType":"VariableDeclaration","scope":436,"src":"5663:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":433,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:2"},"src":"5610:68:2"},{"documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"5684:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":441,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:2","nodeType":"ErrorDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"approver","nameLocation":"5900:8:2","nodeType":"VariableDeclaration","scope":441,"src":"5892:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:2"},"src":"5863:47:2"},{"documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"5916:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":446,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:2","nodeType":"ErrorDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"operator","nameLocation":"6155:8:2","nodeType":"VariableDeclaration","scope":446,"src":"6147:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:2"},"src":"6118:47:2"},{"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"6171:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":453,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:2","nodeType":"ErrorDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:2","nodeType":"VariableDeclaration","scope":453,"src":"6488:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:2","nodeType":"VariableDeclaration","scope":453,"src":"6507:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:2"},"src":"6456:73:2"}],"scope":455,"src":"4424:2107:2","usedErrors":[419,424,429,436,441,446,453],"usedEvents":[]}],"src":"112:6420:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2359],"ERC20":[969],"IERC20":[1047],"IERC20Errors":[359],"IERC20Metadata":[1758]},"id":970,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":456,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":970,"sourceUnit":1048,"src":"131:36:3","symbolAliases":[{"foreign":{"id":457,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":970,"sourceUnit":1759,"src":"168:63:3","symbolAliases":[{"foreign":{"id":459,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"176:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":462,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":970,"sourceUnit":2360,"src":"232:48:3","symbolAliases":[{"foreign":{"id":461,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"240:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":464,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":970,"sourceUnit":455,"src":"281:65:3","symbolAliases":[{"foreign":{"id":463,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"289:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":466,"name":"Context","nameLocations":["1428:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2359,"src":"1428:7:3"},"id":467,"nodeType":"InheritanceSpecifier","src":"1428:7:3"},{"baseName":{"id":468,"name":"IERC20","nameLocations":["1437:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"1437:6:3"},"id":469,"nodeType":"InheritanceSpecifier","src":"1437:6:3"},{"baseName":{"id":470,"name":"IERC20Metadata","nameLocations":["1445:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1758,"src":"1445:14:3"},"id":471,"nodeType":"InheritanceSpecifier","src":"1445:14:3"},{"baseName":{"id":472,"name":"IERC20Errors","nameLocations":["1461:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":359,"src":"1461:12:3"},"id":473,"nodeType":"InheritanceSpecifier","src":"1461:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":465,"nodeType":"StructuredDocumentation","src":"348:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":969,"linearizedBaseContracts":[969,359,1758,1047,2359],"name":"ERC20","nameLocation":"1419:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":477,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:3","nodeType":"VariableDeclaration","scope":969,"src":"1480:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":476,"keyName":"account","keyNameLocation":"1496:7:3","keyType":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":483,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:3","nodeType":"VariableDeclaration","scope":969,"src":"1540:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":482,"keyName":"account","keyNameLocation":"1556:7:3","keyType":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":481,"keyName":"spender","keyNameLocation":"1583:7:3","keyType":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":485,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:3","nodeType":"VariableDeclaration","scope":969,"src":"1630:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":487,"mutability":"mutable","name":"_name","nameLocation":"1680:5:3","nodeType":"VariableDeclaration","scope":969,"src":"1665:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":486,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":489,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:3","nodeType":"VariableDeclaration","scope":969,"src":"1691:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":488,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":505,"nodeType":"Block","src":"1952:57:3","statements":[{"expression":{"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":497,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"1962:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":498,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"1970:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":500,"nodeType":"ExpressionStatement","src":"1962:13:3"},{"expression":{"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":501,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"1985:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":502,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"1995:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":504,"nodeType":"ExpressionStatement","src":"1985:17:3"}]},"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"1720:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":506,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"name_","nameLocation":"1922:5:3","nodeType":"VariableDeclaration","scope":506,"src":"1908:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":491,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:3","nodeType":"VariableDeclaration","scope":506,"src":"1929:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":493,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:3"},"returnParameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"1952:0:3"},"scope":969,"src":"1896:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1745],"body":{"id":514,"nodeType":"Block","src":"2134:29:3","statements":[{"expression":{"id":512,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"2151:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":511,"id":513,"nodeType":"Return","src":"2144:12:3"}]},"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"2015:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":515,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:3","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[],"src":"2087:2:3"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":515,"src":"2119:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":509,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:3"},"scope":969,"src":"2074:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1751],"body":{"id":523,"nodeType":"Block","src":"2338:31:3","statements":[{"expression":{"id":521,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2355:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":520,"id":522,"nodeType":"Return","src":"2348:14:3"}]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"2169:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":524,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:3","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"2291:2:3"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":524,"src":"2323:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":518,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:3"},"scope":969,"src":"2276:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1757],"body":{"id":532,"nodeType":"Block","src":"3058:26:3","statements":[{"expression":{"hexValue":"3138","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":529,"id":531,"nodeType":"Return","src":"3068:9:3"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"2375:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":533,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:3","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"3019:2:3"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":533,"src":"3051:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":527,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:3"},"scope":969,"src":"3002:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[996],"body":{"id":541,"nodeType":"Block","src":"3205:36:3","statements":[{"expression":{"id":539,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3222:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":538,"id":540,"nodeType":"Return","src":"3215:19:3"}]},"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"3090:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":542,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:3","nodeType":"FunctionDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"3164:2:3"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":542,"src":"3196:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:3"},"scope":969,"src":"3144:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1004],"body":{"id":554,"nodeType":"Block","src":"3373:42:3","statements":[{"expression":{"baseExpression":{"id":550,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3390:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":552,"indexExpression":{"id":551,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"3400:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":549,"id":553,"nodeType":"Return","src":"3383:25:3"}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"3247:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":555,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:3","nodeType":"FunctionDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"account","nameLocation":"3326:7:3","nodeType":"VariableDeclaration","scope":555,"src":"3318:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:3"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"3364:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:3"},"scope":969,"src":"3299:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1014],"body":{"id":578,"nodeType":"Block","src":"3685:103:3","statements":[{"assignments":[566],"declarations":[{"constant":false,"id":566,"mutability":"mutable","name":"owner","nameLocation":"3703:5:3","nodeType":"VariableDeclaration","scope":578,"src":"3695:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":569,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":567,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3711:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:3"},{"expression":{"arguments":[{"id":571,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"3743:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":572,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"3750:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3754:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":570,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"3733:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":575,"nodeType":"ExpressionStatement","src":"3733:27:3"},{"expression":{"hexValue":"74727565","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":564,"id":577,"nodeType":"Return","src":"3770:11:3"}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"3421:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":579,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:3","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"to","nameLocation":"3636:2:3","nodeType":"VariableDeclaration","scope":579,"src":"3628:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"value","nameLocation":"3648:5:3","nodeType":"VariableDeclaration","scope":579,"src":"3640:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:3"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"3679:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":562,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:3"},"scope":969,"src":"3610:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1024],"body":{"id":595,"nodeType":"Block","src":"3935:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":589,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"3952:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":591,"indexExpression":{"id":590,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"3964:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":593,"indexExpression":{"id":592,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"3971:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":588,"id":594,"nodeType":"Return","src":"3945:34:3"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"3794:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":596,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:3","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"owner","nameLocation":"3873:5:3","nodeType":"VariableDeclaration","scope":596,"src":"3865:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"spender","nameLocation":"3888:7:3","nodeType":"VariableDeclaration","scope":596,"src":"3880:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:3"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":596,"src":"3926:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":586,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:3"},"scope":969,"src":"3846:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1034],"body":{"id":619,"nodeType":"Block","src":"4372:107:3","statements":[{"assignments":[607],"declarations":[{"constant":false,"id":607,"mutability":"mutable","name":"owner","nameLocation":"4390:5:3","nodeType":"VariableDeclaration","scope":619,"src":"4382:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":610,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":608,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"4398:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:3"},{"expression":{"arguments":[{"id":612,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"4429:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":613,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"4436:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"4445:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":611,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[860,920],"referencedDeclaration":860,"src":"4420:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"4420:31:3"},{"expression":{"hexValue":"74727565","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":605,"id":618,"nodeType":"Return","src":"4461:11:3"}]},"documentation":{"id":597,"nodeType":"StructuredDocumentation","src":"3992:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":620,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:3","nodeType":"FunctionDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"spender","nameLocation":"4318:7:3","nodeType":"VariableDeclaration","scope":620,"src":"4310:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":601,"mutability":"mutable","name":"value","nameLocation":"4335:5:3","nodeType":"VariableDeclaration","scope":620,"src":"4327:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:3"},"returnParameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":620,"src":"4366:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":603,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:3"},"scope":969,"src":"4293:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1046],"body":{"id":651,"nodeType":"Block","src":"5132:151:3","statements":[{"assignments":[633],"declarations":[{"constant":false,"id":633,"mutability":"mutable","name":"spender","nameLocation":"5150:7:3","nodeType":"VariableDeclaration","scope":651,"src":"5142:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":636,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":634,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"5160:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:3"},{"expression":{"arguments":[{"id":638,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"5198:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"5204:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"5213:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":637,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"5182:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"5182:37:3"},{"expression":{"arguments":[{"id":644,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"5239:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":645,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5245:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"5249:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":643,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"5229:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"5229:26:3"},{"expression":{"hexValue":"74727565","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":631,"id":650,"nodeType":"Return","src":"5265:11:3"}]},"documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"4485:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":652,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:3","nodeType":"FunctionDefinition","parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"from","nameLocation":"5069:4:3","nodeType":"VariableDeclaration","scope":652,"src":"5061:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"to","nameLocation":"5083:2:3","nodeType":"VariableDeclaration","scope":652,"src":"5075:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"value","nameLocation":"5095:5:3","nodeType":"VariableDeclaration","scope":652,"src":"5087:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:3"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":652,"src":"5126:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":629,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:3"},"scope":969,"src":"5039:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":698,"nodeType":"Block","src":"5725:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":662,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5739:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:3","typeDescriptions":{}}},"id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":676,"nodeType":"IfStatement","src":"5735:86:3","trueBody":{"id":675,"nodeType":"Block","src":"5759:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:3","typeDescriptions":{}}},"id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":668,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"5780:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":674,"nodeType":"RevertStatement","src":"5773:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":677,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"5834:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:3","typeDescriptions":{}}},"id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":691,"nodeType":"IfStatement","src":"5830:86:3","trueBody":{"id":690,"nodeType":"Block","src":"5852:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:3","typeDescriptions":{}}},"id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":683,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5873:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":689,"nodeType":"RevertStatement","src":"5866:39:3"}]}},{"expression":{"arguments":[{"id":693,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5933:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"5939:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"5943:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":692,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"5925:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":697,"nodeType":"ExpressionStatement","src":"5925:24:3"}]},"documentation":{"id":653,"nodeType":"StructuredDocumentation","src":"5289:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":699,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:3","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"from","nameLocation":"5683:4:3","nodeType":"VariableDeclaration","scope":699,"src":"5675:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"to","nameLocation":"5697:2:3","nodeType":"VariableDeclaration","scope":699,"src":"5689:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"value","nameLocation":"5709:5:3","nodeType":"VariableDeclaration","scope":699,"src":"5701:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:3"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[],"src":"5725:0:3"},"scope":969,"src":"5656:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"6346:1032:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":709,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"6360:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:3","typeDescriptions":{}}},"id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":746,"nodeType":"Block","src":"6534:362:3","statements":[{"assignments":[721],"declarations":[{"constant":false,"id":721,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:3","nodeType":"VariableDeclaration","scope":746,"src":"6548:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":725,"initialValue":{"baseExpression":{"id":722,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6570:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":724,"indexExpression":{"id":723,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"6580:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":726,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"6603:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6617:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":736,"nodeType":"IfStatement","src":"6599:115:3","trueBody":{"id":735,"nodeType":"Block","src":"6624:90:3","statements":[{"errorCall":{"arguments":[{"id":730,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"6674:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":731,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"6680:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6693:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":729,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"6649:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"RevertStatement","src":"6642:57:3"}]}},{"id":745,"nodeType":"UncheckedBlock","src":"6727:159:3","statements":[{"expression":{"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":737,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6834:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":739,"indexExpression":{"id":738,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"6844:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":740,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"6852:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6866:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":744,"nodeType":"ExpressionStatement","src":"6834:37:3"}]}]},"id":747,"nodeType":"IfStatement","src":"6356:540:3","trueBody":{"id":719,"nodeType":"Block","src":"6380:148:3","statements":[{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":715,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"6496:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6512:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":718,"nodeType":"ExpressionStatement","src":"6496:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":748,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"6910:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:3","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":767,"nodeType":"Block","src":"7125:206:3","statements":[{"id":766,"nodeType":"UncheckedBlock","src":"7139:182:3","statements":[{"expression":{"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":760,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"7284:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":762,"indexExpression":{"id":761,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"7294:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"7301:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":765,"nodeType":"ExpressionStatement","src":"7284:22:3"}]}]},"id":768,"nodeType":"IfStatement","src":"6906:425:3","trueBody":{"id":759,"nodeType":"Block","src":"6928:191:3","statements":[{"id":758,"nodeType":"UncheckedBlock","src":"6942:167:3","statements":[{"expression":{"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":754,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"7073:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"7089:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":757,"nodeType":"ExpressionStatement","src":"7073:21:3"}]}]}},{"eventCall":{"arguments":[{"id":770,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"7355:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":771,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"7361:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"7365:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":769,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"7346:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":774,"nodeType":"EmitStatement","src":"7341:30:3"}]},"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"5962:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:3","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"from","nameLocation":"6296:4:3","nodeType":"VariableDeclaration","scope":776,"src":"6288:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"to","nameLocation":"6310:2:3","nodeType":"VariableDeclaration","scope":776,"src":"6302:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"value","nameLocation":"6322:5:3","nodeType":"VariableDeclaration","scope":776,"src":"6314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:3"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[],"src":"6346:0:3"},"scope":969,"src":"6271:1107:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":808,"nodeType":"Block","src":"7777:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"7791:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:3","typeDescriptions":{}}},"id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":798,"nodeType":"IfStatement","src":"7787:91:3","trueBody":{"id":797,"nodeType":"Block","src":"7814:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:3","typeDescriptions":{}}},"id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":790,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7835:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"RevertStatement","src":"7828:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:3","typeDescriptions":{}}},"id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"7907:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"7916:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":799,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"7887:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"ExpressionStatement","src":"7887:35:3"}]},"documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"7384:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":809,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:3","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"account","nameLocation":"7744:7:3","nodeType":"VariableDeclaration","scope":809,"src":"7736:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"value","nameLocation":"7761:5:3","nodeType":"VariableDeclaration","scope":809,"src":"7753:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:3"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[],"src":"7777:0:3"},"scope":969,"src":"7721:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":841,"nodeType":"Block","src":"8303:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":817,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"8317:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:3","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":831,"nodeType":"IfStatement","src":"8313:89:3","trueBody":{"id":830,"nodeType":"Block","src":"8340:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:3","typeDescriptions":{}}},"id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":823,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"8361:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":829,"nodeType":"RevertStatement","src":"8354:37:3"}]}},{"expression":{"arguments":[{"id":833,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"8419:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:3","typeDescriptions":{}}},"id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"8440:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":832,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8411:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":840,"nodeType":"ExpressionStatement","src":"8411:35:3"}]},"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"7935:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":842,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:3","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"account","nameLocation":"8270:7:3","nodeType":"VariableDeclaration","scope":842,"src":"8262:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"value","nameLocation":"8287:5:3","nodeType":"VariableDeclaration","scope":842,"src":"8279:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:3"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"8303:0:3"},"scope":969,"src":"8247:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":859,"nodeType":"Block","src":"9063:54:3","statements":[{"expression":{"arguments":[{"id":853,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"9082:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":854,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"9089:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"9098:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":852,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[860,920],"referencedDeclaration":920,"src":"9073:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"ExpressionStatement","src":"9073:37:3"}]},"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"8459:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":860,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"owner","nameLocation":"9015:5:3","nodeType":"VariableDeclaration","scope":860,"src":"9007:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"spender","nameLocation":"9030:7:3","nodeType":"VariableDeclaration","scope":860,"src":"9022:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"value","nameLocation":"9047:5:3","nodeType":"VariableDeclaration","scope":860,"src":"9039:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:3"},"returnParameters":{"id":851,"nodeType":"ParameterList","parameters":[],"src":"9063:0:3"},"scope":969,"src":"8989:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":919,"nodeType":"Block","src":"10047:334:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":872,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"10061:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:3","typeDescriptions":{}}},"id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":886,"nodeType":"IfStatement","src":"10057:89:3","trueBody":{"id":885,"nodeType":"Block","src":"10082:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:3","typeDescriptions":{}}},"id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":878,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"10103:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"RevertStatement","src":"10096:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":887,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"10159:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:3","typeDescriptions":{}}},"id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":901,"nodeType":"IfStatement","src":"10155:90:3","trueBody":{"id":900,"nodeType":"Block","src":"10182:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:3","typeDescriptions":{}}},"id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":893,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"10203:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":899,"nodeType":"RevertStatement","src":"10196:38:3"}]}},{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":902,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"10254:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":905,"indexExpression":{"id":903,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"10266:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":906,"indexExpression":{"id":904,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"10273:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"10284:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":909,"nodeType":"ExpressionStatement","src":"10254:35:3"},{"condition":{"id":910,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"10303:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":918,"nodeType":"IfStatement","src":"10299:76:3","trueBody":{"id":917,"nodeType":"Block","src":"10314:61:3","statements":[{"eventCall":{"arguments":[{"id":912,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"10342:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":913,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"10349:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"10358:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":911,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"10333:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"EmitStatement","src":"10328:36:3"}]}}]},"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"9123:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":920,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:3","nodeType":"FunctionDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"owner","nameLocation":"9975:5:3","nodeType":"VariableDeclaration","scope":920,"src":"9967:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"spender","nameLocation":"9990:7:3","nodeType":"VariableDeclaration","scope":920,"src":"9982:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"value","nameLocation":"10007:5:3","nodeType":"VariableDeclaration","scope":920,"src":"9999:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:3","nodeType":"VariableDeclaration","scope":920,"src":"10014:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":868,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:3"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[],"src":"10047:0:3"},"scope":969,"src":"9949:432:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":967,"nodeType":"Block","src":"10752:388:3","statements":[{"assignments":[931],"declarations":[{"constant":false,"id":931,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:3","nodeType":"VariableDeclaration","scope":967,"src":"10762:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":936,"initialValue":{"arguments":[{"id":933,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"10799:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":934,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"10806:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":932,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"10789:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":937,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"10828:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":939,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":938,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:3","memberName":"max","nodeType":"MemberAccess","src":"10848:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":966,"nodeType":"IfStatement","src":"10824:310:3","trueBody":{"id":965,"nodeType":"Block","src":"10867:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":944,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"10885:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"10904:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":954,"nodeType":"IfStatement","src":"10881:130:3","trueBody":{"id":953,"nodeType":"Block","src":"10911:100:3","statements":[{"errorCall":{"arguments":[{"id":948,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"10963:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"10972:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"10990:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":947,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"10936:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"RevertStatement","src":"10929:67:3"}]}},{"id":964,"nodeType":"UncheckedBlock","src":"11024:100:3","statements":[{"expression":{"arguments":[{"id":956,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"11061:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":957,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"11068:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":958,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"11077:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"11096:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":955,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[860,920],"referencedDeclaration":920,"src":"11052:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":963,"nodeType":"ExpressionStatement","src":"11052:57:3"}]}]}}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"10387:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":968,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:3","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"owner","nameLocation":"10696:5:3","nodeType":"VariableDeclaration","scope":968,"src":"10688:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"spender","nameLocation":"10711:7:3","nodeType":"VariableDeclaration","scope":968,"src":"10703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"value","nameLocation":"10728:5:3","nodeType":"VariableDeclaration","scope":968,"src":"10720:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:3"},"returnParameters":{"id":929,"nodeType":"ParameterList","parameters":[],"src":"10752:0:3"},"scope":969,"src":"10663:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":970,"src":"1401:9741:3","usedErrors":[329,334,339,348,353,358],"usedEvents":[981,990]}],"src":"105:11038:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1047]},"id":1048,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":971,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"132:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1047,"linearizedBaseContracts":[1047],"name":"IERC20","nameLocation":"213:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"226:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":981,"name":"Transfer","nameLocation":"395:8:4","nodeType":"EventDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:4","nodeType":"VariableDeclaration","scope":981,"src":"404:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":977,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:4","nodeType":"VariableDeclaration","scope":981,"src":"426:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":979,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:4","nodeType":"VariableDeclaration","scope":981,"src":"446:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:4"},"src":"389:72:4"},{"anonymous":false,"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"467:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":990,"name":"Approval","nameLocation":"626:8:4","nodeType":"EventDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:4","nodeType":"VariableDeclaration","scope":990,"src":"635:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:4","nodeType":"VariableDeclaration","scope":990,"src":"658:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":988,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:4","nodeType":"VariableDeclaration","scope":990,"src":"683:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:4"},"src":"620:78:4"},{"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"704:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":996,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":992,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":996,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":1047,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"835:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1004,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:4","nodeType":"FunctionDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"account","nameLocation":"938:7:4","nodeType":"VariableDeclaration","scope":1004,"src":"930:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:4"},"returnParameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1004,"src":"970:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:4"},"scope":1047,"src":"911:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"985:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1014,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:4","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"to","nameLocation":"1229:2:4","nodeType":"VariableDeclaration","scope":1014,"src":"1221:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"value","nameLocation":"1241:5:4","nodeType":"VariableDeclaration","scope":1014,"src":"1233:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:4"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1014,"src":"1266:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1011,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:4"},"scope":1047,"src":"1203:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"1278:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1024,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:4","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"owner","nameLocation":"1574:5:4","nodeType":"VariableDeclaration","scope":1024,"src":"1566:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"spender","nameLocation":"1589:7:4","nodeType":"VariableDeclaration","scope":1024,"src":"1581:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:4"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1024,"src":"1621:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:4"},"scope":1047,"src":"1547:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"1636:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1034,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:4","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"spender","nameLocation":"2333:7:4","nodeType":"VariableDeclaration","scope":1034,"src":"2325:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"value","nameLocation":"2350:5:4","nodeType":"VariableDeclaration","scope":1034,"src":"2342:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:4"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"2375:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1031,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:4"},"scope":1047,"src":"2308:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"2387:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1046,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:4","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"from","nameLocation":"2719:4:4","nodeType":"VariableDeclaration","scope":1046,"src":"2711:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"to","nameLocation":"2733:2:4","nodeType":"VariableDeclaration","scope":1046,"src":"2725:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"value","nameLocation":"2745:5:4","nodeType":"VariableDeclaration","scope":1046,"src":"2737:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:4"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1046,"src":"2770:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1043,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:4"},"scope":1047,"src":"2689:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1048,"src":"203:2575:4","usedErrors":[],"usedEvents":[981,990]}],"src":"106:2673:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol","exportedSymbols":{"ERC20":[969],"ERC4626":[1732],"IERC20":[1047],"IERC20Metadata":[1758],"IERC4626":[317],"Math":[3482],"SafeERC20":[2084]},"id":1733,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1049,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1053,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1733,"sourceUnit":970,"src":"144:59:5","symbolAliases":[{"foreign":{"id":1050,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"152:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1051,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"160:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1052,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"176:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"../utils/SafeERC20.sol","id":1055,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1733,"sourceUnit":2085,"src":"204:49:5","symbolAliases":[{"foreign":{"id":1054,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"212:9:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","file":"../../../interfaces/IERC4626.sol","id":1057,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1733,"sourceUnit":318,"src":"254:58:5","symbolAliases":[{"foreign":{"id":1056,"name":"IERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"262:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../../../utils/math/Math.sol","id":1059,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1733,"sourceUnit":3483,"src":"313:50:5","symbolAliases":[{"foreign":{"id":1058,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"321:4:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1061,"name":"ERC20","nameLocations":["3187:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":969,"src":"3187:5:5"},"id":1062,"nodeType":"InheritanceSpecifier","src":"3187:5:5"},{"baseName":{"id":1063,"name":"IERC4626","nameLocations":["3194:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":317,"src":"3194:8:5"},"id":1064,"nodeType":"InheritanceSpecifier","src":"3194:8:5"}],"canonicalName":"ERC4626","contractDependencies":[],"contractKind":"contract","documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"365:2792:5","text":" @dev Implementation of the ERC4626 \"Tokenized Vault Standard\" as defined in\n https://eips.ethereum.org/EIPS/eip-4626[EIP-4626].\n This extension allows the minting and burning of \"shares\" (represented using the ERC20 inheritance) in exchange for\n underlying \"assets\" through standardized {deposit}, {mint}, {redeem} and {burn} workflows. This contract extends\n the ERC20 standard. Any additional extensions included along it would affect the \"shares\" token represented by this\n contract and not the \"assets\" token which is an independent contract.\n [CAUTION]\n ====\n In empty (or nearly empty) ERC-4626 vaults, deposits are at high risk of being stolen through frontrunning\n with a \"donation\" to the vault that inflates the price of a share. This is variously known as a donation or inflation\n attack and is essentially a problem of slippage. Vault deployers can protect against this attack by making an initial\n deposit of a non-trivial amount of the asset, such that price manipulation becomes infeasible. Withdrawals may\n similarly be affected by slippage. Users can protect against this attack as well as unexpected slippage in general by\n verifying the amount received is as expected, using a wrapper that performs these checks such as\n https://github.com/fei-protocol/ERC4626#erc4626router-and-base[ERC4626Router].\n Since v4.9, this implementation uses virtual assets and shares to mitigate that risk. The `_decimalsOffset()`\n corresponds to an offset in the decimal representation between the underlying asset's decimals and the vault\n decimals. This offset also determines the rate of virtual shares to virtual assets in the vault, which itself\n determines the initial exchange rate. While not fully preventing the attack, analysis shows that the default offset\n (0) makes it non-profitable, as a result of the value being captured by the virtual shares (out of the attacker's\n donation) matching the attacker's expected gains. With a larger offset, the attack becomes orders of magnitude more\n expensive than it is profitable. More details about the underlying math can be found\n xref:erc4626.adoc#inflation-attack[here].\n The drawback of this approach is that the virtual shares do capture (a very small) part of the value being accrued\n to the vault. Also, if the vault experiences losses, the users try to exit the vault, the virtual shares and assets\n will cause the first user to exit to experience reduced losses in detriment to the last users that will experience\n bigger losses. Developers willing to revert back to the pre-v4.9 behavior just need to override the\n `_convertToShares` and `_convertToAssets` functions.\n To learn more, check out our xref:ROOT:erc4626.adoc[ERC-4626 guide].\n ===="},"fullyImplemented":true,"id":1732,"linearizedBaseContracts":[1732,317,969,359,1758,1047,2359],"name":"ERC4626","nameLocation":"3176:7:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1067,"libraryName":{"id":1065,"name":"Math","nameLocations":["3215:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":3482,"src":"3215:4:5"},"nodeType":"UsingForDirective","src":"3209:23:5","typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"3224:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1070,"mutability":"immutable","name":"_asset","nameLocation":"3263:6:5","nodeType":"VariableDeclaration","scope":1732,"src":"3238:31:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},"typeName":{"id":1069,"nodeType":"UserDefinedTypeName","pathNode":{"id":1068,"name":"IERC20","nameLocations":["3238:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"3238:6:5"},"referencedDeclaration":1047,"src":"3238:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"visibility":"private"},{"constant":false,"id":1072,"mutability":"immutable","name":"_underlyingDecimals","nameLocation":"3299:19:5","nodeType":"VariableDeclaration","scope":1732,"src":"3275:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1071,"name":"uint8","nodeType":"ElementaryTypeName","src":"3275:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"3325:92:5","text":" @dev Attempted to deposit more assets than the max amount for `receiver`."},"errorSelector":"79012fb2","id":1081,"name":"ERC4626ExceededMaxDeposit","nameLocation":"3428:25:5","nodeType":"ErrorDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"receiver","nameLocation":"3462:8:5","nodeType":"VariableDeclaration","scope":1081,"src":"3454:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"3454:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"assets","nameLocation":"3480:6:5","nodeType":"VariableDeclaration","scope":1081,"src":"3472:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"3472:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"max","nameLocation":"3496:3:5","nodeType":"VariableDeclaration","scope":1081,"src":"3488:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"3488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3453:47:5"},"src":"3422:79:5"},{"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"3507:89:5","text":" @dev Attempted to mint more shares than the max amount for `receiver`."},"errorSelector":"284ff667","id":1090,"name":"ERC4626ExceededMaxMint","nameLocation":"3607:22:5","nodeType":"ErrorDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"receiver","nameLocation":"3638:8:5","nodeType":"VariableDeclaration","scope":1090,"src":"3630:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"3630:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"shares","nameLocation":"3656:6:5","nodeType":"VariableDeclaration","scope":1090,"src":"3648:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"3648:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"max","nameLocation":"3672:3:5","nodeType":"VariableDeclaration","scope":1090,"src":"3664:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3629:47:5"},"src":"3601:76:5"},{"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"3683:93:5","text":" @dev Attempted to withdraw more assets than the max amount for `receiver`."},"errorSelector":"fe9cceec","id":1099,"name":"ERC4626ExceededMaxWithdraw","nameLocation":"3787:26:5","nodeType":"ErrorDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"owner","nameLocation":"3822:5:5","nodeType":"VariableDeclaration","scope":1099,"src":"3814:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"3814:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"assets","nameLocation":"3837:6:5","nodeType":"VariableDeclaration","scope":1099,"src":"3829:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"3829:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"max","nameLocation":"3853:3:5","nodeType":"VariableDeclaration","scope":1099,"src":"3845:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"3845:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3813:44:5"},"src":"3781:77:5"},{"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"3864:91:5","text":" @dev Attempted to redeem more shares than the max amount for `receiver`."},"errorSelector":"b94abeec","id":1108,"name":"ERC4626ExceededMaxRedeem","nameLocation":"3966:24:5","nodeType":"ErrorDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"owner","nameLocation":"3999:5:5","nodeType":"VariableDeclaration","scope":1108,"src":"3991:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"shares","nameLocation":"4014:6:5","nodeType":"VariableDeclaration","scope":1108,"src":"4006:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"4006:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"max","nameLocation":"4030:3:5","nodeType":"VariableDeclaration","scope":1108,"src":"4022:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"4022:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3990:44:5"},"src":"3960:75:5"},{"body":{"id":1134,"nodeType":"Block","src":"4192:168:5","statements":[{"assignments":[1116,1118],"declarations":[{"constant":false,"id":1116,"mutability":"mutable","name":"success","nameLocation":"4208:7:5","nodeType":"VariableDeclaration","scope":1134,"src":"4203:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1115,"name":"bool","nodeType":"ElementaryTypeName","src":"4203:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1118,"mutability":"mutable","name":"assetDecimals","nameLocation":"4223:13:5","nodeType":"VariableDeclaration","scope":1134,"src":"4217:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1117,"name":"uint8","nodeType":"ElementaryTypeName","src":"4217:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1122,"initialValue":{"arguments":[{"id":1120,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"4261:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}],"id":1119,"name":"_tryGetAssetDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"4240:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20_$1047_$returns$_t_bool_$_t_uint8_$","typeString":"function (contract IERC20) view returns (bool,uint8)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint8_$","typeString":"tuple(bool,uint8)"}},"nodeType":"VariableDeclarationStatement","src":"4202:66:5"},{"expression":{"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1123,"name":"_underlyingDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4278:19:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":1124,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"4300:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"3138","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4326:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4300:28:5","trueExpression":{"id":1125,"name":"assetDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"4310:13:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4278:50:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1129,"nodeType":"ExpressionStatement","src":"4278:50:5"},{"expression":{"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1130,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"4338:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1131,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"4347:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"src":"4338:15:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"id":1133,"nodeType":"ExpressionStatement","src":"4338:15:5"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"4041:119:5","text":" @dev Set the underlying asset contract. This must be an ERC20-compatible contract (ERC20 or ERC777)."},"id":1135,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"asset_","nameLocation":"4184:6:5","nodeType":"VariableDeclaration","scope":1135,"src":"4177:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},"typeName":{"id":1111,"nodeType":"UserDefinedTypeName","pathNode":{"id":1110,"name":"IERC20","nameLocations":["4177:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"4177:6:5"},"referencedDeclaration":1047,"src":"4177:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"4176:15:5"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"4192:0:5"},"scope":1732,"src":"4165:195:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1201,"nodeType":"Block","src":"4583:453:5","statements":[{"assignments":[1147,1149],"declarations":[{"constant":false,"id":1147,"mutability":"mutable","name":"success","nameLocation":"4599:7:5","nodeType":"VariableDeclaration","scope":1201,"src":"4594:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1146,"name":"bool","nodeType":"ElementaryTypeName","src":"4594:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"encodedDecimals","nameLocation":"4621:15:5","nodeType":"VariableDeclaration","scope":1201,"src":"4608:28:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1148,"name":"bytes","nodeType":"ElementaryTypeName","src":"4608:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1162,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":1157,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"4695:14:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1758_$","typeString":"type(contract IERC20Metadata)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4710:8:5","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"4695:23:5","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_uint8_$","typeString":"function IERC20Metadata.decimals() view returns (uint8)"}},{"components":[],"id":1159,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4720:2:5","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_view$__$returns$_t_uint8_$","typeString":"function IERC20Metadata.decimals() view returns (uint8)"},{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}],"expression":{"id":1155,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4680:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4684:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"4680:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1152,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"4648:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}],"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4640:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:5","typeDescriptions":{}}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4640:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4656:10:5","memberName":"staticcall","nodeType":"MemberAccess","src":"4640:26:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4640:93:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4593:140:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"4747:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1164,"name":"encodedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4758:15:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4774:6:5","memberName":"length","nodeType":"MemberAccess","src":"4758:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4758:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4747:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"4743:260:5","trueBody":{"id":1195,"nodeType":"Block","src":"4788:215:5","statements":[{"assignments":[1170],"declarations":[{"constant":false,"id":1170,"mutability":"mutable","name":"returnedDecimals","nameLocation":"4810:16:5","nodeType":"VariableDeclaration","scope":1195,"src":"4802:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"4802:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1178,"initialValue":{"arguments":[{"id":1173,"name":"encodedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4840:15:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4858:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"4858:7:5","typeDescriptions":{}}}],"id":1176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4857:9:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":1171,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4829:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4833:6:5","memberName":"decode","nodeType":"MemberAccess","src":"4829:10:5","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4829:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4802:65:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1179,"name":"returnedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"4885:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4910:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1181,"name":"uint8","nodeType":"ElementaryTypeName","src":"4910:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4905:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4905:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4917:3:5","memberName":"max","nodeType":"MemberAccess","src":"4905:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4885:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1194,"nodeType":"IfStatement","src":"4881:112:5","trueBody":{"id":1193,"nodeType":"Block","src":"4922:71:5","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4948:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"arguments":[{"id":1189,"name":"returnedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"4960:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4954:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1187,"name":"uint8","nodeType":"ElementaryTypeName","src":"4954:5:5","typeDescriptions":{}}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4954:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1191,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4947:31:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint8_$","typeString":"tuple(bool,uint8)"}},"functionReturnParameters":1145,"id":1192,"nodeType":"Return","src":"4940:38:5"}]}}]}},{"expression":{"components":[{"hexValue":"66616c7365","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5020:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5027:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5019:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1145,"id":1200,"nodeType":"Return","src":"5012:17:5"}]},"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"4366:132:5","text":" @dev Attempts to fetch the asset decimals. A return value of false indicates that the attempt failed in some way."},"id":1202,"implemented":true,"kind":"function","modifiers":[],"name":"_tryGetAssetDecimals","nameLocation":"4512:20:5","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"asset_","nameLocation":"4540:6:5","nodeType":"VariableDeclaration","scope":1202,"src":"4533:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},"typeName":{"id":1138,"nodeType":"UserDefinedTypeName","pathNode":{"id":1137,"name":"IERC20","nameLocations":["4533:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"4533:6:5"},"referencedDeclaration":1047,"src":"4533:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"4532:15:5"},"returnParameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"4570:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1141,"name":"bool","nodeType":"ElementaryTypeName","src":"4570:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"4576:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1143,"name":"uint8","nodeType":"ElementaryTypeName","src":"4576:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4569:13:5"},"scope":1732,"src":"4503:533:5","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[533,1757],"body":{"id":1216,"nodeType":"Block","src":"5529:63:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1211,"name":"_underlyingDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5546:19:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1212,"name":"_decimalsOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"5568:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5546:39:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1210,"id":1215,"nodeType":"Return","src":"5539:46:5"}]},"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"5042:394:5","text":" @dev Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This\n \"original\" value is cached during construction of the vault contract. If this read operation fails (e.g., the\n asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals.\n See {IERC20Metadata-decimals}."},"functionSelector":"313ce567","id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"5450:8:5","nodeType":"FunctionDefinition","overrides":{"id":1207,"nodeType":"OverrideSpecifier","overrides":[{"id":1205,"name":"IERC20Metadata","nameLocations":["5490:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":1758,"src":"5490:14:5"},{"id":1206,"name":"ERC20","nameLocations":["5506:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":969,"src":"5506:5:5"}],"src":"5481:31:5"},"parameters":{"id":1204,"nodeType":"ParameterList","parameters":[],"src":"5458:2:5"},"returnParameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1217,"src":"5522:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1208,"name":"uint8","nodeType":"ElementaryTypeName","src":"5522:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5521:7:5"},"scope":1732,"src":"5441:151:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[186],"body":{"id":1228,"nodeType":"Block","src":"5691:39:5","statements":[{"expression":{"arguments":[{"id":1225,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"5716:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}],"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5708:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"5708:7:5","typeDescriptions":{}}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5708:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1222,"id":1227,"nodeType":"Return","src":"5701:22:5"}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"5598:33:5","text":"@dev See {IERC4626-asset}. "},"functionSelector":"38d52e0f","id":1229,"implemented":true,"kind":"function","modifiers":[],"name":"asset","nameLocation":"5645:5:5","nodeType":"FunctionDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[],"src":"5650:2:5"},"returnParameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1229,"src":"5682:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"5682:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:9:5"},"scope":1732,"src":"5636:94:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[192],"body":{"id":1243,"nodeType":"Block","src":"5841:55:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1239,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5883:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626_$1732","typeString":"contract ERC4626"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC4626_$1732","typeString":"contract ERC4626"}],"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5875:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"5875:7:5","typeDescriptions":{}}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5875:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1235,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"5858:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5865:9:5","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1004,"src":"5858:16:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5858:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1234,"id":1242,"nodeType":"Return","src":"5851:38:5"}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"5736:39:5","text":"@dev See {IERC4626-totalAssets}. "},"functionSelector":"01e1d114","id":1244,"implemented":true,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"5789:11:5","nodeType":"FunctionDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"5800:2:5"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1244,"src":"5832:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"5832:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5831:9:5"},"scope":1732,"src":"5780:116:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[200],"body":{"id":1259,"nodeType":"Block","src":"6029:69:5","statements":[{"expression":{"arguments":[{"id":1253,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"6063:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1254,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"6071:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3482_$","typeString":"type(library Math)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6076:8:5","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"6071:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2439_$","typeString":"type(enum Math.Rounding)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6085:5:5","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":2435,"src":"6071:19:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"id":1252,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"6046:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$2439_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6046:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1251,"id":1258,"nodeType":"Return","src":"6039:52:5"}]},"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"5902:43:5","text":"@dev See {IERC4626-convertToShares}. "},"functionSelector":"c6e6f592","id":1260,"implemented":true,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"5959:15:5","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"assets","nameLocation":"5983:6:5","nodeType":"VariableDeclaration","scope":1260,"src":"5975:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"5975:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5974:16:5"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1260,"src":"6020:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"6020:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6019:9:5"},"scope":1732,"src":"5950:148:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[208],"body":{"id":1275,"nodeType":"Block","src":"6231:69:5","statements":[{"expression":{"arguments":[{"id":1269,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"6265:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1270,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"6273:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3482_$","typeString":"type(library Math)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6278:8:5","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"6273:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2439_$","typeString":"type(enum Math.Rounding)"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6287:5:5","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":2435,"src":"6273:19:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"id":1268,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"6248:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$2439_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6248:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1267,"id":1274,"nodeType":"Return","src":"6241:52:5"}]},"documentation":{"id":1261,"nodeType":"StructuredDocumentation","src":"6104:43:5","text":"@dev See {IERC4626-convertToAssets}. "},"functionSelector":"07a2d13a","id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"6161:15:5","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"shares","nameLocation":"6185:6:5","nodeType":"VariableDeclaration","scope":1276,"src":"6177:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"6177:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6176:16:5"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"6222:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"6222:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6221:9:5"},"scope":1732,"src":"6152:148:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[216],"body":{"id":1290,"nodeType":"Block","src":"6416:41:5","statements":[{"expression":{"expression":{"arguments":[{"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6438:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"6438:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1284,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6433:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6433:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6447:3:5","memberName":"max","nodeType":"MemberAccess","src":"6433:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1283,"id":1289,"nodeType":"Return","src":"6426:24:5"}]},"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"6306:38:5","text":"@dev See {IERC4626-maxDeposit}. "},"functionSelector":"402d267d","id":1291,"implemented":true,"kind":"function","modifiers":[],"name":"maxDeposit","nameLocation":"6358:10:5","nodeType":"FunctionDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1291,"src":"6369:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"6369:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6368:9:5"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1291,"src":"6407:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"6407:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6406:9:5"},"scope":1732,"src":"6349:108:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[242],"body":{"id":1305,"nodeType":"Block","src":"6567:41:5","statements":[{"expression":{"expression":{"arguments":[{"id":1301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1299,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6584:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6584:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6598:3:5","memberName":"max","nodeType":"MemberAccess","src":"6584:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1298,"id":1304,"nodeType":"Return","src":"6577:24:5"}]},"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"6463:35:5","text":"@dev See {IERC4626-maxMint}. "},"functionSelector":"c63d75b6","id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"maxMint","nameLocation":"6512:7:5","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"6520:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"6520:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6519:9:5"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"6558:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"6558:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6557:9:5"},"scope":1732,"src":"6503:105:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[268],"body":{"id":1323,"nodeType":"Block","src":"6732:79:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1316,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"6776:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1315,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"6766:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1318,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"6784:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3482_$","typeString":"type(library Math)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6789:8:5","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"6784:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2439_$","typeString":"type(enum Math.Rounding)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6798:5:5","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":2435,"src":"6784:19:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"id":1314,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"6749:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$2439_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1313,"id":1322,"nodeType":"Return","src":"6742:62:5"}]},"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"6614:39:5","text":"@dev See {IERC4626-maxWithdraw}. "},"functionSelector":"ce96cb77","id":1324,"implemented":true,"kind":"function","modifiers":[],"name":"maxWithdraw","nameLocation":"6667:11:5","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"owner","nameLocation":"6687:5:5","nodeType":"VariableDeclaration","scope":1324,"src":"6679:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1308,"name":"address","nodeType":"ElementaryTypeName","src":"6679:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6678:15:5"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1324,"src":"6723:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"6723:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6722:9:5"},"scope":1732,"src":"6658:153:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[296],"body":{"id":1336,"nodeType":"Block","src":"6931:40:5","statements":[{"expression":{"arguments":[{"id":1333,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"6958:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1332,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"6948:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6948:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1331,"id":1335,"nodeType":"Return","src":"6941:23:5"}]},"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"6817:37:5","text":"@dev See {IERC4626-maxRedeem}. "},"functionSelector":"d905777e","id":1337,"implemented":true,"kind":"function","modifiers":[],"name":"maxRedeem","nameLocation":"6868:9:5","nodeType":"FunctionDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"owner","nameLocation":"6886:5:5","nodeType":"VariableDeclaration","scope":1337,"src":"6878:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"6878:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6877:15:5"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1337,"src":"6922:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"6922:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6921:9:5"},"scope":1732,"src":"6859:112:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[224],"body":{"id":1352,"nodeType":"Block","src":"7102:69:5","statements":[{"expression":{"arguments":[{"id":1346,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"7136:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1347,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"7144:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3482_$","typeString":"type(library Math)"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7149:8:5","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"7144:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2439_$","typeString":"type(enum Math.Rounding)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7158:5:5","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":2435,"src":"7144:19:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"id":1345,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7119:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$2439_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7119:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1344,"id":1351,"nodeType":"Return","src":"7112:52:5"}]},"documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"6977:42:5","text":"@dev See {IERC4626-previewDeposit}. "},"functionSelector":"ef8b30f7","id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"previewDeposit","nameLocation":"7033:14:5","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"assets","nameLocation":"7056:6:5","nodeType":"VariableDeclaration","scope":1353,"src":"7048:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"7048:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7047:16:5"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1353,"src":"7093:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"7093:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7092:9:5"},"scope":1732,"src":"7024:147:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[250],"body":{"id":1368,"nodeType":"Block","src":"7296:68:5","statements":[{"expression":{"arguments":[{"id":1362,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"7330:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1363,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"7338:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3482_$","typeString":"type(library Math)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7343:8:5","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"7338:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2439_$","typeString":"type(enum Math.Rounding)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7352:4:5","memberName":"Ceil","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"7338:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"id":1361,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"7313:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$2439_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7313:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1360,"id":1367,"nodeType":"Return","src":"7306:51:5"}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"7177:39:5","text":"@dev See {IERC4626-previewMint}. "},"functionSelector":"b3d7f6b9","id":1369,"implemented":true,"kind":"function","modifiers":[],"name":"previewMint","nameLocation":"7230:11:5","nodeType":"FunctionDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"shares","nameLocation":"7250:6:5","nodeType":"VariableDeclaration","scope":1369,"src":"7242:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7241:16:5"},"returnParameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1369,"src":"7287:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"7287:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7286:9:5"},"scope":1732,"src":"7221:143:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[276],"body":{"id":1384,"nodeType":"Block","src":"7497:68:5","statements":[{"expression":{"arguments":[{"id":1378,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"7531:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1379,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"7539:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3482_$","typeString":"type(library Math)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7544:8:5","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"7539:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2439_$","typeString":"type(enum Math.Rounding)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7553:4:5","memberName":"Ceil","nodeType":"MemberAccess","referencedDeclaration":2436,"src":"7539:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"id":1377,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7514:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$2439_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7514:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1376,"id":1383,"nodeType":"Return","src":"7507:51:5"}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"7370:43:5","text":"@dev See {IERC4626-previewWithdraw}. "},"functionSelector":"0a28a477","id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"previewWithdraw","nameLocation":"7427:15:5","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"assets","nameLocation":"7451:6:5","nodeType":"VariableDeclaration","scope":1385,"src":"7443:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"7443:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7442:16:5"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"7488:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"7488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7487:9:5"},"scope":1732,"src":"7418:147:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[304],"body":{"id":1400,"nodeType":"Block","src":"7694:69:5","statements":[{"expression":{"arguments":[{"id":1394,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7728:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1395,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"7736:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3482_$","typeString":"type(library Math)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7741:8:5","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"7736:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2439_$","typeString":"type(enum Math.Rounding)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7750:5:5","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":2435,"src":"7736:19:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"id":1393,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"7711:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$2439_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7711:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1392,"id":1399,"nodeType":"Return","src":"7704:52:5"}]},"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"7571:41:5","text":"@dev See {IERC4626-previewRedeem}. "},"functionSelector":"4cdad506","id":1401,"implemented":true,"kind":"function","modifiers":[],"name":"previewRedeem","nameLocation":"7626:13:5","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"shares","nameLocation":"7648:6:5","nodeType":"VariableDeclaration","scope":1401,"src":"7640:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"7640:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7639:16:5"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1401,"src":"7685:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"7685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7684:9:5"},"scope":1732,"src":"7617:146:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[234],"body":{"id":1444,"nodeType":"Block","src":"7893:308:5","statements":[{"assignments":[1412],"declarations":[{"constant":false,"id":1412,"mutability":"mutable","name":"maxAssets","nameLocation":"7911:9:5","nodeType":"VariableDeclaration","scope":1444,"src":"7903:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"7903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1416,"initialValue":{"arguments":[{"id":1414,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"7934:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1413,"name":"maxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"7923:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7923:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7903:40:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"7957:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1418,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"7966:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7957:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1427,"nodeType":"IfStatement","src":"7953:110:5","trueBody":{"id":1426,"nodeType":"Block","src":"7977:86:5","statements":[{"errorCall":{"arguments":[{"id":1421,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"8024:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1422,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"8034:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1423,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"8042:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1420,"name":"ERC4626ExceededMaxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"7998:25:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7998:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1425,"nodeType":"RevertStatement","src":"7991:61:5"}]}},{"assignments":[1429],"declarations":[{"constant":false,"id":1429,"mutability":"mutable","name":"shares","nameLocation":"8081:6:5","nodeType":"VariableDeclaration","scope":1444,"src":"8073:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"8073:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1433,"initialValue":{"arguments":[{"id":1431,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"8105:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1430,"name":"previewDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"8090:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8090:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8073:39:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1435,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"8131:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8131:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1437,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"8145:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1438,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"8155:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1439,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"8163:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1434,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"8122:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1441,"nodeType":"ExpressionStatement","src":"8122:48:5"},{"expression":{"id":1442,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"8188:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1410,"id":1443,"nodeType":"Return","src":"8181:13:5"}]},"documentation":{"id":1402,"nodeType":"StructuredDocumentation","src":"7769:35:5","text":"@dev See {IERC4626-deposit}. "},"functionSelector":"6e553f65","id":1445,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"7818:7:5","nodeType":"FunctionDefinition","parameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"assets","nameLocation":"7834:6:5","nodeType":"VariableDeclaration","scope":1445,"src":"7826:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"7826:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1406,"mutability":"mutable","name":"receiver","nameLocation":"7850:8:5","nodeType":"VariableDeclaration","scope":1445,"src":"7842:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"7842:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7825:34:5"},"returnParameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1445,"src":"7884:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1408,"name":"uint256","nodeType":"ElementaryTypeName","src":"7884:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7883:9:5"},"scope":1732,"src":"7809:392:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[260],"body":{"id":1488,"nodeType":"Block","src":"8549:299:5","statements":[{"assignments":[1456],"declarations":[{"constant":false,"id":1456,"mutability":"mutable","name":"maxShares","nameLocation":"8567:9:5","nodeType":"VariableDeclaration","scope":1488,"src":"8559:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"8559:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1460,"initialValue":{"arguments":[{"id":1458,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"8587:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1457,"name":"maxMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"8579:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8579:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8559:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1461,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"8610:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1462,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"8619:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8610:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1471,"nodeType":"IfStatement","src":"8606:107:5","trueBody":{"id":1470,"nodeType":"Block","src":"8630:83:5","statements":[{"errorCall":{"arguments":[{"id":1465,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"8674:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1466,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"8684:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1467,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"8692:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1464,"name":"ERC4626ExceededMaxMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"8651:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8651:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"RevertStatement","src":"8644:58:5"}]}},{"assignments":[1473],"declarations":[{"constant":false,"id":1473,"mutability":"mutable","name":"assets","nameLocation":"8731:6:5","nodeType":"VariableDeclaration","scope":1488,"src":"8723:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"8723:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1477,"initialValue":{"arguments":[{"id":1475,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"8752:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1474,"name":"previewMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"8740:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8740:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8723:36:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1479,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"8778:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8778:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1481,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"8792:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1482,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"8802:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1483,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"8810:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1478,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"8769:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8769:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"ExpressionStatement","src":"8769:48:5"},{"expression":{"id":1486,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"8835:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1454,"id":1487,"nodeType":"Return","src":"8828:13:5"}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"8207:256:5","text":"@dev See {IERC4626-mint}.\n As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero.\n In this case, the shares will be minted without requiring any assets to be deposited."},"functionSelector":"94bf804d","id":1489,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"8477:4:5","nodeType":"FunctionDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"shares","nameLocation":"8490:6:5","nodeType":"VariableDeclaration","scope":1489,"src":"8482:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"8482:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1450,"mutability":"mutable","name":"receiver","nameLocation":"8506:8:5","nodeType":"VariableDeclaration","scope":1489,"src":"8498:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"8498:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8481:34:5"},"returnParameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1489,"src":"8540:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"8540:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8539:9:5"},"scope":1732,"src":"8468:380:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[288],"body":{"id":1535,"nodeType":"Block","src":"8995:313:5","statements":[{"assignments":[1502],"declarations":[{"constant":false,"id":1502,"mutability":"mutable","name":"maxAssets","nameLocation":"9013:9:5","nodeType":"VariableDeclaration","scope":1535,"src":"9005:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"9005:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1506,"initialValue":{"arguments":[{"id":1504,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"9037:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1503,"name":"maxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9025:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9025:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9005:38:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1507,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"9057:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1508,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"9066:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9057:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1517,"nodeType":"IfStatement","src":"9053:108:5","trueBody":{"id":1516,"nodeType":"Block","src":"9077:84:5","statements":[{"errorCall":{"arguments":[{"id":1511,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"9125:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1512,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"9132:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1513,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"9140:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1510,"name":"ERC4626ExceededMaxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"9098:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9098:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1515,"nodeType":"RevertStatement","src":"9091:59:5"}]}},{"assignments":[1519],"declarations":[{"constant":false,"id":1519,"mutability":"mutable","name":"shares","nameLocation":"9179:6:5","nodeType":"VariableDeclaration","scope":1535,"src":"9171:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"9171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1523,"initialValue":{"arguments":[{"id":1521,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"9204:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1520,"name":"previewWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"9188:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9188:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9171:40:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1525,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"9231:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9231:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1527,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"9245:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1528,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"9255:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1529,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"9262:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1530,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"9270:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1524,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"9221:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9221:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1532,"nodeType":"ExpressionStatement","src":"9221:56:5"},{"expression":{"id":1533,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"9295:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1500,"id":1534,"nodeType":"Return","src":"9288:13:5"}]},"documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"8854:36:5","text":"@dev See {IERC4626-withdraw}. "},"functionSelector":"b460af94","id":1536,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"8904:8:5","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"mutability":"mutable","name":"assets","nameLocation":"8921:6:5","nodeType":"VariableDeclaration","scope":1536,"src":"8913:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"8913:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"receiver","nameLocation":"8937:8:5","nodeType":"VariableDeclaration","scope":1536,"src":"8929:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"8929:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"owner","nameLocation":"8955:5:5","nodeType":"VariableDeclaration","scope":1536,"src":"8947:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1495,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8912:49:5"},"returnParameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1536,"src":"8986:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"8986:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8985:9:5"},"scope":1732,"src":"8895:413:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[316],"body":{"id":1582,"nodeType":"Block","src":"9451:307:5","statements":[{"assignments":[1549],"declarations":[{"constant":false,"id":1549,"mutability":"mutable","name":"maxShares","nameLocation":"9469:9:5","nodeType":"VariableDeclaration","scope":1582,"src":"9461:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9461:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1553,"initialValue":{"arguments":[{"id":1551,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"9491:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1550,"name":"maxRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"9481:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9481:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9461:36:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"9511:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1555,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"9520:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9511:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1564,"nodeType":"IfStatement","src":"9507:106:5","trueBody":{"id":1563,"nodeType":"Block","src":"9531:82:5","statements":[{"errorCall":{"arguments":[{"id":1558,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"9577:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1559,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"9584:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1560,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"9592:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1557,"name":"ERC4626ExceededMaxRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"9552:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1562,"nodeType":"RevertStatement","src":"9545:57:5"}]}},{"assignments":[1566],"declarations":[{"constant":false,"id":1566,"mutability":"mutable","name":"assets","nameLocation":"9631:6:5","nodeType":"VariableDeclaration","scope":1582,"src":"9623:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"9623:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1570,"initialValue":{"arguments":[{"id":1568,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"9654:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1567,"name":"previewRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"9640:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9640:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9623:38:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1572,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"9681:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9681:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1574,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"9695:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1575,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"9705:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1576,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"9712:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1577,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"9720:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1571,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"9671:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1579,"nodeType":"ExpressionStatement","src":"9671:56:5"},{"expression":{"id":1580,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"9745:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1547,"id":1581,"nodeType":"Return","src":"9738:13:5"}]},"documentation":{"id":1537,"nodeType":"StructuredDocumentation","src":"9314:34:5","text":"@dev See {IERC4626-redeem}. "},"functionSelector":"ba087652","id":1583,"implemented":true,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"9362:6:5","nodeType":"FunctionDefinition","parameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"shares","nameLocation":"9377:6:5","nodeType":"VariableDeclaration","scope":1583,"src":"9369:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"9369:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"receiver","nameLocation":"9393:8:5","nodeType":"VariableDeclaration","scope":1583,"src":"9385:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"9385:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"owner","nameLocation":"9411:5:5","nodeType":"VariableDeclaration","scope":1583,"src":"9403:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"9403:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9368:49:5"},"returnParameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1583,"src":"9442:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"9442:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9441:9:5"},"scope":1732,"src":"9353:405:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1610,"nodeType":"Block","src":"9988:107:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1596,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"10019:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10019:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10035:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1599,"name":"_decimalsOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"10041:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10041:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10035:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10019:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1603,"name":"totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"10060:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10060:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10076:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10060:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1607,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10079:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"expression":{"id":1594,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"10005:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10012:6:5","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":2859,"src":"10005:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$2439_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10005:83:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1593,"id":1609,"nodeType":"Return","src":"9998:90:5"}]},"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"9764:113:5","text":" @dev Internal conversion function (from assets to shares) with support for rounding direction."},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"_convertToShares","nameLocation":"9891:16:5","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"assets","nameLocation":"9916:6:5","nodeType":"VariableDeclaration","scope":1611,"src":"9908:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"9908:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"rounding","nameLocation":"9938:8:5","nodeType":"VariableDeclaration","scope":1611,"src":"9924:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"},"typeName":{"id":1588,"nodeType":"UserDefinedTypeName","pathNode":{"id":1587,"name":"Math.Rounding","nameLocations":["9924:4:5","9929:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":2439,"src":"9924:13:5"},"referencedDeclaration":2439,"src":"9924:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9907:40:5"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"9979:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"9979:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9978:9:5"},"scope":1732,"src":"9882:213:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1638,"nodeType":"Block","src":"10325:107:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1624,"name":"totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"10356:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10356:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10372:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10356:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1628,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"10375:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10391:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1631,"name":"_decimalsOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"10397:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10397:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10391:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10375:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1635,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"10416:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"expression":{"id":1622,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"10342:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10349:6:5","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":2859,"src":"10342:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$2439_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10342:83:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1621,"id":1637,"nodeType":"Return","src":"10335:90:5"}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"10101:113:5","text":" @dev Internal conversion function (from shares to assets) with support for rounding direction."},"id":1639,"implemented":true,"kind":"function","modifiers":[],"name":"_convertToAssets","nameLocation":"10228:16:5","nodeType":"FunctionDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"shares","nameLocation":"10253:6:5","nodeType":"VariableDeclaration","scope":1639,"src":"10245:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"10245:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1617,"mutability":"mutable","name":"rounding","nameLocation":"10275:8:5","nodeType":"VariableDeclaration","scope":1639,"src":"10261:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"},"typeName":{"id":1616,"nodeType":"UserDefinedTypeName","pathNode":{"id":1615,"name":"Math.Rounding","nameLocations":["10261:4:5","10266:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":2439,"src":"10261:13:5"},"referencedDeclaration":2439,"src":"10261:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10244:40:5"},"returnParameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1639,"src":"10316:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"10316:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10315:9:5"},"scope":1732,"src":"10219:213:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1675,"nodeType":"Block","src":"10597:729:5","statements":[{"expression":{"arguments":[{"id":1654,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"11191:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},{"id":1655,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"11199:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1658,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11215:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626_$1732","typeString":"contract ERC4626"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC4626_$1732","typeString":"contract ERC4626"}],"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11207:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:5","typeDescriptions":{}}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11207:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1660,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"11222:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1651,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"11164:9:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$2084_$","typeString":"type(library SafeERC20)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11174:16:5","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1871,"src":"11164:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1047_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11164:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1662,"nodeType":"ExpressionStatement","src":"11164:65:5"},{"expression":{"arguments":[{"id":1664,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"11245:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1665,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"11255:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1663,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"11239:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1667,"nodeType":"ExpressionStatement","src":"11239:23:5"},{"eventCall":{"arguments":[{"id":1669,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"11286:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1670,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"11294:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1671,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"11304:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1672,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"11312:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1668,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"11278:7:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11278:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1674,"nodeType":"EmitStatement","src":"11273:46:5"}]},"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"10438:53:5","text":" @dev Deposit/mint common workflow."},"id":1676,"implemented":true,"kind":"function","modifiers":[],"name":"_deposit","nameLocation":"10505:8:5","nodeType":"FunctionDefinition","parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"caller","nameLocation":"10522:6:5","nodeType":"VariableDeclaration","scope":1676,"src":"10514:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1641,"name":"address","nodeType":"ElementaryTypeName","src":"10514:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"receiver","nameLocation":"10538:8:5","nodeType":"VariableDeclaration","scope":1676,"src":"10530:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"10530:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"assets","nameLocation":"10556:6:5","nodeType":"VariableDeclaration","scope":1676,"src":"10548:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"10548:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"shares","nameLocation":"10572:6:5","nodeType":"VariableDeclaration","scope":1676,"src":"10564:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"10564:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10513:66:5"},"returnParameters":{"id":1650,"nodeType":"ParameterList","parameters":[],"src":"10597:0:5"},"scope":1732,"src":"10496:830:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1722,"nodeType":"Block","src":"11556:751:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1690,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"11570:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1691,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"11580:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11570:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1700,"nodeType":"IfStatement","src":"11566:84:5","trueBody":{"id":1699,"nodeType":"Block","src":"11587:63:5","statements":[{"expression":{"arguments":[{"id":1694,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"11617:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1695,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"11624:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1696,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"11632:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1693,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"11601:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11601:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1698,"nodeType":"ExpressionStatement","src":"11601:38:5"}]}},{"expression":{"arguments":[{"id":1702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"12163:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1703,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"12170:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1701,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"12157:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12157:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1705,"nodeType":"ExpressionStatement","src":"12157:20:5"},{"expression":{"arguments":[{"id":1709,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"12210:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},{"id":1710,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"12218:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1711,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"12228:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1706,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"12187:9:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$2084_$","typeString":"type(library SafeERC20)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12197:12:5","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1844,"src":"12187:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1047_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12187:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1713,"nodeType":"ExpressionStatement","src":"12187:48:5"},{"eventCall":{"arguments":[{"id":1715,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"12260:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1716,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"12268:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1717,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"12278:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1718,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"12285:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1719,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"12293:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1714,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"12251:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12251:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1721,"nodeType":"EmitStatement","src":"12246:54:5"}]},"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"11332:56:5","text":" @dev Withdraw/redeem common workflow."},"id":1723,"implemented":true,"kind":"function","modifiers":[],"name":"_withdraw","nameLocation":"11402:9:5","nodeType":"FunctionDefinition","parameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"caller","nameLocation":"11429:6:5","nodeType":"VariableDeclaration","scope":1723,"src":"11421:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"11421:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1681,"mutability":"mutable","name":"receiver","nameLocation":"11453:8:5","nodeType":"VariableDeclaration","scope":1723,"src":"11445:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"11445:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1683,"mutability":"mutable","name":"owner","nameLocation":"11479:5:5","nodeType":"VariableDeclaration","scope":1723,"src":"11471:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"11471:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1685,"mutability":"mutable","name":"assets","nameLocation":"11502:6:5","nodeType":"VariableDeclaration","scope":1723,"src":"11494:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"11494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1687,"mutability":"mutable","name":"shares","nameLocation":"11526:6:5","nodeType":"VariableDeclaration","scope":1723,"src":"11518:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1686,"name":"uint256","nodeType":"ElementaryTypeName","src":"11518:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11411:127:5"},"returnParameters":{"id":1689,"nodeType":"ParameterList","parameters":[],"src":"11556:0:5"},"scope":1732,"src":"11393:914:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1730,"nodeType":"Block","src":"12378:25:5","statements":[{"expression":{"hexValue":"30","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12395:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1727,"id":1729,"nodeType":"Return","src":"12388:8:5"}]},"id":1731,"implemented":true,"kind":"function","modifiers":[],"name":"_decimalsOffset","nameLocation":"12322:15:5","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"12337:2:5"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1731,"src":"12371:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1725,"name":"uint8","nodeType":"ElementaryTypeName","src":"12371:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12370:7:5"},"scope":1732,"src":"12313:90:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1733,"src":"3158:9247:5","usedErrors":[329,334,339,348,353,358,1081,1090,1099,1108,1811,2092,2097,2100,2434],"usedEvents":[168,180,981,990]}],"src":"118:12288:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1047],"IERC20Metadata":[1758]},"id":1759,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1734,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1736,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1759,"sourceUnit":1048,"src":"151:37:6","symbolAliases":[{"foreign":{"id":1735,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"159:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1738,"name":"IERC20","nameLocations":["305:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"305:6:6"},"id":1739,"nodeType":"InheritanceSpecifier","src":"305:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"190:86:6","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1758,"linearizedBaseContracts":[1758,1047],"name":"IERC20Metadata","nameLocation":"287:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"318:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1745,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:6","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[],"src":"390:2:6"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1745,"src":"416:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1742,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:6"},"scope":1758,"src":"377:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1746,"nodeType":"StructuredDocumentation","src":"437:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1751,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:6","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[],"src":"513:2:6"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1751,"src":"539:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1748,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:6"},"scope":1758,"src":"498:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"560:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1757,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:6","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"647:2:6"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1757,"src":"673:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1754,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:6"},"scope":1758,"src":"630:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1759,"src":"277:405:6","usedErrors":[],"usedEvents":[981,990]}],"src":"125:558:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1794]},"id":1795,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1760,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"149:1963:7","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1794,"linearizedBaseContracts":[1794],"name":"IERC20Permit","nameLocation":"2123:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1762,"nodeType":"StructuredDocumentation","src":"2142:850:7","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1779,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:7","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"owner","nameLocation":"3030:5:7","nodeType":"VariableDeclaration","scope":1779,"src":"3022:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"spender","nameLocation":"3053:7:7","nodeType":"VariableDeclaration","scope":1779,"src":"3045:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"value","nameLocation":"3078:5:7","nodeType":"VariableDeclaration","scope":1779,"src":"3070:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1770,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:7","nodeType":"VariableDeclaration","scope":1779,"src":"3093:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"v","nameLocation":"3125:1:7","nodeType":"VariableDeclaration","scope":1779,"src":"3119:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1771,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1774,"mutability":"mutable","name":"r","nameLocation":"3144:1:7","nodeType":"VariableDeclaration","scope":1779,"src":"3136:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"s","nameLocation":"3163:1:7","nodeType":"VariableDeclaration","scope":1779,"src":"3155:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:7"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"3179:0:7"},"scope":1794,"src":"2997:183:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"3186:294:7","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1787,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:7","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"owner","nameLocation":"3509:5:7","nodeType":"VariableDeclaration","scope":1787,"src":"3501:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:7"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1787,"src":"3539:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:7"},"scope":1794,"src":"3485:63:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"3554:128:7","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1793,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:7","nodeType":"FunctionDefinition","parameters":{"id":1789,"nodeType":"ParameterList","parameters":[],"src":"3765:2:7"},"returnParameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1793,"src":"3791:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:7"},"scope":1794,"src":"3740:60:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1795,"src":"2113:1689:7","usedErrors":[],"usedEvents":[]}],"src":"123:3680:7"},"id":7},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2337],"IERC20":[1047],"IERC20Permit":[1794],"SafeERC20":[2084]},"id":2085,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1796,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2085,"sourceUnit":1048,"src":"141:37:8","symbolAliases":[{"foreign":{"id":1797,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"149:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1800,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2085,"sourceUnit":1795,"src":"179:60:8","symbolAliases":[{"foreign":{"id":1799,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"187:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2085,"sourceUnit":2338,"src":"240:51:8","symbolAliases":[{"foreign":{"id":1801,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"248:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"293:457:8","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2084,"linearizedBaseContracts":[2084],"name":"SafeERC20","nameLocation":"759:9:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1806,"libraryName":{"id":1804,"name":"Address","nameLocations":["781:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2337,"src":"781:7:8"},"nodeType":"UsingForDirective","src":"775:26:8","typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"807:64:8","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":1811,"name":"SafeERC20FailedOperation","nameLocation":"882:24:8","nodeType":"ErrorDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"token","nameLocation":"915:5:8","nodeType":"VariableDeclaration","scope":1811,"src":"907:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:8"},"src":"876:46:8"},{"documentation":{"id":1812,"nodeType":"StructuredDocumentation","src":"928:71:8","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1820,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:8","nodeType":"ErrorDefinition","parameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"spender","nameLocation":"1051:7:8","nodeType":"VariableDeclaration","scope":1820,"src":"1043:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:8","nodeType":"VariableDeclaration","scope":1820,"src":"1060:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:8","nodeType":"VariableDeclaration","scope":1820,"src":"1086:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:8"},"src":"1004:109:8"},{"body":{"id":1843,"nodeType":"Block","src":"1375:88:8","statements":[{"expression":{"arguments":[{"id":1832,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"1405:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1835,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"1427:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1014,"src":"1427:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1837,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"1444:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"1448:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1833,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1831,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"1385:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1047_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1842,"nodeType":"ExpressionStatement","src":"1385:71:8"}]},"documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"1119:179:8","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1844,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:8","nodeType":"FunctionDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"token","nameLocation":"1332:5:8","nodeType":"VariableDeclaration","scope":1844,"src":"1325:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},"typeName":{"id":1823,"nodeType":"UserDefinedTypeName","pathNode":{"id":1822,"name":"IERC20","nameLocations":["1325:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"1325:6:8"},"referencedDeclaration":1047,"src":"1325:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"to","nameLocation":"1347:2:8","nodeType":"VariableDeclaration","scope":1844,"src":"1339:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1828,"mutability":"mutable","name":"value","nameLocation":"1359:5:8","nodeType":"VariableDeclaration","scope":1844,"src":"1351:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:8"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[],"src":"1375:0:8"},"scope":2084,"src":"1303:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1870,"nodeType":"Block","src":"1792:98:8","statements":[{"expression":{"arguments":[{"id":1858,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"1822:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1861,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"1844:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"1844:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1863,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"1865:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1864,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"1871:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"1875:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1859,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1857,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"1802:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1047_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1869,"nodeType":"ExpressionStatement","src":"1802:81:8"}]},"documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"1469:228:8","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:8","nodeType":"FunctionDefinition","parameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"token","nameLocation":"1735:5:8","nodeType":"VariableDeclaration","scope":1871,"src":"1728:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},"typeName":{"id":1847,"nodeType":"UserDefinedTypeName","pathNode":{"id":1846,"name":"IERC20","nameLocations":["1728:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"1728:6:8"},"referencedDeclaration":1047,"src":"1728:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"from","nameLocation":"1750:4:8","nodeType":"VariableDeclaration","scope":1871,"src":"1742:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"to","nameLocation":"1764:2:8","nodeType":"VariableDeclaration","scope":1871,"src":"1756:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"value","nameLocation":"1776:5:8","nodeType":"VariableDeclaration","scope":1871,"src":"1768:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:8"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[],"src":"1792:0:8"},"scope":2084,"src":"1702:188:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1901,"nodeType":"Block","src":"2167:139:8","statements":[{"assignments":[1883],"declarations":[{"constant":false,"id":1883,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:8","nodeType":"VariableDeclaration","scope":1901,"src":"2177:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1892,"initialValue":{"arguments":[{"arguments":[{"id":1888,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2084","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2084","typeString":"library SafeERC20"}],"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1886,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:8","typeDescriptions":{}}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1890,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"2231:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1884,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2200:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1024,"src":"2200:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:8"},{"expression":{"arguments":[{"id":1894,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2262:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},{"id":1895,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"2269:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1896,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"2278:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"2293:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1893,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"2249:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1047_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1900,"nodeType":"ExpressionStatement","src":"2249:50:8"}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"1896:180:8","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1902,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:8","nodeType":"FunctionDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"token","nameLocation":"2119:5:8","nodeType":"VariableDeclaration","scope":1902,"src":"2112:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},"typeName":{"id":1874,"nodeType":"UserDefinedTypeName","pathNode":{"id":1873,"name":"IERC20","nameLocations":["2112:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"2112:6:8"},"referencedDeclaration":1047,"src":"2112:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"spender","nameLocation":"2134:7:8","nodeType":"VariableDeclaration","scope":1902,"src":"2126:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1876,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"value","nameLocation":"2151:5:8","nodeType":"VariableDeclaration","scope":1902,"src":"2143:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:8"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[],"src":"2167:0:8"},"scope":2084,"src":"2081:225:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1944,"nodeType":"Block","src":"2607:370:8","statements":[{"id":1943,"nodeType":"UncheckedBlock","src":"2617:354:8","statements":[{"assignments":[1914],"declarations":[{"constant":false,"id":1914,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:8","nodeType":"VariableDeclaration","scope":1943,"src":"2641:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1923,"initialValue":{"arguments":[{"arguments":[{"id":1919,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2084","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2084","typeString":"library SafeERC20"}],"id":1918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:8","typeDescriptions":{}}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1921,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"2699:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1915,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"2668:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1024,"src":"2668:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1924,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"2725:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1925,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"2744:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1934,"nodeType":"IfStatement","src":"2721:160:8","trueBody":{"id":1933,"nodeType":"Block","src":"2763:118:8","statements":[{"errorCall":{"arguments":[{"id":1928,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"2821:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1929,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"2830:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1930,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"2848:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1927,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2788:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1932,"nodeType":"RevertStatement","src":"2781:85:8"}]}},{"expression":{"arguments":[{"id":1936,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"2907:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},{"id":1937,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"2914:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1938,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"2923:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1939,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"2942:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1935,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"2894:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1047_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1942,"nodeType":"ExpressionStatement","src":"2894:66:8"}]}]},"documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"2312:192:8","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:8","nodeType":"FunctionDefinition","parameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"token","nameLocation":"2547:5:8","nodeType":"VariableDeclaration","scope":1945,"src":"2540:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},"typeName":{"id":1905,"nodeType":"UserDefinedTypeName","pathNode":{"id":1904,"name":"IERC20","nameLocations":["2540:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"2540:6:8"},"referencedDeclaration":1047,"src":"2540:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1908,"mutability":"mutable","name":"spender","nameLocation":"2562:7:8","nodeType":"VariableDeclaration","scope":1945,"src":"2554:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1910,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:8","nodeType":"VariableDeclaration","scope":1945,"src":"2571:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:8"},"returnParameters":{"id":1912,"nodeType":"ParameterList","parameters":[],"src":"2607:0:8"},"scope":2084,"src":"2509:468:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1991,"nodeType":"Block","src":"3373:303:8","statements":[{"assignments":[1957],"declarations":[{"constant":false,"id":1957,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:8","nodeType":"VariableDeclaration","scope":1991,"src":"3383:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1956,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1966,"initialValue":{"arguments":[{"expression":{"id":1960,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"3426:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1034,"src":"3426:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1962,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"3442:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"3451:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1958,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:8"},{"condition":{"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:8","subExpression":{"arguments":[{"id":1968,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"3498:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},{"id":1969,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"3505:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1967,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"3474:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1047_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1990,"nodeType":"IfStatement","src":"3469:201:8","trueBody":{"id":1989,"nodeType":"Block","src":"3520:150:8","statements":[{"expression":{"arguments":[{"id":1973,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"3554:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1976,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"3576:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1034,"src":"3576:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1978,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"3592:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1974,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1972,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"3534:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1047_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1983,"nodeType":"ExpressionStatement","src":"3534:71:8"},{"expression":{"arguments":[{"id":1985,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"3639:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},{"id":1986,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"3646:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1984,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"3619:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1047_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1988,"nodeType":"ExpressionStatement","src":"3619:40:8"}]}}]},"documentation":{"id":1946,"nodeType":"StructuredDocumentation","src":"2983:308:8","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1992,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:8","nodeType":"FunctionDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"token","nameLocation":"3325:5:8","nodeType":"VariableDeclaration","scope":1992,"src":"3318:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},"typeName":{"id":1948,"nodeType":"UserDefinedTypeName","pathNode":{"id":1947,"name":"IERC20","nameLocations":["3318:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"3318:6:8"},"referencedDeclaration":1047,"src":"3318:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"spender","nameLocation":"3340:7:8","nodeType":"VariableDeclaration","scope":1992,"src":"3332:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"value","nameLocation":"3357:5:8","nodeType":"VariableDeclaration","scope":1992,"src":"3349:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:8"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[],"src":"3373:0:8"},"scope":2084,"src":"3296:380:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2033,"nodeType":"Block","src":"4129:559:8","statements":[{"assignments":[2002],"declarations":[{"constant":false,"id":2002,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:8","nodeType":"VariableDeclaration","scope":2033,"src":"4478:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2001,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2010,"initialValue":{"arguments":[{"id":2008,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"4532:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2005,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"4512:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}],"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2003,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:8","typeDescriptions":{}}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:8","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2158,"src":"4504:27:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2011,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"4551:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:8","memberName":"length","nodeType":"MemberAccess","src":"4551:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:8","subExpression":{"arguments":[{"id":2017,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"4589:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2018,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:8","typeDescriptions":{}}}],"id":2020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2015,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:8","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2032,"nodeType":"IfStatement","src":"4547:135:8","trueBody":{"id":2031,"nodeType":"Block","src":"4610:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2027,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"4664:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}],"id":2026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2025,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:8","typeDescriptions":{}}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2024,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"4631:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2030,"nodeType":"RevertStatement","src":"4624:47:8"}]}}]},"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"3682:372:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":2034,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:8","nodeType":"FunctionDefinition","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"token","nameLocation":"4095:5:8","nodeType":"VariableDeclaration","scope":2034,"src":"4088:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},"typeName":{"id":1995,"nodeType":"UserDefinedTypeName","pathNode":{"id":1994,"name":"IERC20","nameLocations":["4088:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"4088:6:8"},"referencedDeclaration":1047,"src":"4088:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1998,"mutability":"mutable","name":"data","nameLocation":"4115:4:8","nodeType":"VariableDeclaration","scope":2034,"src":"4102:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1997,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:8"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[],"src":"4129:0:8"},"scope":2084,"src":"4059:629:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2082,"nodeType":"Block","src":"5278:489:8","statements":[{"assignments":[2046,2048],"declarations":[{"constant":false,"id":2046,"mutability":"mutable","name":"success","nameLocation":"5579:7:8","nodeType":"VariableDeclaration","scope":2082,"src":"5574:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2045,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:8","nodeType":"VariableDeclaration","scope":2082,"src":"5588:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2047,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2056,"initialValue":{"arguments":[{"id":2054,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"5635:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2051,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"5623:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}],"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2049,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:8","typeDescriptions":{}}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:8","memberName":"call","nodeType":"MemberAccess","src":"5615:19:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:8"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2057,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"5657:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2058,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"5669:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:8","memberName":"length","nodeType":"MemberAccess","src":"5669:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2064,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"5706:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2065,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:8","typeDescriptions":{}}}],"id":2067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2062,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:8","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2074,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"5738:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}],"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:8","typeDescriptions":{}}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:8","memberName":"code","nodeType":"MemberAccess","src":"5730:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:8","memberName":"length","nodeType":"MemberAccess","src":"5730:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2044,"id":2081,"nodeType":"Return","src":"5650:110:8"}]},"documentation":{"id":2035,"nodeType":"StructuredDocumentation","src":"4694:490:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":2083,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:8","nodeType":"FunctionDefinition","parameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"token","nameLocation":"5229:5:8","nodeType":"VariableDeclaration","scope":2083,"src":"5222:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},"typeName":{"id":2037,"nodeType":"UserDefinedTypeName","pathNode":{"id":2036,"name":"IERC20","nameLocations":["5222:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"5222:6:8"},"referencedDeclaration":1047,"src":"5222:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2040,"mutability":"mutable","name":"data","nameLocation":"5249:4:8","nodeType":"VariableDeclaration","scope":2083,"src":"5236:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2039,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:8"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2083,"src":"5272:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2042,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:8"},"scope":2084,"src":"5189:578:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2085,"src":"751:5018:8","usedErrors":[1811,1820],"usedEvents":[]}],"src":"115:5655:8"},"id":8},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2337]},"id":2338,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2086,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"127:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2337,"linearizedBaseContracts":[2337],"name":"Address","nameLocation":"203:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"217:94:9","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":2092,"name":"AddressInsufficientBalance","nameLocation":"322:26:9","nodeType":"ErrorDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"account","nameLocation":"357:7:9","nodeType":"VariableDeclaration","scope":2092,"src":"349:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2089,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:9"},"src":"316:50:9"},{"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"372:75:9","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2097,"name":"AddressEmptyCode","nameLocation":"458:16:9","nodeType":"ErrorDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"target","nameLocation":"483:6:9","nodeType":"VariableDeclaration","scope":2097,"src":"475:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:9"},"src":"452:39:9"},{"documentation":{"id":2098,"nodeType":"StructuredDocumentation","src":"497:89:9","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":2100,"name":"FailedInnerCall","nameLocation":"597:15:9","nodeType":"ErrorDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[],"src":"612:2:9"},"src":"591:24:9"},{"body":{"id":2140,"nodeType":"Block","src":"1602:260:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2110,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2337","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2337","typeString":"library Address"}],"id":2109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:9","typeDescriptions":{}}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:9","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2113,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"1640:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2123,"nodeType":"IfStatement","src":"1612:109:9","trueBody":{"id":2122,"nodeType":"Block","src":"1648:73:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2118,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2337","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2337","typeString":"library Address"}],"id":2117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2116,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:9","typeDescriptions":{}}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2115,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"1669:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2121,"nodeType":"RevertStatement","src":"1662:48:9"}]}},{"assignments":[2125,null],"declarations":[{"constant":false,"id":2125,"mutability":"mutable","name":"success","nameLocation":"1737:7:9","nodeType":"VariableDeclaration","scope":2140,"src":"1732:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2124,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2132,"initialValue":{"arguments":[{"hexValue":"","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2126,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"1750:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:9","memberName":"call","nodeType":"MemberAccess","src":"1750:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2128,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"1772:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:9"},{"condition":{"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:9","subExpression":{"id":2133,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1798:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2139,"nodeType":"IfStatement","src":"1793:63:9","trueBody":{"id":2138,"nodeType":"Block","src":"1807:49:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2135,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"1828:15:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2137,"nodeType":"RevertStatement","src":"1821:24:9"}]}}]},"documentation":{"id":2101,"nodeType":"StructuredDocumentation","src":"621:905:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2141,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:9","nodeType":"FunctionDefinition","parameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:9","nodeType":"VariableDeclaration","scope":2141,"src":"1550:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2102,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2105,"mutability":"mutable","name":"amount","nameLocation":"1585:6:9","nodeType":"VariableDeclaration","scope":2141,"src":"1577:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:9"},"returnParameters":{"id":2107,"nodeType":"ParameterList","parameters":[],"src":"1602:0:9"},"scope":2337,"src":"1531:331:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2157,"nodeType":"Block","src":"2794:62:9","statements":[{"expression":{"arguments":[{"id":2152,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"2833:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2153,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2841:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2151,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2811:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2150,"id":2156,"nodeType":"Return","src":"2804:45:9"}]},"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"1868:832:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2158,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:9","nodeType":"FunctionDefinition","parameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"target","nameLocation":"2735:6:9","nodeType":"VariableDeclaration","scope":2158,"src":"2727:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2146,"mutability":"mutable","name":"data","nameLocation":"2756:4:9","nodeType":"VariableDeclaration","scope":2158,"src":"2743:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2145,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:9"},"returnParameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2158,"src":"2780:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2148,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:9"},"scope":2337,"src":"2705:151:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2203,"nodeType":"Block","src":"3293:279:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2172,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2337","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2337","typeString":"library Address"}],"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2170,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:9","typeDescriptions":{}}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:9","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"3331:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2185,"nodeType":"IfStatement","src":"3303:108:9","trueBody":{"id":2184,"nodeType":"Block","src":"3338:73:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2180,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2337","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2337","typeString":"library Address"}],"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2178,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:9","typeDescriptions":{}}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2177,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"3359:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2183,"nodeType":"RevertStatement","src":"3352:48:9"}]}},{"assignments":[2187,2189],"declarations":[{"constant":false,"id":2187,"mutability":"mutable","name":"success","nameLocation":"3426:7:9","nodeType":"VariableDeclaration","scope":2203,"src":"3421:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2186,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:9","nodeType":"VariableDeclaration","scope":2203,"src":"3435:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2188,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2196,"initialValue":{"arguments":[{"id":2194,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"3488:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2190,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"3462:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:9","memberName":"call","nodeType":"MemberAccess","src":"3462:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"3481:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:9"},{"expression":{"arguments":[{"id":2198,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"3537:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2199,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"3545:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2200,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"3554:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2197,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"3510:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2169,"id":2202,"nodeType":"Return","src":"3503:62:9"}]},"documentation":{"id":2159,"nodeType":"StructuredDocumentation","src":"2862:313:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2204,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:9","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"target","nameLocation":"3219:6:9","nodeType":"VariableDeclaration","scope":2204,"src":"3211:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"data","nameLocation":"3240:4:9","nodeType":"VariableDeclaration","scope":2204,"src":"3227:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2162,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"value","nameLocation":"3254:5:9","nodeType":"VariableDeclaration","scope":2204,"src":"3246:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:9"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2204,"src":"3279:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2167,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:9"},"scope":2337,"src":"3180:392:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2229,"nodeType":"Block","src":"3811:154:9","statements":[{"assignments":[2215,2217],"declarations":[{"constant":false,"id":2215,"mutability":"mutable","name":"success","nameLocation":"3827:7:9","nodeType":"VariableDeclaration","scope":2229,"src":"3822:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2214,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2217,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:9","nodeType":"VariableDeclaration","scope":2229,"src":"3836:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2216,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2222,"initialValue":{"arguments":[{"id":2220,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"3881:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2218,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"3863:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:9"},{"expression":{"arguments":[{"id":2224,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"3930:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2225,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"3938:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2226,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"3947:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2223,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"3903:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2213,"id":2228,"nodeType":"Return","src":"3896:62:9"}]},"documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"3578:128:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2230,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:9","nodeType":"FunctionDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"target","nameLocation":"3747:6:9","nodeType":"VariableDeclaration","scope":2230,"src":"3739:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2206,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2209,"mutability":"mutable","name":"data","nameLocation":"3768:4:9","nodeType":"VariableDeclaration","scope":2230,"src":"3755:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2208,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:9"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2230,"src":"3797:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2211,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:9"},"scope":2337,"src":"3711:254:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2255,"nodeType":"Block","src":"4203:156:9","statements":[{"assignments":[2241,2243],"declarations":[{"constant":false,"id":2241,"mutability":"mutable","name":"success","nameLocation":"4219:7:9","nodeType":"VariableDeclaration","scope":2255,"src":"4214:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2240,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:9","nodeType":"VariableDeclaration","scope":2255,"src":"4228:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2242,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2248,"initialValue":{"arguments":[{"id":2246,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4275:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2244,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"4255:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:9","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:9"},{"expression":{"arguments":[{"id":2250,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"4324:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2251,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"4332:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2252,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"4341:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2249,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"4297:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2239,"id":2254,"nodeType":"Return","src":"4290:62:9"}]},"documentation":{"id":2231,"nodeType":"StructuredDocumentation","src":"3971:130:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2256,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:9","nodeType":"FunctionDefinition","parameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"mutability":"mutable","name":"target","nameLocation":"4144:6:9","nodeType":"VariableDeclaration","scope":2256,"src":"4136:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2235,"mutability":"mutable","name":"data","nameLocation":"4165:4:9","nodeType":"VariableDeclaration","scope":2256,"src":"4152:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2234,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:9"},"returnParameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2256,"src":"4189:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2237,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:9"},"scope":2337,"src":"4106:253:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2295,"nodeType":"Block","src":"4783:424:9","statements":[{"condition":{"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:9","subExpression":{"id":2268,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"4798:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2293,"nodeType":"Block","src":"4857:344:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2275,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5045:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:9","memberName":"length","nodeType":"MemberAccess","src":"5045:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2279,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"5071:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:9","memberName":"code","nodeType":"MemberAccess","src":"5071:11:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:9","memberName":"length","nodeType":"MemberAccess","src":"5071:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2290,"nodeType":"IfStatement","src":"5041:119:9","trueBody":{"id":2289,"nodeType":"Block","src":"5096:64:9","statements":[{"errorCall":{"arguments":[{"id":2286,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"5138:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2285,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5121:16:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2288,"nodeType":"RevertStatement","src":"5114:31:9"}]}},{"expression":{"id":2291,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5180:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2267,"id":2292,"nodeType":"Return","src":"5173:17:9"}]},"id":2294,"nodeType":"IfStatement","src":"4793:408:9","trueBody":{"id":2274,"nodeType":"Block","src":"4807:44:9","statements":[{"expression":{"arguments":[{"id":2271,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"4829:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2270,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"4821:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2273,"nodeType":"ExpressionStatement","src":"4821:19:9"}]}}]},"documentation":{"id":2257,"nodeType":"StructuredDocumentation","src":"4365:255:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":2296,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:9","nodeType":"FunctionDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"target","nameLocation":"4678:6:9","nodeType":"VariableDeclaration","scope":2296,"src":"4670:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2261,"mutability":"mutable","name":"success","nameLocation":"4699:7:9","nodeType":"VariableDeclaration","scope":2296,"src":"4694:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2260,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2263,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:9","nodeType":"VariableDeclaration","scope":2296,"src":"4716:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2262,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:9"},"returnParameters":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2296,"src":"4769:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2265,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:9"},"scope":2337,"src":"4625:582:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2317,"nodeType":"Block","src":"5509:122:9","statements":[{"condition":{"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:9","subExpression":{"id":2306,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"5524:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2315,"nodeType":"Block","src":"5583:42:9","statements":[{"expression":{"id":2313,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"5604:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2305,"id":2314,"nodeType":"Return","src":"5597:17:9"}]},"id":2316,"nodeType":"IfStatement","src":"5519:106:9","trueBody":{"id":2312,"nodeType":"Block","src":"5533:44:9","statements":[{"expression":{"arguments":[{"id":2309,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"5555:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2308,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"5547:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2311,"nodeType":"ExpressionStatement","src":"5547:19:9"}]}}]},"documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"5213:189:9","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":2318,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:9","nodeType":"FunctionDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"success","nameLocation":"5438:7:9","nodeType":"VariableDeclaration","scope":2318,"src":"5433:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2298,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2301,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:9","nodeType":"VariableDeclaration","scope":2318,"src":"5447:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2300,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:9"},"returnParameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"5495:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2303,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:9"},"scope":2337,"src":"5407:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2335,"nodeType":"Block","src":"5798:461:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2324,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"5874:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:9","memberName":"length","nodeType":"MemberAccess","src":"5874:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2333,"nodeType":"Block","src":"6204:49:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2330,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"6225:15:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2332,"nodeType":"RevertStatement","src":"6218:24:9"}]},"id":2334,"nodeType":"IfStatement","src":"5870:383:9","trueBody":{"id":2329,"nodeType":"Block","src":"5897:301:9","statements":[{"AST":{"nodeType":"YulBlock","src":"6055:133:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6073:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"6102:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6096:5:9"},"nodeType":"YulFunctionCall","src":"6096:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"6077:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"6145:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6137:3:9"},"nodeType":"YulFunctionCall","src":"6137:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"6158:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6130:6:9"},"nodeType":"YulFunctionCall","src":"6130:44:9"},"nodeType":"YulExpressionStatement","src":"6130:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2321,"isOffset":false,"isSlot":false,"src":"6102:10:9","valueSize":1},{"declaration":2321,"isOffset":false,"isSlot":false,"src":"6145:10:9","valueSize":1}],"id":2328,"nodeType":"InlineAssembly","src":"6046:142:9"}]}}]},"documentation":{"id":2319,"nodeType":"StructuredDocumentation","src":"5637:101:9","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2336,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:9","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:9","nodeType":"VariableDeclaration","scope":2336,"src":"5760:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2320,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:9"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[],"src":"5798:0:9"},"scope":2337,"src":"5743:516:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2338,"src":"195:6066:9","usedErrors":[2092,2097,2100],"usedEvents":[]}],"src":"101:6161:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2359]},"id":2360,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2339,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2340,"nodeType":"StructuredDocumentation","src":"127:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2359,"linearizedBaseContracts":[2359],"name":"Context","nameLocation":"642:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2348,"nodeType":"Block","src":"718:34:10","statements":[{"expression":{"expression":{"id":2345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:10","memberName":"sender","nodeType":"MemberAccess","src":"735:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2344,"id":2347,"nodeType":"Return","src":"728:17:10"}]},"id":2349,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:10","nodeType":"FunctionDefinition","parameters":{"id":2341,"nodeType":"ParameterList","parameters":[],"src":"675:2:10"},"returnParameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2349,"src":"709:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2342,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:10"},"scope":2359,"src":"656:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2357,"nodeType":"Block","src":"825:32:10","statements":[{"expression":{"expression":{"id":2354,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:10","memberName":"data","nodeType":"MemberAccess","src":"842:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2353,"id":2356,"nodeType":"Return","src":"835:15:10"}]},"id":2358,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:10","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[],"src":"775:2:10"},"returnParameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2358,"src":"809:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2351,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:10"},"scope":2359,"src":"758:99:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2360,"src":"624:235:10","usedErrors":[],"usedEvents":[]}],"src":"101:759:10"},"id":10},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2428]},"id":2429,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2361,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2362,"nodeType":"StructuredDocumentation","src":"135:750:11","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2428,"linearizedBaseContracts":[2428],"name":"ReentrancyGuard","nameLocation":"904:15:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2365,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:11","nodeType":"VariableDeclaration","scope":2428,"src":"1674:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2368,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:11","nodeType":"VariableDeclaration","scope":2428,"src":"1720:36:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2370,"mutability":"mutable","name":"_status","nameLocation":"1779:7:11","nodeType":"VariableDeclaration","scope":2428,"src":"1763:23:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2371,"nodeType":"StructuredDocumentation","src":"1793:52:11","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2373,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:11","nodeType":"ErrorDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[],"src":"1884:2:11"},"src":"1850:37:11"},{"body":{"id":2380,"nodeType":"Block","src":"1907:38:11","statements":[{"expression":{"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2376,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"1917:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2377,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"1927:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2379,"nodeType":"ExpressionStatement","src":"1917:21:11"}]},"id":2381,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[],"src":"1904:2:11"},"returnParameters":{"id":2375,"nodeType":"ParameterList","parameters":[],"src":"1907:0:11"},"scope":2428,"src":"1893:52:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2391,"nodeType":"Block","src":"2346:79:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2384,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"2356:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2386,"nodeType":"ExpressionStatement","src":"2356:21:11"},{"id":2387,"nodeType":"PlaceholderStatement","src":"2387:1:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2388,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"2398:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2390,"nodeType":"ExpressionStatement","src":"2398:20:11"}]},"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"1951:366:11","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2392,"name":"nonReentrant","nameLocation":"2331:12:11","nodeType":"ModifierDefinition","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[],"src":"2343:2:11"},"src":"2322:103:11","virtual":false,"visibility":"internal"},{"body":{"id":2407,"nodeType":"Block","src":"2470:268:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2395,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2558:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2396,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"2569:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2402,"nodeType":"IfStatement","src":"2554:86:11","trueBody":{"id":2401,"nodeType":"Block","src":"2578:62:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2398,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"2599:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2400,"nodeType":"RevertStatement","src":"2592:37:11"}]}},{"expression":{"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2403,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2714:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2404,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"2724:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2406,"nodeType":"ExpressionStatement","src":"2714:17:11"}]},"id":2408,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:11","nodeType":"FunctionDefinition","parameters":{"id":2393,"nodeType":"ParameterList","parameters":[],"src":"2459:2:11"},"returnParameters":{"id":2394,"nodeType":"ParameterList","parameters":[],"src":"2470:0:11"},"scope":2428,"src":"2431:307:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2415,"nodeType":"Block","src":"2782:170:11","statements":[{"expression":{"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2411,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2924:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2412,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"2934:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2414,"nodeType":"ExpressionStatement","src":"2924:21:11"}]},"id":2416,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:11","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[],"src":"2771:2:11"},"returnParameters":{"id":2410,"nodeType":"ParameterList","parameters":[],"src":"2782:0:11"},"scope":2428,"src":"2744:208:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2426,"nodeType":"Block","src":"3195:42:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2422,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"3212:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2423,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"3223:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2421,"id":2425,"nodeType":"Return","src":"3205:25:11"}]},"documentation":{"id":2417,"nodeType":"StructuredDocumentation","src":"2958:168:11","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2427,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:11","nodeType":"FunctionDefinition","parameters":{"id":2418,"nodeType":"ParameterList","parameters":[],"src":"3163:2:11"},"returnParameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2427,"src":"3189:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2419,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:11"},"scope":2428,"src":"3131:106:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2429,"src":"886:2353:11","usedErrors":[2373],"usedEvents":[]}],"src":"109:3131:11"},"id":11},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3482]},"id":3483,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2430,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"129:73:12","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3482,"linearizedBaseContracts":[3482],"name":"Math","nameLocation":"211:4:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"222:50:12","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":2434,"name":"MathOverflowedMulDiv","nameLocation":"283:20:12","nodeType":"ErrorDefinition","parameters":{"id":2433,"nodeType":"ParameterList","parameters":[],"src":"303:2:12"},"src":"277:29:12"},{"canonicalName":"Math.Rounding","id":2439,"members":[{"id":2435,"name":"Floor","nameLocation":"336:5:12","nodeType":"EnumValue","src":"336:5:12"},{"id":2436,"name":"Ceil","nameLocation":"379:4:12","nodeType":"EnumValue","src":"379:4:12"},{"id":2437,"name":"Trunc","nameLocation":"421:5:12","nodeType":"EnumValue","src":"421:5:12"},{"id":2438,"name":"Expand","nameLocation":"451:6:12","nodeType":"EnumValue","src":"451:6:12"}],"name":"Rounding","nameLocation":"317:8:12","nodeType":"EnumDefinition","src":"312:169:12"},{"body":{"id":2470,"nodeType":"Block","src":"661:140:12","statements":[{"id":2469,"nodeType":"UncheckedBlock","src":"671:124:12","statements":[{"assignments":[2452],"declarations":[{"constant":false,"id":2452,"mutability":"mutable","name":"c","nameLocation":"703:1:12","nodeType":"VariableDeclaration","scope":2469,"src":"695:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2456,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2453,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"707:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2454,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"711:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2457,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"730:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"734:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2464,"nodeType":"IfStatement","src":"726:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2450,"id":2463,"nodeType":"Return","src":"737:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2466,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"782:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2450,"id":2468,"nodeType":"Return","src":"768:16:12"}]}]},"documentation":{"id":2440,"nodeType":"StructuredDocumentation","src":"487:93:12","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2471,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:12","nodeType":"FunctionDefinition","parameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"a","nameLocation":"609:1:12","nodeType":"VariableDeclaration","scope":2471,"src":"601:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2441,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2444,"mutability":"mutable","name":"b","nameLocation":"620:1:12","nodeType":"VariableDeclaration","scope":2471,"src":"612:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:12"},"returnParameters":{"id":2450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2471,"src":"646:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2446,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2471,"src":"652:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:12"},"scope":3482,"src":"585:216:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2498,"nodeType":"Block","src":"984:113:12","statements":[{"id":2497,"nodeType":"UncheckedBlock","src":"994:97:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"1022:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"1026:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2490,"nodeType":"IfStatement","src":"1018:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2482,"id":2489,"nodeType":"Return","src":"1029:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"1074:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2493,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"1078:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2495,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2482,"id":2496,"nodeType":"Return","src":"1060:20:12"}]}]},"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"807:96:12","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2499,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:12","nodeType":"FunctionDefinition","parameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"a","nameLocation":"932:1:12","nodeType":"VariableDeclaration","scope":2499,"src":"924:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"b","nameLocation":"943:1:12","nodeType":"VariableDeclaration","scope":2499,"src":"935:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:12"},"returnParameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2499,"src":"969:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2478,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2499,"src":"975:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:12"},"scope":3482,"src":"908:189:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2540,"nodeType":"Block","src":"1283:417:12","statements":[{"id":2539,"nodeType":"UncheckedBlock","src":"1293:401:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"1551:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2518,"nodeType":"IfStatement","src":"1547:28:12","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2510,"id":2517,"nodeType":"Return","src":"1559:16:12"}},{"assignments":[2520],"declarations":[{"constant":false,"id":2520,"mutability":"mutable","name":"c","nameLocation":"1597:1:12","nodeType":"VariableDeclaration","scope":2539,"src":"1589:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2524,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2521,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"1601:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2522,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"1605:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2525,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"1624:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2526,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"1628:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2528,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"1633:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"1620:33:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2510,"id":2533,"nodeType":"Return","src":"1636:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2536,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"1681:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2510,"id":2538,"nodeType":"Return","src":"1667:16:12"}]}]},"documentation":{"id":2500,"nodeType":"StructuredDocumentation","src":"1103:99:12","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:12","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"a","nameLocation":"1231:1:12","nodeType":"VariableDeclaration","scope":2541,"src":"1223:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2504,"mutability":"mutable","name":"b","nameLocation":"1242:1:12","nodeType":"VariableDeclaration","scope":2541,"src":"1234:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:12"},"returnParameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"1268:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2506,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"1274:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:12"},"scope":3482,"src":"1207:493:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2568,"nodeType":"Block","src":"1887:114:12","statements":[{"id":2567,"nodeType":"UncheckedBlock","src":"1897:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"1925:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2560,"nodeType":"IfStatement","src":"1921:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2552,"id":2559,"nodeType":"Return","src":"1933:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2562,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"1978:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2563,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"1982:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2552,"id":2566,"nodeType":"Return","src":"1964:20:12"}]}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"1706:100:12","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2569,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:12","nodeType":"FunctionDefinition","parameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"a","nameLocation":"1835:1:12","nodeType":"VariableDeclaration","scope":2569,"src":"1827:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"b","nameLocation":"1846:1:12","nodeType":"VariableDeclaration","scope":2569,"src":"1838:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:12"},"returnParameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2569,"src":"1872:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2548,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2569,"src":"1878:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:12"},"scope":3482,"src":"1811:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"2198:114:12","statements":[{"id":2595,"nodeType":"UncheckedBlock","src":"2208:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2581,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"2236:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2588,"nodeType":"IfStatement","src":"2232:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2580,"id":2587,"nodeType":"Return","src":"2244:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2590,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"2289:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"2293:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2580,"id":2594,"nodeType":"Return","src":"2275:20:12"}]}]},"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"2007:110:12","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:12","nodeType":"FunctionDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"a","nameLocation":"2146:1:12","nodeType":"VariableDeclaration","scope":2597,"src":"2138:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"b","nameLocation":"2157:1:12","nodeType":"VariableDeclaration","scope":2597,"src":"2149:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:12"},"returnParameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2597,"src":"2183:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2576,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2597,"src":"2189:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:12"},"scope":3482,"src":"2122:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2614,"nodeType":"Block","src":"2449:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2607,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"2466:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2608,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"2470:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2611,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"2478:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:12","trueExpression":{"id":2610,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"2474:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2606,"id":2613,"nodeType":"Return","src":"2459:20:12"}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"2318:59:12","text":" @dev Returns the largest of two numbers."},"id":2615,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:12","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"a","nameLocation":"2403:1:12","nodeType":"VariableDeclaration","scope":2615,"src":"2395:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"b","nameLocation":"2414:1:12","nodeType":"VariableDeclaration","scope":2615,"src":"2406:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:12"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2615,"src":"2440:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:12"},"scope":3482,"src":"2382:104:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2632,"nodeType":"Block","src":"2624:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2625,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"2641:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2626,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"2645:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2629,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"2653:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:12","trueExpression":{"id":2628,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"2649:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2624,"id":2631,"nodeType":"Return","src":"2634:20:12"}]},"documentation":{"id":2616,"nodeType":"StructuredDocumentation","src":"2492:60:12","text":" @dev Returns the smallest of two numbers."},"id":2633,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:12","nodeType":"FunctionDefinition","parameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"a","nameLocation":"2578:1:12","nodeType":"VariableDeclaration","scope":2633,"src":"2570:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2617,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"b","nameLocation":"2589:1:12","nodeType":"VariableDeclaration","scope":2633,"src":"2581:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:12"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2633,"src":"2615:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:12"},"scope":3482,"src":"2557:104:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2655,"nodeType":"Block","src":"2845:82:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"2900:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2644,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"2904:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2647,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"2910:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2648,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"2914:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2642,"id":2654,"nodeType":"Return","src":"2892:28:12"}]},"documentation":{"id":2634,"nodeType":"StructuredDocumentation","src":"2667:102:12","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2656,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:12","nodeType":"FunctionDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"a","nameLocation":"2799:1:12","nodeType":"VariableDeclaration","scope":2656,"src":"2791:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2638,"mutability":"mutable","name":"b","nameLocation":"2810:1:12","nodeType":"VariableDeclaration","scope":2656,"src":"2802:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2637,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:12"},"returnParameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2656,"src":"2836:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:12"},"scope":3482,"src":"2774:153:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2689,"nodeType":"Block","src":"3219:260:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2666,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"3233:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2674,"nodeType":"IfStatement","src":"3229:127:12","trueBody":{"id":2673,"nodeType":"Block","src":"3241:115:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2669,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"3340:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2670,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"3344:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2665,"id":2672,"nodeType":"Return","src":"3333:12:12"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2675,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"3444:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2679,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"3458:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2683,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"3467:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:12","trueExpression":{"hexValue":"30","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2665,"id":2688,"nodeType":"Return","src":"3437:35:12"}]},"documentation":{"id":2657,"nodeType":"StructuredDocumentation","src":"2933:210:12","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2690,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:12","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"a","nameLocation":"3173:1:12","nodeType":"VariableDeclaration","scope":2690,"src":"3165:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2658,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"b","nameLocation":"3184:1:12","nodeType":"VariableDeclaration","scope":2690,"src":"3176:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:12"},"returnParameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2690,"src":"3210:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:12"},"scope":3482,"src":"3148:331:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2815,"nodeType":"Block","src":"3901:4018:12","statements":[{"id":2814,"nodeType":"UncheckedBlock","src":"3911:4002:12","statements":[{"assignments":[2703],"declarations":[{"constant":false,"id":2703,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:12","nodeType":"VariableDeclaration","scope":2814,"src":"4232:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2707,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2704,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"4248:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2705,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"4252:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:12"},{"assignments":[2709],"declarations":[{"constant":false,"id":2709,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:12","nodeType":"VariableDeclaration","scope":2814,"src":"4312:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2710,"nodeType":"VariableDeclarationStatement","src":"4312:13:12"},{"AST":{"nodeType":"YulBlock","src":"4392:122:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:12"},"nodeType":"YulFunctionCall","src":"4433:6:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:12"},"nodeType":"YulFunctionCall","src":"4420:20:12"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:12","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:12","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:12"},"nodeType":"YulFunctionCall","src":"4470:14:12"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:12"},"nodeType":"YulFunctionCall","src":"4486:13:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:12"},"nodeType":"YulFunctionCall","src":"4466:34:12"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2703,"isOffset":false,"isSlot":false,"src":"4478:5:12","valueSize":1},{"declaration":2703,"isOffset":false,"isSlot":false,"src":"4493:5:12","valueSize":1},{"declaration":2709,"isOffset":false,"isSlot":false,"src":"4457:5:12","valueSize":1},{"declaration":2693,"isOffset":false,"isSlot":false,"src":"4427:1:12","valueSize":1},{"declaration":2695,"isOffset":false,"isSlot":false,"src":"4430:1:12","valueSize":1}],"id":2711,"nodeType":"InlineAssembly","src":"4383:131:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2712,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"4595:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2720,"nodeType":"IfStatement","src":"4591:368:12","trueBody":{"id":2719,"nodeType":"Block","src":"4607:352:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2715,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"4925:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2716,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"4933:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2701,"id":2718,"nodeType":"Return","src":"4918:26:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2721,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"5065:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2722,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"5080:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2728,"nodeType":"IfStatement","src":"5061:88:12","trueBody":{"id":2727,"nodeType":"Block","src":"5087:62:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2724,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"5112:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2726,"nodeType":"RevertStatement","src":"5105:29:12"}]}},{"assignments":[2730],"declarations":[{"constant":false,"id":2730,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:12","nodeType":"VariableDeclaration","scope":2814,"src":"5404:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2731,"nodeType":"VariableDeclarationStatement","src":"5404:17:12"},{"AST":{"nodeType":"YulBlock","src":"5444:291:12","statements":[{"nodeType":"YulAssignment","src":"5513:38:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:12"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:12"},"nodeType":"YulFunctionCall","src":"5526:25:12"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:12"}]},{"nodeType":"YulAssignment","src":"5633:41:12","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:12"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:12"},"nodeType":"YulFunctionCall","src":"5653:20:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:12"},"nodeType":"YulFunctionCall","src":"5642:32:12"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:12"}]},{"nodeType":"YulAssignment","src":"5691:30:12","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:12"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:12"},"nodeType":"YulFunctionCall","src":"5700:21:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2697,"isOffset":false,"isSlot":false,"src":"5539:11:12","valueSize":1},{"declaration":2703,"isOffset":false,"isSlot":false,"src":"5667:5:12","valueSize":1},{"declaration":2703,"isOffset":false,"isSlot":false,"src":"5691:5:12","valueSize":1},{"declaration":2703,"isOffset":false,"isSlot":false,"src":"5704:5:12","valueSize":1},{"declaration":2709,"isOffset":false,"isSlot":false,"src":"5633:5:12","valueSize":1},{"declaration":2709,"isOffset":false,"isSlot":false,"src":"5646:5:12","valueSize":1},{"declaration":2730,"isOffset":false,"isSlot":false,"src":"5513:9:12","valueSize":1},{"declaration":2730,"isOffset":false,"isSlot":false,"src":"5656:9:12","valueSize":1},{"declaration":2730,"isOffset":false,"isSlot":false,"src":"5711:9:12","valueSize":1},{"declaration":2693,"isOffset":false,"isSlot":false,"src":"5533:1:12","valueSize":1},{"declaration":2695,"isOffset":false,"isSlot":false,"src":"5536:1:12","valueSize":1}],"id":2732,"nodeType":"InlineAssembly","src":"5435:300:12"},{"assignments":[2734],"declarations":[{"constant":false,"id":2734,"mutability":"mutable","name":"twos","nameLocation":"5947:4:12","nodeType":"VariableDeclaration","scope":2814,"src":"5939:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2741,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2735,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"5954:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2737,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"5973:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:12"},{"AST":{"nodeType":"YulBlock","src":"6008:362:12","statements":[{"nodeType":"YulAssignment","src":"6073:37:12","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:12"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:12"},"nodeType":"YulFunctionCall","src":"6088:22:12"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:12"}]},{"nodeType":"YulAssignment","src":"6177:25:12","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:12"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:12"},"nodeType":"YulFunctionCall","src":"6186:16:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:12"}]},{"nodeType":"YulAssignment","src":"6317:39:12","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:12","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:12"},"nodeType":"YulFunctionCall","src":"6333:12:12"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:12"},"nodeType":"YulFunctionCall","src":"6329:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:12"},"nodeType":"YulFunctionCall","src":"6325:31:12"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2697,"isOffset":false,"isSlot":false,"src":"6073:11:12","valueSize":1},{"declaration":2697,"isOffset":false,"isSlot":false,"src":"6092:11:12","valueSize":1},{"declaration":2703,"isOffset":false,"isSlot":false,"src":"6177:5:12","valueSize":1},{"declaration":2703,"isOffset":false,"isSlot":false,"src":"6190:5:12","valueSize":1},{"declaration":2734,"isOffset":false,"isSlot":false,"src":"6105:4:12","valueSize":1},{"declaration":2734,"isOffset":false,"isSlot":false,"src":"6197:4:12","valueSize":1},{"declaration":2734,"isOffset":false,"isSlot":false,"src":"6317:4:12","valueSize":1},{"declaration":2734,"isOffset":false,"isSlot":false,"src":"6340:4:12","valueSize":1},{"declaration":2734,"isOffset":false,"isSlot":false,"src":"6347:4:12","valueSize":1}],"id":2742,"nodeType":"InlineAssembly","src":"5999:371:12"},{"expression":{"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2743,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"6436:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2744,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"6445:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2745,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"6453:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2748,"nodeType":"ExpressionStatement","src":"6436:21:12"},{"assignments":[2750],"declarations":[{"constant":false,"id":2750,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:12","nodeType":"VariableDeclaration","scope":2814,"src":"6775:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2757,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2752,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"6798:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2754,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:12"},{"expression":{"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2758,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7031:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2760,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"7046:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2761,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7060:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2765,"nodeType":"ExpressionStatement","src":"7031:36:12"},{"expression":{"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2766,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7100:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2768,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"7115:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2769,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7129:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2773,"nodeType":"ExpressionStatement","src":"7100:36:12"},{"expression":{"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2774,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7170:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2776,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"7185:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2777,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7199:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2781,"nodeType":"ExpressionStatement","src":"7170:36:12"},{"expression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2782,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7240:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2784,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"7255:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2785,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7269:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2789,"nodeType":"ExpressionStatement","src":"7240:36:12"},{"expression":{"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2790,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7310:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2792,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"7325:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2793,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2797,"nodeType":"ExpressionStatement","src":"7310:36:12"},{"expression":{"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2798,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7381:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2800,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"7396:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2801,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7410:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2805,"nodeType":"ExpressionStatement","src":"7381:36:12"},{"expression":{"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"7851:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2807,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"7860:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2808,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7868:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2811,"nodeType":"ExpressionStatement","src":"7851:24:12"},{"expression":{"id":2812,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"7896:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2701,"id":2813,"nodeType":"Return","src":"7889:13:12"}]}]},"documentation":{"id":2691,"nodeType":"StructuredDocumentation","src":"3485:313:12","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2816,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:12","nodeType":"FunctionDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"mutability":"mutable","name":"x","nameLocation":"3827:1:12","nodeType":"VariableDeclaration","scope":2816,"src":"3819:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2692,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2695,"mutability":"mutable","name":"y","nameLocation":"3838:1:12","nodeType":"VariableDeclaration","scope":2816,"src":"3830:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:12","nodeType":"VariableDeclaration","scope":2816,"src":"3841:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:12"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"result","nameLocation":"3893:6:12","nodeType":"VariableDeclaration","scope":2816,"src":"3885:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:12"},"scope":3482,"src":"3803:4116:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2858,"nodeType":"Block","src":"8161:192:12","statements":[{"assignments":[2832],"declarations":[{"constant":false,"id":2832,"mutability":"mutable","name":"result","nameLocation":"8179:6:12","nodeType":"VariableDeclaration","scope":2858,"src":"8171:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2838,"initialValue":{"arguments":[{"id":2834,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"8195:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2835,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"8198:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2836,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"8201:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2833,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2816,2859],"referencedDeclaration":2816,"src":"8188:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2840,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"8244:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"id":2839,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"8227:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2439_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2843,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"8264:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2844,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"8267:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2845,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"8270:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2842,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2855,"nodeType":"IfStatement","src":"8223:101:12","trueBody":{"id":2854,"nodeType":"Block","src":"8288:36:12","statements":[{"expression":{"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"8302:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2853,"nodeType":"ExpressionStatement","src":"8302:11:12"}]}},{"expression":{"id":2856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"8340:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2830,"id":2857,"nodeType":"Return","src":"8333:13:12"}]},"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"7925:121:12","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2859,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:12","nodeType":"FunctionDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"x","nameLocation":"8075:1:12","nodeType":"VariableDeclaration","scope":2859,"src":"8067:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"y","nameLocation":"8086:1:12","nodeType":"VariableDeclaration","scope":2859,"src":"8078:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2823,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:12","nodeType":"VariableDeclaration","scope":2859,"src":"8089:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:12","nodeType":"VariableDeclaration","scope":2859,"src":"8110:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"},"typeName":{"id":2825,"nodeType":"UserDefinedTypeName","pathNode":{"id":2824,"name":"Rounding","nameLocations":["8110:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2439,"src":"8110:8:12"},"referencedDeclaration":2439,"src":"8110:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:12"},"returnParameters":{"id":2830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2859,"src":"8152:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:12"},"scope":3482,"src":"8051:302:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2970,"nodeType":"Block","src":"8644:1585:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"8658:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2873,"nodeType":"IfStatement","src":"8654:45:12","trueBody":{"id":2872,"nodeType":"Block","src":"8666:33:12","statements":[{"expression":{"hexValue":"30","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2866,"id":2871,"nodeType":"Return","src":"8680:8:12"}]}},{"assignments":[2875],"declarations":[{"constant":false,"id":2875,"mutability":"mutable","name":"result","nameLocation":"9386:6:12","nodeType":"VariableDeclaration","scope":2970,"src":"9378:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2884,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"9406:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2877,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3138,3173],"referencedDeclaration":3138,"src":"9401:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:12"},{"id":2969,"nodeType":"UncheckedBlock","src":"9815:408:12","statements":[{"expression":{"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2885,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9839:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2886,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9849:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2887,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"9858:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9862:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2895,"nodeType":"ExpressionStatement","src":"9839:35:12"},{"expression":{"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9888:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2897,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9898:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"9907:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9911:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2906,"nodeType":"ExpressionStatement","src":"9888:35:12"},{"expression":{"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9937:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9947:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"9956:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9960:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2917,"nodeType":"ExpressionStatement","src":"9937:35:12"},{"expression":{"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9986:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9996:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2920,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"10005:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2921,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"10009:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2928,"nodeType":"ExpressionStatement","src":"9986:35:12"},{"expression":{"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2929,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"10035:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2930,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"10045:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2931,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"10054:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"10058:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2939,"nodeType":"ExpressionStatement","src":"10035:35:12"},{"expression":{"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"10084:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"10094:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2942,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"10103:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"10107:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2946,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2950,"nodeType":"ExpressionStatement","src":"10084:35:12"},{"expression":{"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"10133:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"10143:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2953,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"10152:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"10156:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2957,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2961,"nodeType":"ExpressionStatement","src":"10133:35:12"},{"expression":{"arguments":[{"id":2963,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"10193:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2964,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"10201:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2965,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"10205:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2962,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"10189:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2866,"id":2968,"nodeType":"Return","src":"10182:30:12"}]}]},"documentation":{"id":2860,"nodeType":"StructuredDocumentation","src":"8359:223:12","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2971,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:12","nodeType":"FunctionDefinition","parameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"a","nameLocation":"8609:1:12","nodeType":"VariableDeclaration","scope":2971,"src":"8601:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:12"},"returnParameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2971,"src":"8635:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:12"},"scope":3482,"src":"8587:1642:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3005,"nodeType":"Block","src":"10405:164:12","statements":[{"id":3004,"nodeType":"UncheckedBlock","src":"10415:148:12","statements":[{"assignments":[2983],"declarations":[{"constant":false,"id":2983,"mutability":"mutable","name":"result","nameLocation":"10447:6:12","nodeType":"VariableDeclaration","scope":3004,"src":"10439:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2987,"initialValue":{"arguments":[{"id":2985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"10461:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2984,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2971,3006],"referencedDeclaration":2971,"src":"10456:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"10484:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2990,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"10511:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"id":2989,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"10494:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2439_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"10524:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2993,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"10533:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2995,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"10542:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:12","trueExpression":{"hexValue":"31","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2981,"id":3003,"nodeType":"Return","src":"10477:75:12"}]}]},"documentation":{"id":2972,"nodeType":"StructuredDocumentation","src":"10235:89:12","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3006,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:12","nodeType":"FunctionDefinition","parameters":{"id":2978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"a","nameLocation":"10351:1:12","nodeType":"VariableDeclaration","scope":3006,"src":"10343:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2977,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:12","nodeType":"VariableDeclaration","scope":3006,"src":"10354:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"},"typeName":{"id":2976,"nodeType":"UserDefinedTypeName","pathNode":{"id":2975,"name":"Rounding","nameLocations":["10354:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2439,"src":"10354:8:12"},"referencedDeclaration":2439,"src":"10354:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:12"},"returnParameters":{"id":2981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3006,"src":"10396:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2979,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:12"},"scope":3482,"src":"10329:240:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3137,"nodeType":"Block","src":"10760:922:12","statements":[{"assignments":[3015],"declarations":[{"constant":false,"id":3015,"mutability":"mutable","name":"result","nameLocation":"10778:6:12","nodeType":"VariableDeclaration","scope":3137,"src":"10770:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3014,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3017,"initialValue":{"hexValue":"30","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:12"},{"id":3134,"nodeType":"UncheckedBlock","src":"10798:855:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"10826:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3032,"nodeType":"IfStatement","src":"10822:99:12","trueBody":{"id":3031,"nodeType":"Block","src":"10844:77:12","statements":[{"expression":{"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"10862:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3026,"nodeType":"ExpressionStatement","src":"10862:13:12"},{"expression":{"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3027,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"10893:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3030,"nodeType":"ExpressionStatement","src":"10893:13:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"10938:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3047,"nodeType":"IfStatement","src":"10934:96:12","trueBody":{"id":3046,"nodeType":"Block","src":"10955:75:12","statements":[{"expression":{"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"10973:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3041,"nodeType":"ExpressionStatement","src":"10973:12:12"},{"expression":{"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3042,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11003:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3045,"nodeType":"ExpressionStatement","src":"11003:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11047:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3062,"nodeType":"IfStatement","src":"11043:96:12","trueBody":{"id":3061,"nodeType":"Block","src":"11064:75:12","statements":[{"expression":{"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11082:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3056,"nodeType":"ExpressionStatement","src":"11082:12:12"},{"expression":{"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3057,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11112:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3060,"nodeType":"ExpressionStatement","src":"11112:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11156:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3077,"nodeType":"IfStatement","src":"11152:96:12","trueBody":{"id":3076,"nodeType":"Block","src":"11173:75:12","statements":[{"expression":{"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11191:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3071,"nodeType":"ExpressionStatement","src":"11191:12:12"},{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11221:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3075,"nodeType":"ExpressionStatement","src":"11221:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11265:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3092,"nodeType":"IfStatement","src":"11261:93:12","trueBody":{"id":3091,"nodeType":"Block","src":"11281:73:12","statements":[{"expression":{"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11299:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3086,"nodeType":"ExpressionStatement","src":"11299:11:12"},{"expression":{"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11328:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3090,"nodeType":"ExpressionStatement","src":"11328:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11371:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3107,"nodeType":"IfStatement","src":"11367:93:12","trueBody":{"id":3106,"nodeType":"Block","src":"11387:73:12","statements":[{"expression":{"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11405:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3101,"nodeType":"ExpressionStatement","src":"11405:11:12"},{"expression":{"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3102,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11434:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3105,"nodeType":"ExpressionStatement","src":"11434:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11477:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3122,"nodeType":"IfStatement","src":"11473:93:12","trueBody":{"id":3121,"nodeType":"Block","src":"11493:73:12","statements":[{"expression":{"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11511:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3116,"nodeType":"ExpressionStatement","src":"11511:11:12"},{"expression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11540:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3120,"nodeType":"ExpressionStatement","src":"11540:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11583:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3133,"nodeType":"IfStatement","src":"11579:64:12","trueBody":{"id":3132,"nodeType":"Block","src":"11599:44:12","statements":[{"expression":{"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11617:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3131,"nodeType":"ExpressionStatement","src":"11617:11:12"}]}}]},{"expression":{"id":3135,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"11669:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3013,"id":3136,"nodeType":"Return","src":"11662:13:12"}]},"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"10575:119:12","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3138,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:12","nodeType":"FunctionDefinition","parameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"value","nameLocation":"10721:5:12","nodeType":"VariableDeclaration","scope":3138,"src":"10713:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:12"},"returnParameters":{"id":3013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3138,"src":"10751:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3011,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:12"},"scope":3482,"src":"10699:983:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3172,"nodeType":"Block","src":"11915:168:12","statements":[{"id":3171,"nodeType":"UncheckedBlock","src":"11925:152:12","statements":[{"assignments":[3150],"declarations":[{"constant":false,"id":3150,"mutability":"mutable","name":"result","nameLocation":"11957:6:12","nodeType":"VariableDeclaration","scope":3171,"src":"11949:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3154,"initialValue":{"arguments":[{"id":3152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"11971:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3151,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3138,3173],"referencedDeclaration":3138,"src":"11966:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3155,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"11998:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3157,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"12025:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"id":3156,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"12008:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2439_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"12043:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"12052:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:12","trueExpression":{"hexValue":"31","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3148,"id":3170,"nodeType":"Return","src":"11991:75:12"}]}]},"documentation":{"id":3139,"nodeType":"StructuredDocumentation","src":"11688:142:12","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3173,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:12","nodeType":"FunctionDefinition","parameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"value","nameLocation":"11857:5:12","nodeType":"VariableDeclaration","scope":3173,"src":"11849:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3144,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:12","nodeType":"VariableDeclaration","scope":3173,"src":"11864:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"},"typeName":{"id":3143,"nodeType":"UserDefinedTypeName","pathNode":{"id":3142,"name":"Rounding","nameLocations":["11864:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2439,"src":"11864:8:12"},"referencedDeclaration":2439,"src":"11864:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:12"},"returnParameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3173,"src":"11906:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:12"},"scope":3482,"src":"11835:248:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3301,"nodeType":"Block","src":"12276:854:12","statements":[{"assignments":[3182],"declarations":[{"constant":false,"id":3182,"mutability":"mutable","name":"result","nameLocation":"12294:6:12","nodeType":"VariableDeclaration","scope":3301,"src":"12286:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3184,"initialValue":{"hexValue":"30","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:12"},{"id":3298,"nodeType":"UncheckedBlock","src":"12314:787:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12342:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3201,"nodeType":"IfStatement","src":"12338:103:12","trueBody":{"id":3200,"nodeType":"Block","src":"12361:80:12","statements":[{"expression":{"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12379:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3195,"nodeType":"ExpressionStatement","src":"12379:17:12"},{"expression":{"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"12414:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3199,"nodeType":"ExpressionStatement","src":"12414:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12458:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3218,"nodeType":"IfStatement","src":"12454:103:12","trueBody":{"id":3217,"nodeType":"Block","src":"12477:80:12","statements":[{"expression":{"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12495:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3212,"nodeType":"ExpressionStatement","src":"12495:17:12"},{"expression":{"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3213,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"12530:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3216,"nodeType":"ExpressionStatement","src":"12530:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12574:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3235,"nodeType":"IfStatement","src":"12570:103:12","trueBody":{"id":3234,"nodeType":"Block","src":"12593:80:12","statements":[{"expression":{"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12611:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3229,"nodeType":"ExpressionStatement","src":"12611:17:12"},{"expression":{"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"12646:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3233,"nodeType":"ExpressionStatement","src":"12646:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12690:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3252,"nodeType":"IfStatement","src":"12686:100:12","trueBody":{"id":3251,"nodeType":"Block","src":"12708:78:12","statements":[{"expression":{"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12726:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3246,"nodeType":"ExpressionStatement","src":"12726:16:12"},{"expression":{"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3247,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"12760:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3250,"nodeType":"ExpressionStatement","src":"12760:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12803:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3269,"nodeType":"IfStatement","src":"12799:100:12","trueBody":{"id":3268,"nodeType":"Block","src":"12821:78:12","statements":[{"expression":{"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12839:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3263,"nodeType":"ExpressionStatement","src":"12839:16:12"},{"expression":{"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"12873:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3267,"nodeType":"ExpressionStatement","src":"12873:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12916:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3286,"nodeType":"IfStatement","src":"12912:100:12","trueBody":{"id":3285,"nodeType":"Block","src":"12934:78:12","statements":[{"expression":{"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12952:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3280,"nodeType":"ExpressionStatement","src":"12952:16:12"},{"expression":{"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"12986:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3284,"nodeType":"ExpressionStatement","src":"12986:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"13029:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3297,"nodeType":"IfStatement","src":"13025:66:12","trueBody":{"id":3296,"nodeType":"Block","src":"13047:44:12","statements":[{"expression":{"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3292,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"13065:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3295,"nodeType":"ExpressionStatement","src":"13065:11:12"}]}}]},{"expression":{"id":3299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"13117:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3180,"id":3300,"nodeType":"Return","src":"13110:13:12"}]},"documentation":{"id":3174,"nodeType":"StructuredDocumentation","src":"12089:120:12","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3302,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:12","nodeType":"FunctionDefinition","parameters":{"id":3177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"value","nameLocation":"12237:5:12","nodeType":"VariableDeclaration","scope":3302,"src":"12229:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:12"},"returnParameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3302,"src":"12267:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:12"},"scope":3482,"src":"12214:916:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3336,"nodeType":"Block","src":"13365:170:12","statements":[{"id":3335,"nodeType":"UncheckedBlock","src":"13375:154:12","statements":[{"assignments":[3314],"declarations":[{"constant":false,"id":3314,"mutability":"mutable","name":"result","nameLocation":"13407:6:12","nodeType":"VariableDeclaration","scope":3335,"src":"13399:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3318,"initialValue":{"arguments":[{"id":3316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"13422:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3315,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3302,3337],"referencedDeclaration":3302,"src":"13416:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"13449:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3321,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"13476:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"id":3320,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"13459:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2439_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3324,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"13495:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"13504:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:12","trueExpression":{"hexValue":"31","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3312,"id":3334,"nodeType":"Return","src":"13442:76:12"}]}]},"documentation":{"id":3303,"nodeType":"StructuredDocumentation","src":"13136:143:12","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3337,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:12","nodeType":"FunctionDefinition","parameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"value","nameLocation":"13307:5:12","nodeType":"VariableDeclaration","scope":3337,"src":"13299:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3308,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:12","nodeType":"VariableDeclaration","scope":3337,"src":"13314:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"},"typeName":{"id":3307,"nodeType":"UserDefinedTypeName","pathNode":{"id":3306,"name":"Rounding","nameLocations":["13314:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2439,"src":"13314:8:12"},"referencedDeclaration":2439,"src":"13314:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:12"},"returnParameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3337,"src":"13356:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:12"},"scope":3482,"src":"13284:251:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3423,"nodeType":"Block","src":"13855:600:12","statements":[{"assignments":[3346],"declarations":[{"constant":false,"id":3346,"mutability":"mutable","name":"result","nameLocation":"13873:6:12","nodeType":"VariableDeclaration","scope":3423,"src":"13865:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3345,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3348,"initialValue":{"hexValue":"30","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:12"},{"id":3420,"nodeType":"UncheckedBlock","src":"13893:533:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"13921:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3363,"nodeType":"IfStatement","src":"13917:98:12","trueBody":{"id":3362,"nodeType":"Block","src":"13939:76:12","statements":[{"expression":{"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"13957:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3357,"nodeType":"ExpressionStatement","src":"13957:13:12"},{"expression":{"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"13988:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3361,"nodeType":"ExpressionStatement","src":"13988:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"14032:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3378,"nodeType":"IfStatement","src":"14028:95:12","trueBody":{"id":3377,"nodeType":"Block","src":"14049:74:12","statements":[{"expression":{"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"14067:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3372,"nodeType":"ExpressionStatement","src":"14067:12:12"},{"expression":{"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"14097:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3376,"nodeType":"ExpressionStatement","src":"14097:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"14140:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3393,"nodeType":"IfStatement","src":"14136:95:12","trueBody":{"id":3392,"nodeType":"Block","src":"14157:74:12","statements":[{"expression":{"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"14175:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3387,"nodeType":"ExpressionStatement","src":"14175:12:12"},{"expression":{"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3388,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"14205:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3391,"nodeType":"ExpressionStatement","src":"14205:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"14248:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3408,"nodeType":"IfStatement","src":"14244:95:12","trueBody":{"id":3407,"nodeType":"Block","src":"14265:74:12","statements":[{"expression":{"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"14283:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3402,"nodeType":"ExpressionStatement","src":"14283:12:12"},{"expression":{"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"14313:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3406,"nodeType":"ExpressionStatement","src":"14313:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"14356:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3419,"nodeType":"IfStatement","src":"14352:64:12","trueBody":{"id":3418,"nodeType":"Block","src":"14372:44:12","statements":[{"expression":{"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"14390:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3417,"nodeType":"ExpressionStatement","src":"14390:11:12"}]}}]},{"expression":{"id":3421,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"14442:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3344,"id":3422,"nodeType":"Return","src":"14435:13:12"}]},"documentation":{"id":3338,"nodeType":"StructuredDocumentation","src":"13541:246:12","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3424,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:12","nodeType":"FunctionDefinition","parameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"value","nameLocation":"13816:5:12","nodeType":"VariableDeclaration","scope":3424,"src":"13808:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:12"},"returnParameters":{"id":3344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3424,"src":"13846:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:12"},"scope":3482,"src":"13792:663:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3461,"nodeType":"Block","src":"14692:177:12","statements":[{"id":3460,"nodeType":"UncheckedBlock","src":"14702:161:12","statements":[{"assignments":[3436],"declarations":[{"constant":false,"id":3436,"mutability":"mutable","name":"result","nameLocation":"14734:6:12","nodeType":"VariableDeclaration","scope":3460,"src":"14726:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3440,"initialValue":{"arguments":[{"id":3438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"14750:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3437,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3424,3462],"referencedDeclaration":3424,"src":"14743:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"14777:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3443,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"14804:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"id":3442,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"14787:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2439_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3446,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"14823:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"14838:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:12","trueExpression":{"hexValue":"31","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3457,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3434,"id":3459,"nodeType":"Return","src":"14770:82:12"}]}]},"documentation":{"id":3425,"nodeType":"StructuredDocumentation","src":"14461:144:12","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3462,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:12","nodeType":"FunctionDefinition","parameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"value","nameLocation":"14634:5:12","nodeType":"VariableDeclaration","scope":3462,"src":"14626:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3426,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:12","nodeType":"VariableDeclaration","scope":3462,"src":"14641:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"},"typeName":{"id":3429,"nodeType":"UserDefinedTypeName","pathNode":{"id":3428,"name":"Rounding","nameLocations":["14641:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2439,"src":"14641:8:12"},"referencedDeclaration":2439,"src":"14641:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:12"},"returnParameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3462,"src":"14683:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:12"},"scope":3482,"src":"14610:259:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3480,"nodeType":"Block","src":"15067:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3473,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"15090:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}],"id":3472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3471,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:12","typeDescriptions":{}}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3470,"id":3479,"nodeType":"Return","src":"15077:31:12"}]},"documentation":{"id":3463,"nodeType":"StructuredDocumentation","src":"14875:113:12","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3481,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:12","nodeType":"FunctionDefinition","parameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:12","nodeType":"VariableDeclaration","scope":3481,"src":"15019:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"},"typeName":{"id":3465,"nodeType":"UserDefinedTypeName","pathNode":{"id":3464,"name":"Rounding","nameLocations":["15019:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2439,"src":"15019:8:12"},"referencedDeclaration":2439,"src":"15019:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2439","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:12"},"returnParameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"15061:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3468,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:12"},"scope":3482,"src":"14993:122:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3483,"src":"203:14914:12","usedErrors":[2434],"usedEvents":[]}],"src":"103:15015:12"},"id":12},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5237]},"id":5238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3484,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3485,"nodeType":"StructuredDocumentation","src":"218:545:13","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5237,"linearizedBaseContracts":[5237],"name":"SafeCast","nameLocation":"772:8:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3486,"nodeType":"StructuredDocumentation","src":"787:68:13","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":3492,"name":"SafeCastOverflowedUintDowncast","nameLocation":"866:30:13","nodeType":"ErrorDefinition","parameters":{"id":3491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"bits","nameLocation":"903:4:13","nodeType":"VariableDeclaration","scope":3492,"src":"897:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3487,"name":"uint8","nodeType":"ElementaryTypeName","src":"897:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3490,"mutability":"mutable","name":"value","nameLocation":"917:5:13","nodeType":"VariableDeclaration","scope":3492,"src":"909:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3489,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"896:27:13"},"src":"860:64:13"},{"documentation":{"id":3493,"nodeType":"StructuredDocumentation","src":"930:75:13","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":3497,"name":"SafeCastOverflowedIntToUint","nameLocation":"1016:27:13","nodeType":"ErrorDefinition","parameters":{"id":3496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"value","nameLocation":"1051:5:13","nodeType":"VariableDeclaration","scope":3497,"src":"1044:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3494,"name":"int256","nodeType":"ElementaryTypeName","src":"1044:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1043:14:13"},"src":"1010:48:13"},{"documentation":{"id":3498,"nodeType":"StructuredDocumentation","src":"1064:67:13","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":3504,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1142:29:13","nodeType":"ErrorDefinition","parameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"bits","nameLocation":"1178:4:13","nodeType":"VariableDeclaration","scope":3504,"src":"1172:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3499,"name":"uint8","nodeType":"ElementaryTypeName","src":"1172:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3502,"mutability":"mutable","name":"value","nameLocation":"1191:5:13","nodeType":"VariableDeclaration","scope":3504,"src":"1184:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3501,"name":"int256","nodeType":"ElementaryTypeName","src":"1184:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1171:26:13"},"src":"1136:62:13"},{"documentation":{"id":3505,"nodeType":"StructuredDocumentation","src":"1204:75:13","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":3509,"name":"SafeCastOverflowedUintToInt","nameLocation":"1290:27:13","nodeType":"ErrorDefinition","parameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"value","nameLocation":"1326:5:13","nodeType":"VariableDeclaration","scope":3509,"src":"1318:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:15:13"},"src":"1284:49:13"},{"body":{"id":3536,"nodeType":"Block","src":"1690:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"1704:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1717:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3519,"name":"uint248","nodeType":"ElementaryTypeName","src":"1717:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3518,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:3:13","memberName":"max","nodeType":"MemberAccess","src":"1712:17:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1704:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3530,"nodeType":"IfStatement","src":"1700:105:13","trueBody":{"id":3529,"nodeType":"Block","src":"1731:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"1788:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3524,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"1752:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"RevertStatement","src":"1745:49:13"}]}},{"expression":{"arguments":[{"id":3533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"1829:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1821:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3531,"name":"uint248","nodeType":"ElementaryTypeName","src":"1821:7:13","typeDescriptions":{}}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1821:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3516,"id":3535,"nodeType":"Return","src":"1814:21:13"}]},"documentation":{"id":3510,"nodeType":"StructuredDocumentation","src":"1339:280:13","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3537,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1633:9:13","nodeType":"FunctionDefinition","parameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"value","nameLocation":"1651:5:13","nodeType":"VariableDeclaration","scope":3537,"src":"1643:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1642:15:13"},"returnParameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3537,"src":"1681:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3514,"name":"uint248","nodeType":"ElementaryTypeName","src":"1681:7:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1680:9:13"},"scope":5237,"src":"1624:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3564,"nodeType":"Block","src":"2199:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"2213:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2226:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3547,"name":"uint240","nodeType":"ElementaryTypeName","src":"2226:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3546,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2221:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2235:3:13","memberName":"max","nodeType":"MemberAccess","src":"2221:17:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2213:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3558,"nodeType":"IfStatement","src":"2209:105:13","trueBody":{"id":3557,"nodeType":"Block","src":"2240:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"2297:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3552,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"2261:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3556,"nodeType":"RevertStatement","src":"2254:49:13"}]}},{"expression":{"arguments":[{"id":3561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"2338:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2330:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3559,"name":"uint240","nodeType":"ElementaryTypeName","src":"2330:7:13","typeDescriptions":{}}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3544,"id":3563,"nodeType":"Return","src":"2323:21:13"}]},"documentation":{"id":3538,"nodeType":"StructuredDocumentation","src":"1848:280:13","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3565,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2142:9:13","nodeType":"FunctionDefinition","parameters":{"id":3541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3540,"mutability":"mutable","name":"value","nameLocation":"2160:5:13","nodeType":"VariableDeclaration","scope":3565,"src":"2152:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3539,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:15:13"},"returnParameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3565,"src":"2190:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3542,"name":"uint240","nodeType":"ElementaryTypeName","src":"2190:7:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2189:9:13"},"scope":5237,"src":"2133:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3592,"nodeType":"Block","src":"2708:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"2722:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3575,"name":"uint232","nodeType":"ElementaryTypeName","src":"2735:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2730:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2744:3:13","memberName":"max","nodeType":"MemberAccess","src":"2730:17:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2722:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3586,"nodeType":"IfStatement","src":"2718:105:13","trueBody":{"id":3585,"nodeType":"Block","src":"2749:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2801:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"2806:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3580,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"2770:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3584,"nodeType":"RevertStatement","src":"2763:49:13"}]}},{"expression":{"arguments":[{"id":3589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"2847:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2839:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3587,"name":"uint232","nodeType":"ElementaryTypeName","src":"2839:7:13","typeDescriptions":{}}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2839:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3572,"id":3591,"nodeType":"Return","src":"2832:21:13"}]},"documentation":{"id":3566,"nodeType":"StructuredDocumentation","src":"2357:280:13","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3593,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2651:9:13","nodeType":"FunctionDefinition","parameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"value","nameLocation":"2669:5:13","nodeType":"VariableDeclaration","scope":3593,"src":"2661:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2660:15:13"},"returnParameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3593,"src":"2699:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3570,"name":"uint232","nodeType":"ElementaryTypeName","src":"2699:7:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2698:9:13"},"scope":5237,"src":"2642:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3620,"nodeType":"Block","src":"3217:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"3231:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3244:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3603,"name":"uint224","nodeType":"ElementaryTypeName","src":"3244:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3602,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3239:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3253:3:13","memberName":"max","nodeType":"MemberAccess","src":"3239:17:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3231:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3614,"nodeType":"IfStatement","src":"3227:105:13","trueBody":{"id":3613,"nodeType":"Block","src":"3258:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"3315:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3608,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"3279:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3279:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3612,"nodeType":"RevertStatement","src":"3272:49:13"}]}},{"expression":{"arguments":[{"id":3617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"3356:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3348:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3615,"name":"uint224","nodeType":"ElementaryTypeName","src":"3348:7:13","typeDescriptions":{}}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3600,"id":3619,"nodeType":"Return","src":"3341:21:13"}]},"documentation":{"id":3594,"nodeType":"StructuredDocumentation","src":"2866:280:13","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3621,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3160:9:13","nodeType":"FunctionDefinition","parameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"value","nameLocation":"3178:5:13","nodeType":"VariableDeclaration","scope":3621,"src":"3170:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3169:15:13"},"returnParameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3621,"src":"3208:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3598,"name":"uint224","nodeType":"ElementaryTypeName","src":"3208:7:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3207:9:13"},"scope":5237,"src":"3151:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3648,"nodeType":"Block","src":"3726:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"3740:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3753:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3631,"name":"uint216","nodeType":"ElementaryTypeName","src":"3753:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3630,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3748:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3748:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3762:3:13","memberName":"max","nodeType":"MemberAccess","src":"3748:17:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3740:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3642,"nodeType":"IfStatement","src":"3736:105:13","trueBody":{"id":3641,"nodeType":"Block","src":"3767:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3819:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"3824:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3636,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"3788:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3788:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3640,"nodeType":"RevertStatement","src":"3781:49:13"}]}},{"expression":{"arguments":[{"id":3645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"3865:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3857:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3643,"name":"uint216","nodeType":"ElementaryTypeName","src":"3857:7:13","typeDescriptions":{}}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3857:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3628,"id":3647,"nodeType":"Return","src":"3850:21:13"}]},"documentation":{"id":3622,"nodeType":"StructuredDocumentation","src":"3375:280:13","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3649,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3669:9:13","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"value","nameLocation":"3687:5:13","nodeType":"VariableDeclaration","scope":3649,"src":"3679:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"3679:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3678:15:13"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3649,"src":"3717:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3626,"name":"uint216","nodeType":"ElementaryTypeName","src":"3717:7:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3716:9:13"},"scope":5237,"src":"3660:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3676,"nodeType":"Block","src":"4235:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"4249:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4262:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3659,"name":"uint208","nodeType":"ElementaryTypeName","src":"4262:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3658,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4257:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4271:3:13","memberName":"max","nodeType":"MemberAccess","src":"4257:17:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4249:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3670,"nodeType":"IfStatement","src":"4245:105:13","trueBody":{"id":3669,"nodeType":"Block","src":"4276:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4328:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"4333:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3664,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"4297:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3668,"nodeType":"RevertStatement","src":"4290:49:13"}]}},{"expression":{"arguments":[{"id":3673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"4374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3671,"name":"uint208","nodeType":"ElementaryTypeName","src":"4366:7:13","typeDescriptions":{}}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3656,"id":3675,"nodeType":"Return","src":"4359:21:13"}]},"documentation":{"id":3650,"nodeType":"StructuredDocumentation","src":"3884:280:13","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3677,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4178:9:13","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"value","nameLocation":"4196:5:13","nodeType":"VariableDeclaration","scope":3677,"src":"4188:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"4188:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4187:15:13"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3677,"src":"4226:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3654,"name":"uint208","nodeType":"ElementaryTypeName","src":"4226:7:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4225:9:13"},"scope":5237,"src":"4169:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3704,"nodeType":"Block","src":"4744:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"4758:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4771:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3687,"name":"uint200","nodeType":"ElementaryTypeName","src":"4771:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":3686,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4766:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4780:3:13","memberName":"max","nodeType":"MemberAccess","src":"4766:17:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4758:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3698,"nodeType":"IfStatement","src":"4754:105:13","trueBody":{"id":3697,"nodeType":"Block","src":"4785:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"4842:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3692,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"4806:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3696,"nodeType":"RevertStatement","src":"4799:49:13"}]}},{"expression":{"arguments":[{"id":3701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"4883:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4875:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3699,"name":"uint200","nodeType":"ElementaryTypeName","src":"4875:7:13","typeDescriptions":{}}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4875:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":3684,"id":3703,"nodeType":"Return","src":"4868:21:13"}]},"documentation":{"id":3678,"nodeType":"StructuredDocumentation","src":"4393:280:13","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3705,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4687:9:13","nodeType":"FunctionDefinition","parameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"value","nameLocation":"4705:5:13","nodeType":"VariableDeclaration","scope":3705,"src":"4697:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4696:15:13"},"returnParameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3705,"src":"4735:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":3682,"name":"uint200","nodeType":"ElementaryTypeName","src":"4735:7:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4734:9:13"},"scope":5237,"src":"4678:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3732,"nodeType":"Block","src":"5253:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"5267:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5280:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3715,"name":"uint192","nodeType":"ElementaryTypeName","src":"5280:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":3714,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5275:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":3718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5289:3:13","memberName":"max","nodeType":"MemberAccess","src":"5275:17:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5267:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3726,"nodeType":"IfStatement","src":"5263:105:13","trueBody":{"id":3725,"nodeType":"Block","src":"5294:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5346:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"5351:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3720,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"5315:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3724,"nodeType":"RevertStatement","src":"5308:49:13"}]}},{"expression":{"arguments":[{"id":3729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"5392:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5384:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3727,"name":"uint192","nodeType":"ElementaryTypeName","src":"5384:7:13","typeDescriptions":{}}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5384:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":3712,"id":3731,"nodeType":"Return","src":"5377:21:13"}]},"documentation":{"id":3706,"nodeType":"StructuredDocumentation","src":"4902:280:13","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3733,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5196:9:13","nodeType":"FunctionDefinition","parameters":{"id":3709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3708,"mutability":"mutable","name":"value","nameLocation":"5214:5:13","nodeType":"VariableDeclaration","scope":3733,"src":"5206:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3707,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5205:15:13"},"returnParameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3733,"src":"5244:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3710,"name":"uint192","nodeType":"ElementaryTypeName","src":"5244:7:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5243:9:13"},"scope":5237,"src":"5187:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3760,"nodeType":"Block","src":"5762:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"5776:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5789:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3743,"name":"uint184","nodeType":"ElementaryTypeName","src":"5789:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":3742,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5784:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5798:3:13","memberName":"max","nodeType":"MemberAccess","src":"5784:17:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5776:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3754,"nodeType":"IfStatement","src":"5772:105:13","trueBody":{"id":3753,"nodeType":"Block","src":"5803:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5855:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"5860:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3748,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"5824:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5824:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3752,"nodeType":"RevertStatement","src":"5817:49:13"}]}},{"expression":{"arguments":[{"id":3757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"5901:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5893:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3755,"name":"uint184","nodeType":"ElementaryTypeName","src":"5893:7:13","typeDescriptions":{}}},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5893:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":3740,"id":3759,"nodeType":"Return","src":"5886:21:13"}]},"documentation":{"id":3734,"nodeType":"StructuredDocumentation","src":"5411:280:13","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3761,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5705:9:13","nodeType":"FunctionDefinition","parameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3736,"mutability":"mutable","name":"value","nameLocation":"5723:5:13","nodeType":"VariableDeclaration","scope":3761,"src":"5715:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3735,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5714:15:13"},"returnParameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3761,"src":"5753:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":3738,"name":"uint184","nodeType":"ElementaryTypeName","src":"5753:7:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5752:9:13"},"scope":5237,"src":"5696:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3788,"nodeType":"Block","src":"6271:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"6285:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6298:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3771,"name":"uint176","nodeType":"ElementaryTypeName","src":"6298:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":3770,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6293:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6307:3:13","memberName":"max","nodeType":"MemberAccess","src":"6293:17:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6285:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3782,"nodeType":"IfStatement","src":"6281:105:13","trueBody":{"id":3781,"nodeType":"Block","src":"6312:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6364:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"6369:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3776,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"6333:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3780,"nodeType":"RevertStatement","src":"6326:49:13"}]}},{"expression":{"arguments":[{"id":3785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"6410:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6402:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3783,"name":"uint176","nodeType":"ElementaryTypeName","src":"6402:7:13","typeDescriptions":{}}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6402:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3768,"id":3787,"nodeType":"Return","src":"6395:21:13"}]},"documentation":{"id":3762,"nodeType":"StructuredDocumentation","src":"5920:280:13","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3789,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6214:9:13","nodeType":"FunctionDefinition","parameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"value","nameLocation":"6232:5:13","nodeType":"VariableDeclaration","scope":3789,"src":"6224:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"6224:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6223:15:13"},"returnParameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3789,"src":"6262:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3766,"name":"uint176","nodeType":"ElementaryTypeName","src":"6262:7:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6261:9:13"},"scope":5237,"src":"6205:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3816,"nodeType":"Block","src":"6780:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"6794:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6807:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3799,"name":"uint168","nodeType":"ElementaryTypeName","src":"6807:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":3798,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6802:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6816:3:13","memberName":"max","nodeType":"MemberAccess","src":"6802:17:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6794:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3810,"nodeType":"IfStatement","src":"6790:105:13","trueBody":{"id":3809,"nodeType":"Block","src":"6821:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6873:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"6878:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3804,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"6842:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6842:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3808,"nodeType":"RevertStatement","src":"6835:49:13"}]}},{"expression":{"arguments":[{"id":3813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"6919:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3811,"name":"uint168","nodeType":"ElementaryTypeName","src":"6911:7:13","typeDescriptions":{}}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":3796,"id":3815,"nodeType":"Return","src":"6904:21:13"}]},"documentation":{"id":3790,"nodeType":"StructuredDocumentation","src":"6429:280:13","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3817,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6723:9:13","nodeType":"FunctionDefinition","parameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"value","nameLocation":"6741:5:13","nodeType":"VariableDeclaration","scope":3817,"src":"6733:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"6733:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6732:15:13"},"returnParameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3817,"src":"6771:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":3794,"name":"uint168","nodeType":"ElementaryTypeName","src":"6771:7:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6770:9:13"},"scope":5237,"src":"6714:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3844,"nodeType":"Block","src":"7289:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"7303:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7316:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3827,"name":"uint160","nodeType":"ElementaryTypeName","src":"7316:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":3826,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7311:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7325:3:13","memberName":"max","nodeType":"MemberAccess","src":"7311:17:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7303:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3838,"nodeType":"IfStatement","src":"7299:105:13","trueBody":{"id":3837,"nodeType":"Block","src":"7330:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7382:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"7387:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3832,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"7351:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3836,"nodeType":"RevertStatement","src":"7344:49:13"}]}},{"expression":{"arguments":[{"id":3841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"7428:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7420:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3839,"name":"uint160","nodeType":"ElementaryTypeName","src":"7420:7:13","typeDescriptions":{}}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7420:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3824,"id":3843,"nodeType":"Return","src":"7413:21:13"}]},"documentation":{"id":3818,"nodeType":"StructuredDocumentation","src":"6938:280:13","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3845,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7232:9:13","nodeType":"FunctionDefinition","parameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"value","nameLocation":"7250:5:13","nodeType":"VariableDeclaration","scope":3845,"src":"7242:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7241:15:13"},"returnParameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3845,"src":"7280:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3822,"name":"uint160","nodeType":"ElementaryTypeName","src":"7280:7:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7279:9:13"},"scope":5237,"src":"7223:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3872,"nodeType":"Block","src":"7798:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"7812:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7825:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3855,"name":"uint152","nodeType":"ElementaryTypeName","src":"7825:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":3854,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7820:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7820:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7834:3:13","memberName":"max","nodeType":"MemberAccess","src":"7820:17:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7812:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3866,"nodeType":"IfStatement","src":"7808:105:13","trueBody":{"id":3865,"nodeType":"Block","src":"7839:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7891:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"7896:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3860,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"7860:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7860:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3864,"nodeType":"RevertStatement","src":"7853:49:13"}]}},{"expression":{"arguments":[{"id":3869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"7937:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7929:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3867,"name":"uint152","nodeType":"ElementaryTypeName","src":"7929:7:13","typeDescriptions":{}}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":3852,"id":3871,"nodeType":"Return","src":"7922:21:13"}]},"documentation":{"id":3846,"nodeType":"StructuredDocumentation","src":"7447:280:13","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3873,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7741:9:13","nodeType":"FunctionDefinition","parameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"value","nameLocation":"7759:5:13","nodeType":"VariableDeclaration","scope":3873,"src":"7751:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"7751:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7750:15:13"},"returnParameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3873,"src":"7789:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":3850,"name":"uint152","nodeType":"ElementaryTypeName","src":"7789:7:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7788:9:13"},"scope":5237,"src":"7732:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3900,"nodeType":"Block","src":"8307:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"8321:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8334:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3883,"name":"uint144","nodeType":"ElementaryTypeName","src":"8334:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":3882,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8329:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8343:3:13","memberName":"max","nodeType":"MemberAccess","src":"8329:17:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8321:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3894,"nodeType":"IfStatement","src":"8317:105:13","trueBody":{"id":3893,"nodeType":"Block","src":"8348:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8400:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"8405:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3888,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"8369:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8369:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3892,"nodeType":"RevertStatement","src":"8362:49:13"}]}},{"expression":{"arguments":[{"id":3897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"8446:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8438:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3895,"name":"uint144","nodeType":"ElementaryTypeName","src":"8438:7:13","typeDescriptions":{}}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8438:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":3880,"id":3899,"nodeType":"Return","src":"8431:21:13"}]},"documentation":{"id":3874,"nodeType":"StructuredDocumentation","src":"7956:280:13","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3901,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8250:9:13","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"value","nameLocation":"8268:5:13","nodeType":"VariableDeclaration","scope":3901,"src":"8260:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"8260:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8259:15:13"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3901,"src":"8298:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":3878,"name":"uint144","nodeType":"ElementaryTypeName","src":"8298:7:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8297:9:13"},"scope":5237,"src":"8241:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3928,"nodeType":"Block","src":"8816:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"8830:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8843:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3911,"name":"uint136","nodeType":"ElementaryTypeName","src":"8843:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3910,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8838:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8852:3:13","memberName":"max","nodeType":"MemberAccess","src":"8838:17:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8830:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3922,"nodeType":"IfStatement","src":"8826:105:13","trueBody":{"id":3921,"nodeType":"Block","src":"8857:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8909:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"8914:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3916,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"8878:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8878:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3920,"nodeType":"RevertStatement","src":"8871:49:13"}]}},{"expression":{"arguments":[{"id":3925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"8955:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8947:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3923,"name":"uint136","nodeType":"ElementaryTypeName","src":"8947:7:13","typeDescriptions":{}}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3908,"id":3927,"nodeType":"Return","src":"8940:21:13"}]},"documentation":{"id":3902,"nodeType":"StructuredDocumentation","src":"8465:280:13","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3929,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8759:9:13","nodeType":"FunctionDefinition","parameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"value","nameLocation":"8777:5:13","nodeType":"VariableDeclaration","scope":3929,"src":"8769:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"8769:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8768:15:13"},"returnParameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3929,"src":"8807:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3906,"name":"uint136","nodeType":"ElementaryTypeName","src":"8807:7:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8806:9:13"},"scope":5237,"src":"8750:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3956,"nodeType":"Block","src":"9325:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"9339:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9352:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3939,"name":"uint128","nodeType":"ElementaryTypeName","src":"9352:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3938,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9347:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9347:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9361:3:13","memberName":"max","nodeType":"MemberAccess","src":"9347:17:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9339:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3950,"nodeType":"IfStatement","src":"9335:105:13","trueBody":{"id":3949,"nodeType":"Block","src":"9366:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9418:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"9423:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3944,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"9387:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9387:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3948,"nodeType":"RevertStatement","src":"9380:49:13"}]}},{"expression":{"arguments":[{"id":3953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"9464:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3951,"name":"uint128","nodeType":"ElementaryTypeName","src":"9456:7:13","typeDescriptions":{}}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3936,"id":3955,"nodeType":"Return","src":"9449:21:13"}]},"documentation":{"id":3930,"nodeType":"StructuredDocumentation","src":"8974:280:13","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3957,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9268:9:13","nodeType":"FunctionDefinition","parameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"value","nameLocation":"9286:5:13","nodeType":"VariableDeclaration","scope":3957,"src":"9278:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3931,"name":"uint256","nodeType":"ElementaryTypeName","src":"9278:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9277:15:13"},"returnParameters":{"id":3936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3957,"src":"9316:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3934,"name":"uint128","nodeType":"ElementaryTypeName","src":"9316:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9315:9:13"},"scope":5237,"src":"9259:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3984,"nodeType":"Block","src":"9834:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"9848:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9861:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3967,"name":"uint120","nodeType":"ElementaryTypeName","src":"9861:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3966,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9856:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9870:3:13","memberName":"max","nodeType":"MemberAccess","src":"9856:17:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9848:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3978,"nodeType":"IfStatement","src":"9844:105:13","trueBody":{"id":3977,"nodeType":"Block","src":"9875:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9927:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"9932:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3972,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"9896:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9896:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3976,"nodeType":"RevertStatement","src":"9889:49:13"}]}},{"expression":{"arguments":[{"id":3981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"9973:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9965:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3979,"name":"uint120","nodeType":"ElementaryTypeName","src":"9965:7:13","typeDescriptions":{}}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9965:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3964,"id":3983,"nodeType":"Return","src":"9958:21:13"}]},"documentation":{"id":3958,"nodeType":"StructuredDocumentation","src":"9483:280:13","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3985,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9777:9:13","nodeType":"FunctionDefinition","parameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"value","nameLocation":"9795:5:13","nodeType":"VariableDeclaration","scope":3985,"src":"9787:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"9787:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9786:15:13"},"returnParameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3985,"src":"9825:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3962,"name":"uint120","nodeType":"ElementaryTypeName","src":"9825:7:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9824:9:13"},"scope":5237,"src":"9768:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4012,"nodeType":"Block","src":"10343:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"10357:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10370:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3995,"name":"uint112","nodeType":"ElementaryTypeName","src":"10370:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3994,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10365:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10365:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10379:3:13","memberName":"max","nodeType":"MemberAccess","src":"10365:17:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10357:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4006,"nodeType":"IfStatement","src":"10353:105:13","trueBody":{"id":4005,"nodeType":"Block","src":"10384:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10436:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"10441:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4000,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"10405:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10405:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4004,"nodeType":"RevertStatement","src":"10398:49:13"}]}},{"expression":{"arguments":[{"id":4009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"10482:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4007,"name":"uint112","nodeType":"ElementaryTypeName","src":"10474:7:13","typeDescriptions":{}}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10474:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3992,"id":4011,"nodeType":"Return","src":"10467:21:13"}]},"documentation":{"id":3986,"nodeType":"StructuredDocumentation","src":"9992:280:13","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4013,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10286:9:13","nodeType":"FunctionDefinition","parameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"value","nameLocation":"10304:5:13","nodeType":"VariableDeclaration","scope":4013,"src":"10296:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"10296:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10295:15:13"},"returnParameters":{"id":3992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4013,"src":"10334:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3990,"name":"uint112","nodeType":"ElementaryTypeName","src":"10334:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10333:9:13"},"scope":5237,"src":"10277:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4040,"nodeType":"Block","src":"10852:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"10866:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10879:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4023,"name":"uint104","nodeType":"ElementaryTypeName","src":"10879:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4022,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10874:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10888:3:13","memberName":"max","nodeType":"MemberAccess","src":"10874:17:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10866:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4034,"nodeType":"IfStatement","src":"10862:105:13","trueBody":{"id":4033,"nodeType":"Block","src":"10893:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10945:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"10950:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4028,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"10914:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10914:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4032,"nodeType":"RevertStatement","src":"10907:49:13"}]}},{"expression":{"arguments":[{"id":4037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"10991:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10983:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4035,"name":"uint104","nodeType":"ElementaryTypeName","src":"10983:7:13","typeDescriptions":{}}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10983:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4020,"id":4039,"nodeType":"Return","src":"10976:21:13"}]},"documentation":{"id":4014,"nodeType":"StructuredDocumentation","src":"10501:280:13","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4041,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10795:9:13","nodeType":"FunctionDefinition","parameters":{"id":4017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4016,"mutability":"mutable","name":"value","nameLocation":"10813:5:13","nodeType":"VariableDeclaration","scope":4041,"src":"10805:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"10805:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10804:15:13"},"returnParameters":{"id":4020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4041,"src":"10843:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4018,"name":"uint104","nodeType":"ElementaryTypeName","src":"10843:7:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10842:9:13"},"scope":5237,"src":"10786:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4068,"nodeType":"Block","src":"11355:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"11369:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11382:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4051,"name":"uint96","nodeType":"ElementaryTypeName","src":"11382:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4050,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11377:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11377:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11390:3:13","memberName":"max","nodeType":"MemberAccess","src":"11377:16:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11369:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4062,"nodeType":"IfStatement","src":"11365:103:13","trueBody":{"id":4061,"nodeType":"Block","src":"11395:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"11451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4056,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"11416:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11416:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4060,"nodeType":"RevertStatement","src":"11409:48:13"}]}},{"expression":{"arguments":[{"id":4065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"11491:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11484:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4063,"name":"uint96","nodeType":"ElementaryTypeName","src":"11484:6:13","typeDescriptions":{}}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11484:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4048,"id":4067,"nodeType":"Return","src":"11477:20:13"}]},"documentation":{"id":4042,"nodeType":"StructuredDocumentation","src":"11010:276:13","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4069,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11300:8:13","nodeType":"FunctionDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"value","nameLocation":"11317:5:13","nodeType":"VariableDeclaration","scope":4069,"src":"11309:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:15:13"},"returnParameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4069,"src":"11347:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4046,"name":"uint96","nodeType":"ElementaryTypeName","src":"11347:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11346:8:13"},"scope":5237,"src":"11291:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4096,"nodeType":"Block","src":"11855:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"11869:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11882:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4079,"name":"uint88","nodeType":"ElementaryTypeName","src":"11882:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4078,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11877:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11877:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11890:3:13","memberName":"max","nodeType":"MemberAccess","src":"11877:16:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11869:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4090,"nodeType":"IfStatement","src":"11865:103:13","trueBody":{"id":4089,"nodeType":"Block","src":"11895:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11947:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"11951:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4084,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"11916:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4088,"nodeType":"RevertStatement","src":"11909:48:13"}]}},{"expression":{"arguments":[{"id":4093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"11991:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11984:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4091,"name":"uint88","nodeType":"ElementaryTypeName","src":"11984:6:13","typeDescriptions":{}}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11984:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4076,"id":4095,"nodeType":"Return","src":"11977:20:13"}]},"documentation":{"id":4070,"nodeType":"StructuredDocumentation","src":"11510:276:13","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4097,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11800:8:13","nodeType":"FunctionDefinition","parameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4072,"mutability":"mutable","name":"value","nameLocation":"11817:5:13","nodeType":"VariableDeclaration","scope":4097,"src":"11809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"11809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11808:15:13"},"returnParameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4097,"src":"11847:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4074,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11846:8:13"},"scope":5237,"src":"11791:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4124,"nodeType":"Block","src":"12355:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"12369:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4107,"name":"uint80","nodeType":"ElementaryTypeName","src":"12382:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4106,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12377:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12390:3:13","memberName":"max","nodeType":"MemberAccess","src":"12377:16:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12369:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4118,"nodeType":"IfStatement","src":"12365:103:13","trueBody":{"id":4117,"nodeType":"Block","src":"12395:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12447:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"12451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4112,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"12416:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12416:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4116,"nodeType":"RevertStatement","src":"12409:48:13"}]}},{"expression":{"arguments":[{"id":4121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"12491:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12484:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4119,"name":"uint80","nodeType":"ElementaryTypeName","src":"12484:6:13","typeDescriptions":{}}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12484:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4104,"id":4123,"nodeType":"Return","src":"12477:20:13"}]},"documentation":{"id":4098,"nodeType":"StructuredDocumentation","src":"12010:276:13","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4125,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12300:8:13","nodeType":"FunctionDefinition","parameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"value","nameLocation":"12317:5:13","nodeType":"VariableDeclaration","scope":4125,"src":"12309:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4099,"name":"uint256","nodeType":"ElementaryTypeName","src":"12309:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12308:15:13"},"returnParameters":{"id":4104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4125,"src":"12347:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4102,"name":"uint80","nodeType":"ElementaryTypeName","src":"12347:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12346:8:13"},"scope":5237,"src":"12291:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4152,"nodeType":"Block","src":"12855:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"12869:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12882:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4135,"name":"uint72","nodeType":"ElementaryTypeName","src":"12882:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4134,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12877:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12877:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12890:3:13","memberName":"max","nodeType":"MemberAccess","src":"12877:16:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12869:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4146,"nodeType":"IfStatement","src":"12865:103:13","trueBody":{"id":4145,"nodeType":"Block","src":"12895:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12947:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"12951:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4140,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"12916:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12916:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4144,"nodeType":"RevertStatement","src":"12909:48:13"}]}},{"expression":{"arguments":[{"id":4149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"12991:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12984:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4147,"name":"uint72","nodeType":"ElementaryTypeName","src":"12984:6:13","typeDescriptions":{}}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12984:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4132,"id":4151,"nodeType":"Return","src":"12977:20:13"}]},"documentation":{"id":4126,"nodeType":"StructuredDocumentation","src":"12510:276:13","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4153,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12800:8:13","nodeType":"FunctionDefinition","parameters":{"id":4129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"mutability":"mutable","name":"value","nameLocation":"12817:5:13","nodeType":"VariableDeclaration","scope":4153,"src":"12809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"12809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12808:15:13"},"returnParameters":{"id":4132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4153,"src":"12847:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4130,"name":"uint72","nodeType":"ElementaryTypeName","src":"12847:6:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12846:8:13"},"scope":5237,"src":"12791:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4180,"nodeType":"Block","src":"13355:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"13369:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13382:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4163,"name":"uint64","nodeType":"ElementaryTypeName","src":"13382:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4162,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13377:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13390:3:13","memberName":"max","nodeType":"MemberAccess","src":"13377:16:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13369:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4174,"nodeType":"IfStatement","src":"13365:103:13","trueBody":{"id":4173,"nodeType":"Block","src":"13395:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13447:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"13451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4168,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"13416:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4172,"nodeType":"RevertStatement","src":"13409:48:13"}]}},{"expression":{"arguments":[{"id":4177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"13491:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13484:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4175,"name":"uint64","nodeType":"ElementaryTypeName","src":"13484:6:13","typeDescriptions":{}}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13484:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4160,"id":4179,"nodeType":"Return","src":"13477:20:13"}]},"documentation":{"id":4154,"nodeType":"StructuredDocumentation","src":"13010:276:13","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4181,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13300:8:13","nodeType":"FunctionDefinition","parameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"value","nameLocation":"13317:5:13","nodeType":"VariableDeclaration","scope":4181,"src":"13309:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4155,"name":"uint256","nodeType":"ElementaryTypeName","src":"13309:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13308:15:13"},"returnParameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4181,"src":"13347:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4158,"name":"uint64","nodeType":"ElementaryTypeName","src":"13347:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13346:8:13"},"scope":5237,"src":"13291:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4208,"nodeType":"Block","src":"13855:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"13869:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13882:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4191,"name":"uint56","nodeType":"ElementaryTypeName","src":"13882:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4190,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13877:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13877:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13890:3:13","memberName":"max","nodeType":"MemberAccess","src":"13877:16:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13869:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4202,"nodeType":"IfStatement","src":"13865:103:13","trueBody":{"id":4201,"nodeType":"Block","src":"13895:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13947:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"13951:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4196,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"13916:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13916:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4200,"nodeType":"RevertStatement","src":"13909:48:13"}]}},{"expression":{"arguments":[{"id":4205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"13991:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13984:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4203,"name":"uint56","nodeType":"ElementaryTypeName","src":"13984:6:13","typeDescriptions":{}}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13984:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4188,"id":4207,"nodeType":"Return","src":"13977:20:13"}]},"documentation":{"id":4182,"nodeType":"StructuredDocumentation","src":"13510:276:13","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4209,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13800:8:13","nodeType":"FunctionDefinition","parameters":{"id":4185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4184,"mutability":"mutable","name":"value","nameLocation":"13817:5:13","nodeType":"VariableDeclaration","scope":4209,"src":"13809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4183,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13808:15:13"},"returnParameters":{"id":4188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4209,"src":"13847:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4186,"name":"uint56","nodeType":"ElementaryTypeName","src":"13847:6:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13846:8:13"},"scope":5237,"src":"13791:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4236,"nodeType":"Block","src":"14355:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"14369:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14382:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4219,"name":"uint48","nodeType":"ElementaryTypeName","src":"14382:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4218,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14377:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14377:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14390:3:13","memberName":"max","nodeType":"MemberAccess","src":"14377:16:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14369:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4230,"nodeType":"IfStatement","src":"14365:103:13","trueBody":{"id":4229,"nodeType":"Block","src":"14395:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14447:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"14451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4224,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"14416:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14416:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4228,"nodeType":"RevertStatement","src":"14409:48:13"}]}},{"expression":{"arguments":[{"id":4233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"14491:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14484:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4231,"name":"uint48","nodeType":"ElementaryTypeName","src":"14484:6:13","typeDescriptions":{}}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4216,"id":4235,"nodeType":"Return","src":"14477:20:13"}]},"documentation":{"id":4210,"nodeType":"StructuredDocumentation","src":"14010:276:13","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4237,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14300:8:13","nodeType":"FunctionDefinition","parameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4212,"mutability":"mutable","name":"value","nameLocation":"14317:5:13","nodeType":"VariableDeclaration","scope":4237,"src":"14309:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4211,"name":"uint256","nodeType":"ElementaryTypeName","src":"14309:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14308:15:13"},"returnParameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4237,"src":"14347:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4214,"name":"uint48","nodeType":"ElementaryTypeName","src":"14347:6:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14346:8:13"},"scope":5237,"src":"14291:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4264,"nodeType":"Block","src":"14855:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"14869:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14882:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4247,"name":"uint40","nodeType":"ElementaryTypeName","src":"14882:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4246,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14877:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14877:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14890:3:13","memberName":"max","nodeType":"MemberAccess","src":"14877:16:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14869:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4258,"nodeType":"IfStatement","src":"14865:103:13","trueBody":{"id":4257,"nodeType":"Block","src":"14895:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14947:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"14951:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4252,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"14916:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14916:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4256,"nodeType":"RevertStatement","src":"14909:48:13"}]}},{"expression":{"arguments":[{"id":4261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"14991:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14984:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4259,"name":"uint40","nodeType":"ElementaryTypeName","src":"14984:6:13","typeDescriptions":{}}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14984:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4244,"id":4263,"nodeType":"Return","src":"14977:20:13"}]},"documentation":{"id":4238,"nodeType":"StructuredDocumentation","src":"14510:276:13","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4265,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14800:8:13","nodeType":"FunctionDefinition","parameters":{"id":4241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4240,"mutability":"mutable","name":"value","nameLocation":"14817:5:13","nodeType":"VariableDeclaration","scope":4265,"src":"14809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4239,"name":"uint256","nodeType":"ElementaryTypeName","src":"14809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14808:15:13"},"returnParameters":{"id":4244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4265,"src":"14847:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4242,"name":"uint40","nodeType":"ElementaryTypeName","src":"14847:6:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14846:8:13"},"scope":5237,"src":"14791:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4292,"nodeType":"Block","src":"15355:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"15369:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15382:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4275,"name":"uint32","nodeType":"ElementaryTypeName","src":"15382:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4274,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15377:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15377:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15390:3:13","memberName":"max","nodeType":"MemberAccess","src":"15377:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15369:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4286,"nodeType":"IfStatement","src":"15365:103:13","trueBody":{"id":4285,"nodeType":"Block","src":"15395:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15447:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"15451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4280,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"15416:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15416:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4284,"nodeType":"RevertStatement","src":"15409:48:13"}]}},{"expression":{"arguments":[{"id":4289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"15491:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15484:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4287,"name":"uint32","nodeType":"ElementaryTypeName","src":"15484:6:13","typeDescriptions":{}}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4272,"id":4291,"nodeType":"Return","src":"15477:20:13"}]},"documentation":{"id":4266,"nodeType":"StructuredDocumentation","src":"15010:276:13","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4293,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15300:8:13","nodeType":"FunctionDefinition","parameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"value","nameLocation":"15317:5:13","nodeType":"VariableDeclaration","scope":4293,"src":"15309:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4267,"name":"uint256","nodeType":"ElementaryTypeName","src":"15309:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15308:15:13"},"returnParameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4293,"src":"15347:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4270,"name":"uint32","nodeType":"ElementaryTypeName","src":"15347:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15346:8:13"},"scope":5237,"src":"15291:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4320,"nodeType":"Block","src":"15855:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"15869:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15882:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4303,"name":"uint24","nodeType":"ElementaryTypeName","src":"15882:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4302,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15877:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15877:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15890:3:13","memberName":"max","nodeType":"MemberAccess","src":"15877:16:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15869:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4314,"nodeType":"IfStatement","src":"15865:103:13","trueBody":{"id":4313,"nodeType":"Block","src":"15895:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15947:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"15951:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4308,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"15916:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15916:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4312,"nodeType":"RevertStatement","src":"15909:48:13"}]}},{"expression":{"arguments":[{"id":4317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"15991:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15984:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4315,"name":"uint24","nodeType":"ElementaryTypeName","src":"15984:6:13","typeDescriptions":{}}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4300,"id":4319,"nodeType":"Return","src":"15977:20:13"}]},"documentation":{"id":4294,"nodeType":"StructuredDocumentation","src":"15510:276:13","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4321,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15800:8:13","nodeType":"FunctionDefinition","parameters":{"id":4297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"value","nameLocation":"15817:5:13","nodeType":"VariableDeclaration","scope":4321,"src":"15809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4295,"name":"uint256","nodeType":"ElementaryTypeName","src":"15809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15808:15:13"},"returnParameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4321,"src":"15847:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4298,"name":"uint24","nodeType":"ElementaryTypeName","src":"15847:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15846:8:13"},"scope":5237,"src":"15791:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4348,"nodeType":"Block","src":"16355:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"16369:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16382:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4331,"name":"uint16","nodeType":"ElementaryTypeName","src":"16382:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4330,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16377:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16377:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16390:3:13","memberName":"max","nodeType":"MemberAccess","src":"16377:16:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16369:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4342,"nodeType":"IfStatement","src":"16365:103:13","trueBody":{"id":4341,"nodeType":"Block","src":"16395:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16447:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"16451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4336,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"16416:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16416:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4340,"nodeType":"RevertStatement","src":"16409:48:13"}]}},{"expression":{"arguments":[{"id":4345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"16491:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16484:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4343,"name":"uint16","nodeType":"ElementaryTypeName","src":"16484:6:13","typeDescriptions":{}}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16484:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4328,"id":4347,"nodeType":"Return","src":"16477:20:13"}]},"documentation":{"id":4322,"nodeType":"StructuredDocumentation","src":"16010:276:13","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4349,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16300:8:13","nodeType":"FunctionDefinition","parameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"value","nameLocation":"16317:5:13","nodeType":"VariableDeclaration","scope":4349,"src":"16309:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4323,"name":"uint256","nodeType":"ElementaryTypeName","src":"16309:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16308:15:13"},"returnParameters":{"id":4328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4349,"src":"16347:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4326,"name":"uint16","nodeType":"ElementaryTypeName","src":"16347:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16346:8:13"},"scope":5237,"src":"16291:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4376,"nodeType":"Block","src":"16849:146:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"16863:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16876:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4359,"name":"uint8","nodeType":"ElementaryTypeName","src":"16876:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4358,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16871:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16871:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16883:3:13","memberName":"max","nodeType":"MemberAccess","src":"16871:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16863:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4370,"nodeType":"IfStatement","src":"16859:101:13","trueBody":{"id":4369,"nodeType":"Block","src":"16888:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16940:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"16943:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4364,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"16909:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16909:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4368,"nodeType":"RevertStatement","src":"16902:47:13"}]}},{"expression":{"arguments":[{"id":4373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"16982:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16976:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4371,"name":"uint8","nodeType":"ElementaryTypeName","src":"16976:5:13","typeDescriptions":{}}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16976:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4356,"id":4375,"nodeType":"Return","src":"16969:19:13"}]},"documentation":{"id":4350,"nodeType":"StructuredDocumentation","src":"16510:272:13","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4377,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16796:7:13","nodeType":"FunctionDefinition","parameters":{"id":4353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4352,"mutability":"mutable","name":"value","nameLocation":"16812:5:13","nodeType":"VariableDeclaration","scope":4377,"src":"16804:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4351,"name":"uint256","nodeType":"ElementaryTypeName","src":"16804:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16803:15:13"},"returnParameters":{"id":4356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4377,"src":"16842:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4354,"name":"uint8","nodeType":"ElementaryTypeName","src":"16842:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16841:7:13"},"scope":5237,"src":"16787:208:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4399,"nodeType":"Block","src":"17231:128:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"17245:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17253:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17245:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4393,"nodeType":"IfStatement","src":"17241:81:13","trueBody":{"id":4392,"nodeType":"Block","src":"17256:66:13","statements":[{"errorCall":{"arguments":[{"id":4389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"17305:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4388,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"17277:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17277:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4391,"nodeType":"RevertStatement","src":"17270:41:13"}]}},{"expression":{"arguments":[{"id":4396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"17346:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17338:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4394,"name":"uint256","nodeType":"ElementaryTypeName","src":"17338:7:13","typeDescriptions":{}}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17338:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4384,"id":4398,"nodeType":"Return","src":"17331:21:13"}]},"documentation":{"id":4378,"nodeType":"StructuredDocumentation","src":"17001:160:13","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":4400,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17175:9:13","nodeType":"FunctionDefinition","parameters":{"id":4381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4380,"mutability":"mutable","name":"value","nameLocation":"17192:5:13","nodeType":"VariableDeclaration","scope":4400,"src":"17185:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4379,"name":"int256","nodeType":"ElementaryTypeName","src":"17185:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17184:14:13"},"returnParameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4400,"src":"17222:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"17222:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17221:9:13"},"scope":5237,"src":"17166:193:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4425,"nodeType":"Block","src":"17756:150:13","statements":[{"expression":{"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4408,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"17766:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"17786:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17779:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4409,"name":"int248","nodeType":"ElementaryTypeName","src":"17779:6:13","typeDescriptions":{}}},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17779:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17766:26:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4414,"nodeType":"ExpressionStatement","src":"17766:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"17806:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"17820:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17806:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4424,"nodeType":"IfStatement","src":"17802:98:13","trueBody":{"id":4423,"nodeType":"Block","src":"17827:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17878:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"17883:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4418,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"17848:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17848:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4422,"nodeType":"RevertStatement","src":"17841:48:13"}]}}]},"documentation":{"id":4401,"nodeType":"StructuredDocumentation","src":"17365:312:13","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4426,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17691:8:13","nodeType":"FunctionDefinition","parameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4403,"mutability":"mutable","name":"value","nameLocation":"17707:5:13","nodeType":"VariableDeclaration","scope":4426,"src":"17700:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4402,"name":"int256","nodeType":"ElementaryTypeName","src":"17700:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17699:14:13"},"returnParameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4406,"mutability":"mutable","name":"downcasted","nameLocation":"17744:10:13","nodeType":"VariableDeclaration","scope":4426,"src":"17737:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4405,"name":"int248","nodeType":"ElementaryTypeName","src":"17737:6:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17736:19:13"},"scope":5237,"src":"17682:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4451,"nodeType":"Block","src":"18303:150:13","statements":[{"expression":{"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4434,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"18313:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"18333:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18326:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4435,"name":"int240","nodeType":"ElementaryTypeName","src":"18326:6:13","typeDescriptions":{}}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18326:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18313:26:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4440,"nodeType":"ExpressionStatement","src":"18313:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4441,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"18353:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"18367:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18353:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4450,"nodeType":"IfStatement","src":"18349:98:13","trueBody":{"id":4449,"nodeType":"Block","src":"18374:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18425:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"18430:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4444,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"18395:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4448,"nodeType":"RevertStatement","src":"18388:48:13"}]}}]},"documentation":{"id":4427,"nodeType":"StructuredDocumentation","src":"17912:312:13","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4452,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18238:8:13","nodeType":"FunctionDefinition","parameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"value","nameLocation":"18254:5:13","nodeType":"VariableDeclaration","scope":4452,"src":"18247:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4428,"name":"int256","nodeType":"ElementaryTypeName","src":"18247:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18246:14:13"},"returnParameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4432,"mutability":"mutable","name":"downcasted","nameLocation":"18291:10:13","nodeType":"VariableDeclaration","scope":4452,"src":"18284:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4431,"name":"int240","nodeType":"ElementaryTypeName","src":"18284:6:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18283:19:13"},"scope":5237,"src":"18229:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4477,"nodeType":"Block","src":"18850:150:13","statements":[{"expression":{"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4460,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"18860:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"18880:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18873:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4461,"name":"int232","nodeType":"ElementaryTypeName","src":"18873:6:13","typeDescriptions":{}}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18873:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18860:26:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4466,"nodeType":"ExpressionStatement","src":"18860:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"18900:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"18914:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18900:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4476,"nodeType":"IfStatement","src":"18896:98:13","trueBody":{"id":4475,"nodeType":"Block","src":"18921:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18972:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"18977:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4470,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"18942:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18942:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4474,"nodeType":"RevertStatement","src":"18935:48:13"}]}}]},"documentation":{"id":4453,"nodeType":"StructuredDocumentation","src":"18459:312:13","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4478,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18785:8:13","nodeType":"FunctionDefinition","parameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"value","nameLocation":"18801:5:13","nodeType":"VariableDeclaration","scope":4478,"src":"18794:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4454,"name":"int256","nodeType":"ElementaryTypeName","src":"18794:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18793:14:13"},"returnParameters":{"id":4459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"downcasted","nameLocation":"18838:10:13","nodeType":"VariableDeclaration","scope":4478,"src":"18831:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4457,"name":"int232","nodeType":"ElementaryTypeName","src":"18831:6:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18830:19:13"},"scope":5237,"src":"18776:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4503,"nodeType":"Block","src":"19397:150:13","statements":[{"expression":{"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4486,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"19407:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"19427:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19420:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4487,"name":"int224","nodeType":"ElementaryTypeName","src":"19420:6:13","typeDescriptions":{}}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19420:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19407:26:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4492,"nodeType":"ExpressionStatement","src":"19407:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4493,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"19447:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"19461:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19447:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4502,"nodeType":"IfStatement","src":"19443:98:13","trueBody":{"id":4501,"nodeType":"Block","src":"19468:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19519:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"19524:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4496,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"19489:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19489:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4500,"nodeType":"RevertStatement","src":"19482:48:13"}]}}]},"documentation":{"id":4479,"nodeType":"StructuredDocumentation","src":"19006:312:13","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4504,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19332:8:13","nodeType":"FunctionDefinition","parameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"value","nameLocation":"19348:5:13","nodeType":"VariableDeclaration","scope":4504,"src":"19341:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4480,"name":"int256","nodeType":"ElementaryTypeName","src":"19341:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19340:14:13"},"returnParameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"downcasted","nameLocation":"19385:10:13","nodeType":"VariableDeclaration","scope":4504,"src":"19378:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4483,"name":"int224","nodeType":"ElementaryTypeName","src":"19378:6:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19377:19:13"},"scope":5237,"src":"19323:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4529,"nodeType":"Block","src":"19944:150:13","statements":[{"expression":{"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"19954:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"19974:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19967:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4513,"name":"int216","nodeType":"ElementaryTypeName","src":"19967:6:13","typeDescriptions":{}}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19967:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19954:26:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4518,"nodeType":"ExpressionStatement","src":"19954:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4519,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"19994:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"20008:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19994:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4528,"nodeType":"IfStatement","src":"19990:98:13","trueBody":{"id":4527,"nodeType":"Block","src":"20015:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20066:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"20071:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4522,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"20036:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20036:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4526,"nodeType":"RevertStatement","src":"20029:48:13"}]}}]},"documentation":{"id":4505,"nodeType":"StructuredDocumentation","src":"19553:312:13","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4530,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19879:8:13","nodeType":"FunctionDefinition","parameters":{"id":4508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4507,"mutability":"mutable","name":"value","nameLocation":"19895:5:13","nodeType":"VariableDeclaration","scope":4530,"src":"19888:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4506,"name":"int256","nodeType":"ElementaryTypeName","src":"19888:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19887:14:13"},"returnParameters":{"id":4511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4510,"mutability":"mutable","name":"downcasted","nameLocation":"19932:10:13","nodeType":"VariableDeclaration","scope":4530,"src":"19925:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4509,"name":"int216","nodeType":"ElementaryTypeName","src":"19925:6:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19924:19:13"},"scope":5237,"src":"19870:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4555,"nodeType":"Block","src":"20491:150:13","statements":[{"expression":{"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4538,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"20501:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"20521:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20514:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4539,"name":"int208","nodeType":"ElementaryTypeName","src":"20514:6:13","typeDescriptions":{}}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20514:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20501:26:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4544,"nodeType":"ExpressionStatement","src":"20501:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"20541:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"20555:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20541:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4554,"nodeType":"IfStatement","src":"20537:98:13","trueBody":{"id":4553,"nodeType":"Block","src":"20562:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20613:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"20618:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4548,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"20583:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20583:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4552,"nodeType":"RevertStatement","src":"20576:48:13"}]}}]},"documentation":{"id":4531,"nodeType":"StructuredDocumentation","src":"20100:312:13","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4556,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20426:8:13","nodeType":"FunctionDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"value","nameLocation":"20442:5:13","nodeType":"VariableDeclaration","scope":4556,"src":"20435:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4532,"name":"int256","nodeType":"ElementaryTypeName","src":"20435:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20434:14:13"},"returnParameters":{"id":4537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"downcasted","nameLocation":"20479:10:13","nodeType":"VariableDeclaration","scope":4556,"src":"20472:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4535,"name":"int208","nodeType":"ElementaryTypeName","src":"20472:6:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20471:19:13"},"scope":5237,"src":"20417:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4581,"nodeType":"Block","src":"21038:150:13","statements":[{"expression":{"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4564,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"21048:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"21068:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21061:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4565,"name":"int200","nodeType":"ElementaryTypeName","src":"21061:6:13","typeDescriptions":{}}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21061:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21048:26:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4570,"nodeType":"ExpressionStatement","src":"21048:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4571,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"21088:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"21102:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21088:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4580,"nodeType":"IfStatement","src":"21084:98:13","trueBody":{"id":4579,"nodeType":"Block","src":"21109:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21160:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"21165:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4574,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"21130:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21130:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4578,"nodeType":"RevertStatement","src":"21123:48:13"}]}}]},"documentation":{"id":4557,"nodeType":"StructuredDocumentation","src":"20647:312:13","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4582,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20973:8:13","nodeType":"FunctionDefinition","parameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"value","nameLocation":"20989:5:13","nodeType":"VariableDeclaration","scope":4582,"src":"20982:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4558,"name":"int256","nodeType":"ElementaryTypeName","src":"20982:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20981:14:13"},"returnParameters":{"id":4563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"downcasted","nameLocation":"21026:10:13","nodeType":"VariableDeclaration","scope":4582,"src":"21019:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4561,"name":"int200","nodeType":"ElementaryTypeName","src":"21019:6:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21018:19:13"},"scope":5237,"src":"20964:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4607,"nodeType":"Block","src":"21585:150:13","statements":[{"expression":{"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"21595:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"21615:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21608:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4591,"name":"int192","nodeType":"ElementaryTypeName","src":"21608:6:13","typeDescriptions":{}}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21608:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21595:26:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4596,"nodeType":"ExpressionStatement","src":"21595:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4597,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"21635:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"21649:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21635:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4606,"nodeType":"IfStatement","src":"21631:98:13","trueBody":{"id":4605,"nodeType":"Block","src":"21656:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21707:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"21712:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4600,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"21677:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21677:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4604,"nodeType":"RevertStatement","src":"21670:48:13"}]}}]},"documentation":{"id":4583,"nodeType":"StructuredDocumentation","src":"21194:312:13","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4608,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21520:8:13","nodeType":"FunctionDefinition","parameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"value","nameLocation":"21536:5:13","nodeType":"VariableDeclaration","scope":4608,"src":"21529:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4584,"name":"int256","nodeType":"ElementaryTypeName","src":"21529:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21528:14:13"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"downcasted","nameLocation":"21573:10:13","nodeType":"VariableDeclaration","scope":4608,"src":"21566:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4587,"name":"int192","nodeType":"ElementaryTypeName","src":"21566:6:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21565:19:13"},"scope":5237,"src":"21511:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4633,"nodeType":"Block","src":"22132:150:13","statements":[{"expression":{"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4616,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"22142:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"22162:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22155:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4617,"name":"int184","nodeType":"ElementaryTypeName","src":"22155:6:13","typeDescriptions":{}}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22155:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22142:26:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":4622,"nodeType":"ExpressionStatement","src":"22142:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"22182:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"22196:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22182:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4632,"nodeType":"IfStatement","src":"22178:98:13","trueBody":{"id":4631,"nodeType":"Block","src":"22203:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22254:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"22259:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4626,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"22224:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22224:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4630,"nodeType":"RevertStatement","src":"22217:48:13"}]}}]},"documentation":{"id":4609,"nodeType":"StructuredDocumentation","src":"21741:312:13","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4634,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22067:8:13","nodeType":"FunctionDefinition","parameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"value","nameLocation":"22083:5:13","nodeType":"VariableDeclaration","scope":4634,"src":"22076:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4610,"name":"int256","nodeType":"ElementaryTypeName","src":"22076:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22075:14:13"},"returnParameters":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"downcasted","nameLocation":"22120:10:13","nodeType":"VariableDeclaration","scope":4634,"src":"22113:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4613,"name":"int184","nodeType":"ElementaryTypeName","src":"22113:6:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22112:19:13"},"scope":5237,"src":"22058:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4659,"nodeType":"Block","src":"22679:150:13","statements":[{"expression":{"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4642,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"22689:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"22709:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22702:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4643,"name":"int176","nodeType":"ElementaryTypeName","src":"22702:6:13","typeDescriptions":{}}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22702:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22689:26:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":4648,"nodeType":"ExpressionStatement","src":"22689:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4649,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"22729:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"22743:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22729:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4658,"nodeType":"IfStatement","src":"22725:98:13","trueBody":{"id":4657,"nodeType":"Block","src":"22750:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22801:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"22806:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4652,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"22771:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22771:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4656,"nodeType":"RevertStatement","src":"22764:48:13"}]}}]},"documentation":{"id":4635,"nodeType":"StructuredDocumentation","src":"22288:312:13","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4660,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22614:8:13","nodeType":"FunctionDefinition","parameters":{"id":4638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4637,"mutability":"mutable","name":"value","nameLocation":"22630:5:13","nodeType":"VariableDeclaration","scope":4660,"src":"22623:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4636,"name":"int256","nodeType":"ElementaryTypeName","src":"22623:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22622:14:13"},"returnParameters":{"id":4641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"mutability":"mutable","name":"downcasted","nameLocation":"22667:10:13","nodeType":"VariableDeclaration","scope":4660,"src":"22660:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4639,"name":"int176","nodeType":"ElementaryTypeName","src":"22660:6:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22659:19:13"},"scope":5237,"src":"22605:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4685,"nodeType":"Block","src":"23226:150:13","statements":[{"expression":{"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4668,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"23236:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"23256:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23249:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4669,"name":"int168","nodeType":"ElementaryTypeName","src":"23249:6:13","typeDescriptions":{}}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23249:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23236:26:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":4674,"nodeType":"ExpressionStatement","src":"23236:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4675,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"23276:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"23290:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23276:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4684,"nodeType":"IfStatement","src":"23272:98:13","trueBody":{"id":4683,"nodeType":"Block","src":"23297:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23348:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"23353:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4678,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"23318:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23318:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4682,"nodeType":"RevertStatement","src":"23311:48:13"}]}}]},"documentation":{"id":4661,"nodeType":"StructuredDocumentation","src":"22835:312:13","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4686,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23161:8:13","nodeType":"FunctionDefinition","parameters":{"id":4664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4663,"mutability":"mutable","name":"value","nameLocation":"23177:5:13","nodeType":"VariableDeclaration","scope":4686,"src":"23170:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4662,"name":"int256","nodeType":"ElementaryTypeName","src":"23170:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23169:14:13"},"returnParameters":{"id":4667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4666,"mutability":"mutable","name":"downcasted","nameLocation":"23214:10:13","nodeType":"VariableDeclaration","scope":4686,"src":"23207:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4665,"name":"int168","nodeType":"ElementaryTypeName","src":"23207:6:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23206:19:13"},"scope":5237,"src":"23152:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4711,"nodeType":"Block","src":"23773:150:13","statements":[{"expression":{"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4694,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"23783:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"23803:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23796:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4695,"name":"int160","nodeType":"ElementaryTypeName","src":"23796:6:13","typeDescriptions":{}}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23796:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23783:26:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":4700,"nodeType":"ExpressionStatement","src":"23783:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"23823:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"23837:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23823:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4710,"nodeType":"IfStatement","src":"23819:98:13","trueBody":{"id":4709,"nodeType":"Block","src":"23844:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23895:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"23900:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4704,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"23865:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23865:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4708,"nodeType":"RevertStatement","src":"23858:48:13"}]}}]},"documentation":{"id":4687,"nodeType":"StructuredDocumentation","src":"23382:312:13","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4712,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23708:8:13","nodeType":"FunctionDefinition","parameters":{"id":4690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4689,"mutability":"mutable","name":"value","nameLocation":"23724:5:13","nodeType":"VariableDeclaration","scope":4712,"src":"23717:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4688,"name":"int256","nodeType":"ElementaryTypeName","src":"23717:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23716:14:13"},"returnParameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4692,"mutability":"mutable","name":"downcasted","nameLocation":"23761:10:13","nodeType":"VariableDeclaration","scope":4712,"src":"23754:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4691,"name":"int160","nodeType":"ElementaryTypeName","src":"23754:6:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23753:19:13"},"scope":5237,"src":"23699:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4737,"nodeType":"Block","src":"24320:150:13","statements":[{"expression":{"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4720,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"24330:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"24350:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24343:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4721,"name":"int152","nodeType":"ElementaryTypeName","src":"24343:6:13","typeDescriptions":{}}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24343:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24330:26:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":4726,"nodeType":"ExpressionStatement","src":"24330:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4727,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"24370:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"24384:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24370:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4736,"nodeType":"IfStatement","src":"24366:98:13","trueBody":{"id":4735,"nodeType":"Block","src":"24391:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24442:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"24447:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4730,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"24412:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24412:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4734,"nodeType":"RevertStatement","src":"24405:48:13"}]}}]},"documentation":{"id":4713,"nodeType":"StructuredDocumentation","src":"23929:312:13","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4738,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24255:8:13","nodeType":"FunctionDefinition","parameters":{"id":4716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4715,"mutability":"mutable","name":"value","nameLocation":"24271:5:13","nodeType":"VariableDeclaration","scope":4738,"src":"24264:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4714,"name":"int256","nodeType":"ElementaryTypeName","src":"24264:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24263:14:13"},"returnParameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"mutability":"mutable","name":"downcasted","nameLocation":"24308:10:13","nodeType":"VariableDeclaration","scope":4738,"src":"24301:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4717,"name":"int152","nodeType":"ElementaryTypeName","src":"24301:6:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24300:19:13"},"scope":5237,"src":"24246:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4763,"nodeType":"Block","src":"24867:150:13","statements":[{"expression":{"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4746,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"24877:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"24897:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24890:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4747,"name":"int144","nodeType":"ElementaryTypeName","src":"24890:6:13","typeDescriptions":{}}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24890:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24877:26:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":4752,"nodeType":"ExpressionStatement","src":"24877:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"24917:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"24931:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24917:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4762,"nodeType":"IfStatement","src":"24913:98:13","trueBody":{"id":4761,"nodeType":"Block","src":"24938:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24989:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"24994:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4756,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"24959:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24959:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4760,"nodeType":"RevertStatement","src":"24952:48:13"}]}}]},"documentation":{"id":4739,"nodeType":"StructuredDocumentation","src":"24476:312:13","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4764,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24802:8:13","nodeType":"FunctionDefinition","parameters":{"id":4742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4741,"mutability":"mutable","name":"value","nameLocation":"24818:5:13","nodeType":"VariableDeclaration","scope":4764,"src":"24811:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4740,"name":"int256","nodeType":"ElementaryTypeName","src":"24811:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24810:14:13"},"returnParameters":{"id":4745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4744,"mutability":"mutable","name":"downcasted","nameLocation":"24855:10:13","nodeType":"VariableDeclaration","scope":4764,"src":"24848:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4743,"name":"int144","nodeType":"ElementaryTypeName","src":"24848:6:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24847:19:13"},"scope":5237,"src":"24793:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4789,"nodeType":"Block","src":"25414:150:13","statements":[{"expression":{"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4772,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"25424:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"25444:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25437:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4773,"name":"int136","nodeType":"ElementaryTypeName","src":"25437:6:13","typeDescriptions":{}}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25437:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25424:26:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":4778,"nodeType":"ExpressionStatement","src":"25424:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4779,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"25464:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"25478:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25464:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4788,"nodeType":"IfStatement","src":"25460:98:13","trueBody":{"id":4787,"nodeType":"Block","src":"25485:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25536:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"25541:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4782,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"25506:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25506:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4786,"nodeType":"RevertStatement","src":"25499:48:13"}]}}]},"documentation":{"id":4765,"nodeType":"StructuredDocumentation","src":"25023:312:13","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4790,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25349:8:13","nodeType":"FunctionDefinition","parameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"value","nameLocation":"25365:5:13","nodeType":"VariableDeclaration","scope":4790,"src":"25358:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4766,"name":"int256","nodeType":"ElementaryTypeName","src":"25358:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25357:14:13"},"returnParameters":{"id":4771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4770,"mutability":"mutable","name":"downcasted","nameLocation":"25402:10:13","nodeType":"VariableDeclaration","scope":4790,"src":"25395:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4769,"name":"int136","nodeType":"ElementaryTypeName","src":"25395:6:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25394:19:13"},"scope":5237,"src":"25340:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4815,"nodeType":"Block","src":"25961:150:13","statements":[{"expression":{"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4798,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"25971:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"25991:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25984:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4799,"name":"int128","nodeType":"ElementaryTypeName","src":"25984:6:13","typeDescriptions":{}}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25984:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25971:26:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":4804,"nodeType":"ExpressionStatement","src":"25971:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4805,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"26011:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"26025:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26011:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4814,"nodeType":"IfStatement","src":"26007:98:13","trueBody":{"id":4813,"nodeType":"Block","src":"26032:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26083:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"26088:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4808,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"26053:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26053:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4812,"nodeType":"RevertStatement","src":"26046:48:13"}]}}]},"documentation":{"id":4791,"nodeType":"StructuredDocumentation","src":"25570:312:13","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4816,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25896:8:13","nodeType":"FunctionDefinition","parameters":{"id":4794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4793,"mutability":"mutable","name":"value","nameLocation":"25912:5:13","nodeType":"VariableDeclaration","scope":4816,"src":"25905:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4792,"name":"int256","nodeType":"ElementaryTypeName","src":"25905:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25904:14:13"},"returnParameters":{"id":4797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4796,"mutability":"mutable","name":"downcasted","nameLocation":"25949:10:13","nodeType":"VariableDeclaration","scope":4816,"src":"25942:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4795,"name":"int128","nodeType":"ElementaryTypeName","src":"25942:6:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25941:19:13"},"scope":5237,"src":"25887:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4841,"nodeType":"Block","src":"26508:150:13","statements":[{"expression":{"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4824,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"26518:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"26538:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26531:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4825,"name":"int120","nodeType":"ElementaryTypeName","src":"26531:6:13","typeDescriptions":{}}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26531:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26518:26:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":4830,"nodeType":"ExpressionStatement","src":"26518:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4831,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"26558:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"26572:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26558:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4840,"nodeType":"IfStatement","src":"26554:98:13","trueBody":{"id":4839,"nodeType":"Block","src":"26579:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26630:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"26635:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4834,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"26600:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26600:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4838,"nodeType":"RevertStatement","src":"26593:48:13"}]}}]},"documentation":{"id":4817,"nodeType":"StructuredDocumentation","src":"26117:312:13","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4842,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26443:8:13","nodeType":"FunctionDefinition","parameters":{"id":4820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4819,"mutability":"mutable","name":"value","nameLocation":"26459:5:13","nodeType":"VariableDeclaration","scope":4842,"src":"26452:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4818,"name":"int256","nodeType":"ElementaryTypeName","src":"26452:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26451:14:13"},"returnParameters":{"id":4823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"downcasted","nameLocation":"26496:10:13","nodeType":"VariableDeclaration","scope":4842,"src":"26489:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":4821,"name":"int120","nodeType":"ElementaryTypeName","src":"26489:6:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26488:19:13"},"scope":5237,"src":"26434:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4867,"nodeType":"Block","src":"27055:150:13","statements":[{"expression":{"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4850,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"27065:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"27085:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27078:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4851,"name":"int112","nodeType":"ElementaryTypeName","src":"27078:6:13","typeDescriptions":{}}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27078:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27065:26:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":4856,"nodeType":"ExpressionStatement","src":"27065:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4857,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"27105:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"27119:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27105:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4866,"nodeType":"IfStatement","src":"27101:98:13","trueBody":{"id":4865,"nodeType":"Block","src":"27126:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27177:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"27182:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4860,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"27147:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27147:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4864,"nodeType":"RevertStatement","src":"27140:48:13"}]}}]},"documentation":{"id":4843,"nodeType":"StructuredDocumentation","src":"26664:312:13","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4868,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26990:8:13","nodeType":"FunctionDefinition","parameters":{"id":4846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4845,"mutability":"mutable","name":"value","nameLocation":"27006:5:13","nodeType":"VariableDeclaration","scope":4868,"src":"26999:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4844,"name":"int256","nodeType":"ElementaryTypeName","src":"26999:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26998:14:13"},"returnParameters":{"id":4849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4848,"mutability":"mutable","name":"downcasted","nameLocation":"27043:10:13","nodeType":"VariableDeclaration","scope":4868,"src":"27036:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":4847,"name":"int112","nodeType":"ElementaryTypeName","src":"27036:6:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27035:19:13"},"scope":5237,"src":"26981:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4893,"nodeType":"Block","src":"27602:150:13","statements":[{"expression":{"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4876,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"27612:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"27632:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27625:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4877,"name":"int104","nodeType":"ElementaryTypeName","src":"27625:6:13","typeDescriptions":{}}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27625:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27612:26:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":4882,"nodeType":"ExpressionStatement","src":"27612:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4883,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"27652:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"27666:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27652:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4892,"nodeType":"IfStatement","src":"27648:98:13","trueBody":{"id":4891,"nodeType":"Block","src":"27673:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27724:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"27729:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4886,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"27694:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27694:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4890,"nodeType":"RevertStatement","src":"27687:48:13"}]}}]},"documentation":{"id":4869,"nodeType":"StructuredDocumentation","src":"27211:312:13","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4894,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27537:8:13","nodeType":"FunctionDefinition","parameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"value","nameLocation":"27553:5:13","nodeType":"VariableDeclaration","scope":4894,"src":"27546:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4870,"name":"int256","nodeType":"ElementaryTypeName","src":"27546:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27545:14:13"},"returnParameters":{"id":4875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4874,"mutability":"mutable","name":"downcasted","nameLocation":"27590:10:13","nodeType":"VariableDeclaration","scope":4894,"src":"27583:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":4873,"name":"int104","nodeType":"ElementaryTypeName","src":"27583:6:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27582:19:13"},"scope":5237,"src":"27528:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4919,"nodeType":"Block","src":"28142:148:13","statements":[{"expression":{"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4902,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"28152:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"28171:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28165:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4903,"name":"int96","nodeType":"ElementaryTypeName","src":"28165:5:13","typeDescriptions":{}}},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28165:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28152:25:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":4908,"nodeType":"ExpressionStatement","src":"28152:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4909,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"28191:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"28205:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28191:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4918,"nodeType":"IfStatement","src":"28187:97:13","trueBody":{"id":4917,"nodeType":"Block","src":"28212:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28263:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"28267:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4912,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"28233:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28233:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4916,"nodeType":"RevertStatement","src":"28226:47:13"}]}}]},"documentation":{"id":4895,"nodeType":"StructuredDocumentation","src":"27758:307:13","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4920,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28079:7:13","nodeType":"FunctionDefinition","parameters":{"id":4898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4897,"mutability":"mutable","name":"value","nameLocation":"28094:5:13","nodeType":"VariableDeclaration","scope":4920,"src":"28087:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4896,"name":"int256","nodeType":"ElementaryTypeName","src":"28087:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28086:14:13"},"returnParameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"downcasted","nameLocation":"28130:10:13","nodeType":"VariableDeclaration","scope":4920,"src":"28124:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4899,"name":"int96","nodeType":"ElementaryTypeName","src":"28124:5:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28123:18:13"},"scope":5237,"src":"28070:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4945,"nodeType":"Block","src":"28680:148:13","statements":[{"expression":{"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4928,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"28690:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"28709:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28703:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4929,"name":"int88","nodeType":"ElementaryTypeName","src":"28703:5:13","typeDescriptions":{}}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28703:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28690:25:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4934,"nodeType":"ExpressionStatement","src":"28690:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4935,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"28729:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"28743:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28729:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4944,"nodeType":"IfStatement","src":"28725:97:13","trueBody":{"id":4943,"nodeType":"Block","src":"28750:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28801:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"28805:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4938,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"28771:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28771:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4942,"nodeType":"RevertStatement","src":"28764:47:13"}]}}]},"documentation":{"id":4921,"nodeType":"StructuredDocumentation","src":"28296:307:13","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4946,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28617:7:13","nodeType":"FunctionDefinition","parameters":{"id":4924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4923,"mutability":"mutable","name":"value","nameLocation":"28632:5:13","nodeType":"VariableDeclaration","scope":4946,"src":"28625:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4922,"name":"int256","nodeType":"ElementaryTypeName","src":"28625:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28624:14:13"},"returnParameters":{"id":4927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4926,"mutability":"mutable","name":"downcasted","nameLocation":"28668:10:13","nodeType":"VariableDeclaration","scope":4946,"src":"28662:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4925,"name":"int88","nodeType":"ElementaryTypeName","src":"28662:5:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28661:18:13"},"scope":5237,"src":"28608:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4971,"nodeType":"Block","src":"29218:148:13","statements":[{"expression":{"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4954,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"29228:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"29247:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29241:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4955,"name":"int80","nodeType":"ElementaryTypeName","src":"29241:5:13","typeDescriptions":{}}},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29241:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29228:25:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4960,"nodeType":"ExpressionStatement","src":"29228:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4961,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"29267:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"29281:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29267:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4970,"nodeType":"IfStatement","src":"29263:97:13","trueBody":{"id":4969,"nodeType":"Block","src":"29288:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29339:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"29343:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4964,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"29309:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29309:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4968,"nodeType":"RevertStatement","src":"29302:47:13"}]}}]},"documentation":{"id":4947,"nodeType":"StructuredDocumentation","src":"28834:307:13","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4972,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29155:7:13","nodeType":"FunctionDefinition","parameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4949,"mutability":"mutable","name":"value","nameLocation":"29170:5:13","nodeType":"VariableDeclaration","scope":4972,"src":"29163:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4948,"name":"int256","nodeType":"ElementaryTypeName","src":"29163:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29162:14:13"},"returnParameters":{"id":4953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"downcasted","nameLocation":"29206:10:13","nodeType":"VariableDeclaration","scope":4972,"src":"29200:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4951,"name":"int80","nodeType":"ElementaryTypeName","src":"29200:5:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29199:18:13"},"scope":5237,"src":"29146:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4997,"nodeType":"Block","src":"29756:148:13","statements":[{"expression":{"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4980,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"29766:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"29785:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29779:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4981,"name":"int72","nodeType":"ElementaryTypeName","src":"29779:5:13","typeDescriptions":{}}},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29779:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29766:25:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4986,"nodeType":"ExpressionStatement","src":"29766:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4987,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"29805:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"29819:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29805:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4996,"nodeType":"IfStatement","src":"29801:97:13","trueBody":{"id":4995,"nodeType":"Block","src":"29826:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29877:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"29881:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4990,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"29847:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29847:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4994,"nodeType":"RevertStatement","src":"29840:47:13"}]}}]},"documentation":{"id":4973,"nodeType":"StructuredDocumentation","src":"29372:307:13","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4998,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29693:7:13","nodeType":"FunctionDefinition","parameters":{"id":4976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4975,"mutability":"mutable","name":"value","nameLocation":"29708:5:13","nodeType":"VariableDeclaration","scope":4998,"src":"29701:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4974,"name":"int256","nodeType":"ElementaryTypeName","src":"29701:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29700:14:13"},"returnParameters":{"id":4979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4978,"mutability":"mutable","name":"downcasted","nameLocation":"29744:10:13","nodeType":"VariableDeclaration","scope":4998,"src":"29738:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4977,"name":"int72","nodeType":"ElementaryTypeName","src":"29738:5:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29737:18:13"},"scope":5237,"src":"29684:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5023,"nodeType":"Block","src":"30294:148:13","statements":[{"expression":{"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5006,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"30304:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"30323:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30317:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5007,"name":"int64","nodeType":"ElementaryTypeName","src":"30317:5:13","typeDescriptions":{}}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30317:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30304:25:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5012,"nodeType":"ExpressionStatement","src":"30304:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5013,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"30343:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"30357:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30343:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5022,"nodeType":"IfStatement","src":"30339:97:13","trueBody":{"id":5021,"nodeType":"Block","src":"30364:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30415:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"30419:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5016,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"30385:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30385:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5020,"nodeType":"RevertStatement","src":"30378:47:13"}]}}]},"documentation":{"id":4999,"nodeType":"StructuredDocumentation","src":"29910:307:13","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5024,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30231:7:13","nodeType":"FunctionDefinition","parameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"value","nameLocation":"30246:5:13","nodeType":"VariableDeclaration","scope":5024,"src":"30239:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5000,"name":"int256","nodeType":"ElementaryTypeName","src":"30239:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30238:14:13"},"returnParameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"downcasted","nameLocation":"30282:10:13","nodeType":"VariableDeclaration","scope":5024,"src":"30276:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5003,"name":"int64","nodeType":"ElementaryTypeName","src":"30276:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30275:18:13"},"scope":5237,"src":"30222:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5049,"nodeType":"Block","src":"30832:148:13","statements":[{"expression":{"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5032,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"30842:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"30861:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30855:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5033,"name":"int56","nodeType":"ElementaryTypeName","src":"30855:5:13","typeDescriptions":{}}},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30855:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30842:25:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5038,"nodeType":"ExpressionStatement","src":"30842:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5039,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"30881:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"30895:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30881:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5048,"nodeType":"IfStatement","src":"30877:97:13","trueBody":{"id":5047,"nodeType":"Block","src":"30902:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30953:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"30957:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5042,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"30923:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30923:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5046,"nodeType":"RevertStatement","src":"30916:47:13"}]}}]},"documentation":{"id":5025,"nodeType":"StructuredDocumentation","src":"30448:307:13","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5050,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30769:7:13","nodeType":"FunctionDefinition","parameters":{"id":5028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5027,"mutability":"mutable","name":"value","nameLocation":"30784:5:13","nodeType":"VariableDeclaration","scope":5050,"src":"30777:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5026,"name":"int256","nodeType":"ElementaryTypeName","src":"30777:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30776:14:13"},"returnParameters":{"id":5031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5030,"mutability":"mutable","name":"downcasted","nameLocation":"30820:10:13","nodeType":"VariableDeclaration","scope":5050,"src":"30814:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5029,"name":"int56","nodeType":"ElementaryTypeName","src":"30814:5:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30813:18:13"},"scope":5237,"src":"30760:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5075,"nodeType":"Block","src":"31370:148:13","statements":[{"expression":{"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5058,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"31380:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"31399:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31393:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5059,"name":"int48","nodeType":"ElementaryTypeName","src":"31393:5:13","typeDescriptions":{}}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31393:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31380:25:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5064,"nodeType":"ExpressionStatement","src":"31380:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5065,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"31419:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"31433:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31419:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5074,"nodeType":"IfStatement","src":"31415:97:13","trueBody":{"id":5073,"nodeType":"Block","src":"31440:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31491:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"31495:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5068,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"31461:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31461:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5072,"nodeType":"RevertStatement","src":"31454:47:13"}]}}]},"documentation":{"id":5051,"nodeType":"StructuredDocumentation","src":"30986:307:13","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5076,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31307:7:13","nodeType":"FunctionDefinition","parameters":{"id":5054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5053,"mutability":"mutable","name":"value","nameLocation":"31322:5:13","nodeType":"VariableDeclaration","scope":5076,"src":"31315:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5052,"name":"int256","nodeType":"ElementaryTypeName","src":"31315:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31314:14:13"},"returnParameters":{"id":5057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5056,"mutability":"mutable","name":"downcasted","nameLocation":"31358:10:13","nodeType":"VariableDeclaration","scope":5076,"src":"31352:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5055,"name":"int48","nodeType":"ElementaryTypeName","src":"31352:5:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31351:18:13"},"scope":5237,"src":"31298:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5101,"nodeType":"Block","src":"31908:148:13","statements":[{"expression":{"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5084,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"31918:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"31937:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31931:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5085,"name":"int40","nodeType":"ElementaryTypeName","src":"31931:5:13","typeDescriptions":{}}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31931:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31918:25:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5090,"nodeType":"ExpressionStatement","src":"31918:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5091,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"31957:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"31971:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31957:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5100,"nodeType":"IfStatement","src":"31953:97:13","trueBody":{"id":5099,"nodeType":"Block","src":"31978:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32029:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"32033:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5094,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"31999:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31999:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5098,"nodeType":"RevertStatement","src":"31992:47:13"}]}}]},"documentation":{"id":5077,"nodeType":"StructuredDocumentation","src":"31524:307:13","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5102,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31845:7:13","nodeType":"FunctionDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5079,"mutability":"mutable","name":"value","nameLocation":"31860:5:13","nodeType":"VariableDeclaration","scope":5102,"src":"31853:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5078,"name":"int256","nodeType":"ElementaryTypeName","src":"31853:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31852:14:13"},"returnParameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"downcasted","nameLocation":"31896:10:13","nodeType":"VariableDeclaration","scope":5102,"src":"31890:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5081,"name":"int40","nodeType":"ElementaryTypeName","src":"31890:5:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31889:18:13"},"scope":5237,"src":"31836:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5127,"nodeType":"Block","src":"32446:148:13","statements":[{"expression":{"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5110,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"32456:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"32475:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32469:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5111,"name":"int32","nodeType":"ElementaryTypeName","src":"32469:5:13","typeDescriptions":{}}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32469:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32456:25:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5116,"nodeType":"ExpressionStatement","src":"32456:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5117,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"32495:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"32509:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32495:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5126,"nodeType":"IfStatement","src":"32491:97:13","trueBody":{"id":5125,"nodeType":"Block","src":"32516:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32567:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"32571:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5120,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"32537:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32537:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5124,"nodeType":"RevertStatement","src":"32530:47:13"}]}}]},"documentation":{"id":5103,"nodeType":"StructuredDocumentation","src":"32062:307:13","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5128,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32383:7:13","nodeType":"FunctionDefinition","parameters":{"id":5106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5105,"mutability":"mutable","name":"value","nameLocation":"32398:5:13","nodeType":"VariableDeclaration","scope":5128,"src":"32391:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5104,"name":"int256","nodeType":"ElementaryTypeName","src":"32391:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32390:14:13"},"returnParameters":{"id":5109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5108,"mutability":"mutable","name":"downcasted","nameLocation":"32434:10:13","nodeType":"VariableDeclaration","scope":5128,"src":"32428:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5107,"name":"int32","nodeType":"ElementaryTypeName","src":"32428:5:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32427:18:13"},"scope":5237,"src":"32374:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5153,"nodeType":"Block","src":"32984:148:13","statements":[{"expression":{"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5136,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"32994:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"33013:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33007:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5137,"name":"int24","nodeType":"ElementaryTypeName","src":"33007:5:13","typeDescriptions":{}}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33007:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32994:25:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5142,"nodeType":"ExpressionStatement","src":"32994:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5143,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"33033:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"33047:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33033:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5152,"nodeType":"IfStatement","src":"33029:97:13","trueBody":{"id":5151,"nodeType":"Block","src":"33054:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33105:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"33109:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5146,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"33075:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33075:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5150,"nodeType":"RevertStatement","src":"33068:47:13"}]}}]},"documentation":{"id":5129,"nodeType":"StructuredDocumentation","src":"32600:307:13","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5154,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32921:7:13","nodeType":"FunctionDefinition","parameters":{"id":5132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5131,"mutability":"mutable","name":"value","nameLocation":"32936:5:13","nodeType":"VariableDeclaration","scope":5154,"src":"32929:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5130,"name":"int256","nodeType":"ElementaryTypeName","src":"32929:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32928:14:13"},"returnParameters":{"id":5135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5134,"mutability":"mutable","name":"downcasted","nameLocation":"32972:10:13","nodeType":"VariableDeclaration","scope":5154,"src":"32966:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5133,"name":"int24","nodeType":"ElementaryTypeName","src":"32966:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32965:18:13"},"scope":5237,"src":"32912:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5179,"nodeType":"Block","src":"33522:148:13","statements":[{"expression":{"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5162,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"33532:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"33551:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33545:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5163,"name":"int16","nodeType":"ElementaryTypeName","src":"33545:5:13","typeDescriptions":{}}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33545:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33532:25:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5168,"nodeType":"ExpressionStatement","src":"33532:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5169,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"33571:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"33585:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33571:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5178,"nodeType":"IfStatement","src":"33567:97:13","trueBody":{"id":5177,"nodeType":"Block","src":"33592:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33643:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"33647:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5172,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"33613:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33613:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5176,"nodeType":"RevertStatement","src":"33606:47:13"}]}}]},"documentation":{"id":5155,"nodeType":"StructuredDocumentation","src":"33138:307:13","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5180,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33459:7:13","nodeType":"FunctionDefinition","parameters":{"id":5158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5157,"mutability":"mutable","name":"value","nameLocation":"33474:5:13","nodeType":"VariableDeclaration","scope":5180,"src":"33467:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5156,"name":"int256","nodeType":"ElementaryTypeName","src":"33467:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33466:14:13"},"returnParameters":{"id":5161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5160,"mutability":"mutable","name":"downcasted","nameLocation":"33510:10:13","nodeType":"VariableDeclaration","scope":5180,"src":"33504:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5159,"name":"int16","nodeType":"ElementaryTypeName","src":"33504:5:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33503:18:13"},"scope":5237,"src":"33450:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5205,"nodeType":"Block","src":"34053:146:13","statements":[{"expression":{"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5188,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"34063:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"34081:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34076:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5189,"name":"int8","nodeType":"ElementaryTypeName","src":"34076:4:13","typeDescriptions":{}}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34076:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34063:24:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5194,"nodeType":"ExpressionStatement","src":"34063:24:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5195,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"34101:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"34115:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34101:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5204,"nodeType":"IfStatement","src":"34097:96:13","trueBody":{"id":5203,"nodeType":"Block","src":"34122:71:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34173:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"34176:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5198,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"34143:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34143:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5202,"nodeType":"RevertStatement","src":"34136:46:13"}]}}]},"documentation":{"id":5181,"nodeType":"StructuredDocumentation","src":"33676:302:13","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5206,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33992:6:13","nodeType":"FunctionDefinition","parameters":{"id":5184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5183,"mutability":"mutable","name":"value","nameLocation":"34006:5:13","nodeType":"VariableDeclaration","scope":5206,"src":"33999:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5182,"name":"int256","nodeType":"ElementaryTypeName","src":"33999:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33998:14:13"},"returnParameters":{"id":5187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5186,"mutability":"mutable","name":"downcasted","nameLocation":"34041:10:13","nodeType":"VariableDeclaration","scope":5206,"src":"34036:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5185,"name":"int8","nodeType":"ElementaryTypeName","src":"34036:4:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34035:17:13"},"scope":5237,"src":"33983:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5235,"nodeType":"Block","src":"34439:250:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"34552:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34573:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5218,"name":"int256","nodeType":"ElementaryTypeName","src":"34573:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5217,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34568:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34568:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34581:3:13","memberName":"max","nodeType":"MemberAccess","src":"34568:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34560:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5215,"name":"uint256","nodeType":"ElementaryTypeName","src":"34560:7:13","typeDescriptions":{}}},"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34560:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34552:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5229,"nodeType":"IfStatement","src":"34548:105:13","trueBody":{"id":5228,"nodeType":"Block","src":"34587:66:13","statements":[{"errorCall":{"arguments":[{"id":5225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"34636:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5224,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"34608:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34608:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5227,"nodeType":"RevertStatement","src":"34601:41:13"}]}},{"expression":{"arguments":[{"id":5232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"34676:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34669:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5230,"name":"int256","nodeType":"ElementaryTypeName","src":"34669:6:13","typeDescriptions":{}}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34669:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5213,"id":5234,"nodeType":"Return","src":"34662:20:13"}]},"documentation":{"id":5207,"nodeType":"StructuredDocumentation","src":"34205:165:13","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5236,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34384:8:13","nodeType":"FunctionDefinition","parameters":{"id":5210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5209,"mutability":"mutable","name":"value","nameLocation":"34401:5:13","nodeType":"VariableDeclaration","scope":5236,"src":"34393:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5208,"name":"uint256","nodeType":"ElementaryTypeName","src":"34393:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34392:15:13"},"returnParameters":{"id":5213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5236,"src":"34431:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5211,"name":"int256","nodeType":"ElementaryTypeName","src":"34431:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34430:8:13"},"scope":5237,"src":"34375:314:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5238,"src":"764:33927:13","usedErrors":[3492,3497,3504,3509],"usedEvents":[]}],"src":"192:34500:13"},"id":13},"contracts/CustomerContract.sol":{"ast":{"absolutePath":"contracts/CustomerContract.sol","exportedSymbols":{"CustomerContract":[5328],"IInvokeOracle":[5252]},"id":5329,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5239,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"31:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IInvokeOracle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5252,"linearizedBaseContracts":[5252],"name":"IInvokeOracle","nameLocation":"66:13:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"9dd4cc5d","id":5246,"implemented":false,"kind":"function","modifiers":[],"name":"requestData","nameLocation":"95:11:14","nodeType":"FunctionDefinition","parameters":{"id":5242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5241,"mutability":"mutable","name":"_caller","nameLocation":"115:7:14","nodeType":"VariableDeclaration","scope":5246,"src":"107:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5240,"name":"address","nodeType":"ElementaryTypeName","src":"107:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106:17:14"},"returnParameters":{"id":5245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"requestId","nameLocation":"150:9:14","nodeType":"VariableDeclaration","scope":5246,"src":"142:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"142:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"141:19:14"},"scope":5252,"src":"86:75:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8e0e0abb","id":5251,"implemented":false,"kind":"function","modifiers":[],"name":"showPrice","nameLocation":"176:9:14","nodeType":"FunctionDefinition","parameters":{"id":5247,"nodeType":"ParameterList","parameters":[],"src":"185:2:14"},"returnParameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5251,"src":"211:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5248,"name":"uint256","nodeType":"ElementaryTypeName","src":"211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"210:9:14"},"scope":5252,"src":"167:53:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5329,"src":"56:166:14","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"CustomerContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5328,"linearizedBaseContracts":[5328],"name":"CustomerContract","nameLocation":"233:16:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":5255,"mutability":"mutable","name":"CONTRACTADDR","nameLocation":"264:12:14","nodeType":"VariableDeclaration","scope":5328,"src":"256:65:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5253,"name":"address","nodeType":"ElementaryTypeName","src":"256:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834433530613639384638313438623235363065416462353061383339376236313444636646364130","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"279:42:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4C50a698F8148b2560eAdb50a8397b614DcfF6A0"},"visibility":"internal"},{"constant":false,"functionSelector":"006d6cae","id":5257,"mutability":"mutable","name":"requestId","nameLocation":"342:9:14","nodeType":"VariableDeclaration","scope":5328,"src":"327:24:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"327:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"7cd49fde","id":5259,"mutability":"mutable","name":"_counter","nameLocation":"373:8:14","nodeType":"VariableDeclaration","scope":5328,"src":"358:23:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5258,"name":"uint256","nodeType":"ElementaryTypeName","src":"358:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"CustomerContract.Temp","id":5264,"members":[{"constant":false,"id":5261,"mutability":"mutable","name":"id","nameLocation":"417:2:14","nodeType":"VariableDeclaration","scope":5264,"src":"409:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5260,"name":"uint256","nodeType":"ElementaryTypeName","src":"409:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5263,"mutability":"mutable","name":"bookName","nameLocation":"436:8:14","nodeType":"VariableDeclaration","scope":5264,"src":"429:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5262,"name":"string","nodeType":"ElementaryTypeName","src":"429:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Temp","nameLocation":"395:4:14","nodeType":"StructDefinition","scope":5328,"src":"388:63:14","visibility":"public"},{"constant":false,"functionSelector":"68744046","id":5269,"mutability":"mutable","name":"books","nameLocation":"489:5:14","nodeType":"VariableDeclaration","scope":5328,"src":"457:37:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Temp_$5264_storage_$","typeString":"mapping(uint256 => struct CustomerContract.Temp)"},"typeName":{"id":5268,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5265,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"457:24:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Temp_$5264_storage_$","typeString":"mapping(uint256 => struct CustomerContract.Temp)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5267,"nodeType":"UserDefinedTypeName","pathNode":{"id":5266,"name":"Temp","nameLocations":["476:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5264,"src":"476:4:14"},"referencedDeclaration":5264,"src":"476:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Temp_$5264_storage_ptr","typeString":"struct CustomerContract.Temp"}}},"visibility":"public"},{"body":{"id":5276,"nodeType":"Block","src":"514:28:14","statements":[{"expression":{"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5272,"name":"_counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"524:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":5273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"534:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"524:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5275,"nodeType":"ExpressionStatement","src":"524:11:14"}]},"id":5277,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5270,"nodeType":"ParameterList","parameters":[],"src":"512:2:14"},"returnParameters":{"id":5271,"nodeType":"ParameterList","parameters":[],"src":"514:0:14"},"scope":5328,"src":"501:41:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5295,"nodeType":"Block","src":"598:115:14","statements":[{"expression":{"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5282,"name":"books","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5269,"src":"608:5:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Temp_$5264_storage_$","typeString":"mapping(uint256 => struct CustomerContract.Temp storage ref)"}},"id":5284,"indexExpression":{"id":5283,"name":"_counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"614:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"608:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Temp_$5264_storage","typeString":"struct CustomerContract.Temp storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5286,"name":"_counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"644:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5287,"name":"_bookName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"666:9:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5285,"name":"Temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"626:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Temp_$5264_storage_ptr_$","typeString":"type(struct CustomerContract.Temp storage pointer)"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"626:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Temp_$5264_memory_ptr","typeString":"struct CustomerContract.Temp memory"}},"src":"608:77:14","typeDescriptions":{"typeIdentifier":"t_struct$_Temp_$5264_storage","typeString":"struct CustomerContract.Temp storage ref"}},"id":5290,"nodeType":"ExpressionStatement","src":"608:77:14"},{"expression":{"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5291,"name":"_counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"695:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"705:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"695:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5294,"nodeType":"ExpressionStatement","src":"695:11:14"}]},"functionSelector":"3c9d54de","id":5296,"implemented":true,"kind":"function","modifiers":[],"name":"addBooks","nameLocation":"557:8:14","nodeType":"FunctionDefinition","parameters":{"id":5280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5279,"mutability":"mutable","name":"_bookName","nameLocation":"580:9:14","nodeType":"VariableDeclaration","scope":5296,"src":"566:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5278,"name":"string","nodeType":"ElementaryTypeName","src":"566:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"565:25:14"},"returnParameters":{"id":5281,"nodeType":"ParameterList","parameters":[],"src":"598:0:14"},"scope":5328,"src":"548:165:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5314,"nodeType":"Block","src":"943:141:14","statements":[{"expression":{"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5301,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"954:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5302,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"953:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5307,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1030:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1034:6:14","memberName":"sender","nodeType":"MemberAccess","src":"1030:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5304,"name":"CONTRACTADDR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"981:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5303,"name":"IInvokeOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"967:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IInvokeOracle_$5252_$","typeString":"type(contract IInvokeOracle)"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"967:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IInvokeOracle_$5252","typeString":"contract IInvokeOracle"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"995:11:14","memberName":"requestData","nodeType":"MemberAccess","referencedDeclaration":5246,"src":"967:39:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_bytes32_$","typeString":"function (address) external returns (bytes32)"}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["1021:7:14"],"names":["_caller"],"nodeType":"FunctionCall","src":"967:84:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"953:98:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5311,"nodeType":"ExpressionStatement","src":"953:98:14"},{"expression":{"id":5312,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"1068:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5300,"id":5313,"nodeType":"Return","src":"1061:16:14"}]},"functionSelector":"330227bf","id":5315,"implemented":true,"kind":"function","modifiers":[],"name":"getPriceInfo","nameLocation":"901:12:14","nodeType":"FunctionDefinition","parameters":{"id":5297,"nodeType":"ParameterList","parameters":[],"src":"913:2:14"},"returnParameters":{"id":5300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5315,"src":"934:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"934:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"933:9:14"},"scope":5328,"src":"892:192:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5326,"nodeType":"Block","src":"1316:63:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5321,"name":"CONTRACTADDR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"1347:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5320,"name":"IInvokeOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"1333:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IInvokeOracle_$5252_$","typeString":"type(contract IInvokeOracle)"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1333:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IInvokeOracle_$5252","typeString":"contract IInvokeOracle"}},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1361:9:14","memberName":"showPrice","nodeType":"MemberAccess","referencedDeclaration":5251,"src":"1333:37:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1333:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5319,"id":5325,"nodeType":"Return","src":"1326:46:14"}]},"functionSelector":"cc80f6f3","id":5327,"implemented":true,"kind":"function","modifiers":[],"name":"show","nameLocation":"1277:4:14","nodeType":"FunctionDefinition","parameters":{"id":5316,"nodeType":"ParameterList","parameters":[],"src":"1281:2:14"},"returnParameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5327,"src":"1307:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1306:9:14"},"scope":5328,"src":"1268:111:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5329,"src":"224:1157:14","usedErrors":[],"usedEvents":[]}],"src":"31:1351:14"},"id":14},"contracts/UDex.sol":{"ast":{"absolutePath":"contracts/UDex.sol","exportedSymbols":{"ERC20":[969],"ERC4626":[1732],"IERC20":[1047],"LibError":[6086],"Ownable":[147],"ReentrancyGuard":[2428],"SafeCast":[5237],"SafeERC20":[2084],"UDex":[6026]},"id":6027,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5330,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":5332,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":2085,"src":"205:82:15","symbolAliases":[{"foreign":{"id":5331,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"213:9:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5334,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":970,"src":"288:68:15","symbolAliases":[{"foreign":{"id":5333,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"296:5:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5336,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":1048,"src":"357:70:15","symbolAliases":[{"foreign":{"id":5335,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"365:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"@openzeppelin/contracts/utils/math/SafeCast.sol","id":5338,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":5238,"src":"428:73:15","symbolAliases":[{"foreign":{"id":5337,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"436:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol","id":5340,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":1733,"src":"502:83:15","symbolAliases":[{"foreign":{"id":5339,"name":"ERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"510:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5342,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":148,"src":"586:67:15","symbolAliases":[{"foreign":{"id":5341,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"594:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":5344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":2429,"src":"654:82:15","symbolAliases":[{"foreign":{"id":5343,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"662:15:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/lib/LibError.sol","file":"./lib/LibError.sol","id":5346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6027,"sourceUnit":6087,"src":"737:44:15","symbolAliases":[{"foreign":{"id":5345,"name":"LibError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"745:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5347,"name":"ERC4626","nameLocations":["800:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":1732,"src":"800:7:15"},"id":5348,"nodeType":"InheritanceSpecifier","src":"800:7:15"},{"baseName":{"id":5349,"name":"Ownable","nameLocations":["809:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"809:7:15"},"id":5350,"nodeType":"InheritanceSpecifier","src":"809:7:15"},{"baseName":{"id":5351,"name":"ReentrancyGuard","nameLocations":["818:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":2428,"src":"818:15:15"},"id":5352,"nodeType":"InheritanceSpecifier","src":"818:15:15"}],"canonicalName":"UDex","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6026,"linearizedBaseContracts":[6026,2428,147,1732,317,969,359,1758,1047,2359],"name":"UDex","nameLocation":"792:4:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5356,"libraryName":{"id":5353,"name":"SafeERC20","nameLocations":["1069:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2084,"src":"1069:9:15"},"nodeType":"UsingForDirective","src":"1063:27:15","typeName":{"id":5355,"nodeType":"UserDefinedTypeName","pathNode":{"id":5354,"name":"IERC20","nameLocations":["1083:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"1083:6:15"},"referencedDeclaration":1047,"src":"1083:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}}},{"global":false,"id":5359,"libraryName":{"id":5357,"name":"SafeCast","nameLocations":["1101:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":5237,"src":"1101:8:15"},"nodeType":"UsingForDirective","src":"1095:26:15","typeName":{"id":5358,"name":"int256","nodeType":"ElementaryTypeName","src":"1114:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},{"global":false,"id":5362,"libraryName":{"id":5360,"name":"SafeCast","nameLocations":["1132:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":5237,"src":"1132:8:15"},"nodeType":"UsingForDirective","src":"1126:27:15","typeName":{"id":5361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1145:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"798cd94c","id":5365,"mutability":"immutable","name":"i_xdc","nameLocation":"1439:5:15","nodeType":"VariableDeclaration","scope":6026,"src":"1415:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},"typeName":{"id":5364,"nodeType":"UserDefinedTypeName","pathNode":{"id":5363,"name":"IERC20","nameLocations":["1415:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"1415:6:15"},"referencedDeclaration":1047,"src":"1415:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"id":5368,"mutability":"mutable","name":"totalLongPositions","nameLocation":"1468:18:15","nodeType":"VariableDeclaration","scope":6026,"src":"1451:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary"},"typeName":{"id":5367,"nodeType":"UserDefinedTypeName","pathNode":{"id":5366,"name":"PositionsSummary","nameLocations":["1451:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":5420,"src":"1451:16:15"},"referencedDeclaration":5420,"src":"1451:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage_ptr","typeString":"struct UDex.PositionsSummary"}},"visibility":"internal"},{"constant":false,"id":5371,"mutability":"mutable","name":"totalShortPositions","nameLocation":"1509:19:15","nodeType":"VariableDeclaration","scope":6026,"src":"1492:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary"},"typeName":{"id":5370,"nodeType":"UserDefinedTypeName","pathNode":{"id":5369,"name":"PositionsSummary","nameLocations":["1492:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":5420,"src":"1492:16:15"},"referencedDeclaration":5420,"src":"1492:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage_ptr","typeString":"struct UDex.PositionsSummary"}},"visibility":"internal"},{"constant":false,"id":5376,"mutability":"mutable","name":"positions","nameLocation":"1564:9:15","nodeType":"VariableDeclaration","scope":6026,"src":"1535:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Position_$5415_storage_$","typeString":"mapping(address => struct UDex.Position)"},"typeName":{"id":5375,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5372,"name":"address","nodeType":"ElementaryTypeName","src":"1543:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1535:28:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Position_$5415_storage_$","typeString":"mapping(address => struct UDex.Position)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5374,"nodeType":"UserDefinedTypeName","pathNode":{"id":5373,"name":"Position","nameLocations":["1554:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":5415,"src":"1554:8:15"},"referencedDeclaration":5415,"src":"1554:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_storage_ptr","typeString":"struct UDex.Position"}}},"visibility":"internal"},{"constant":false,"functionSelector":"dd5b2f52","id":5378,"mutability":"mutable","name":"tradersCollateral","nameLocation":"1594:17:15","nodeType":"VariableDeclaration","scope":6026,"src":"1579:32:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1579:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":5380,"mutability":"mutable","name":"positionFeeBasisPoints","nameLocation":"1633:22:15","nodeType":"VariableDeclaration","scope":6026,"src":"1617:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint256","nodeType":"ElementaryTypeName","src":"1617:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"0258d92a","id":5382,"mutability":"mutable","name":"s_totalLiquidityDeposited","nameLocation":"1676:25:15","nodeType":"VariableDeclaration","scope":6026,"src":"1661:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"0e8f4b81343afa64bc4ddcfbf2d80e883e0ddfc6663c400ca09da13d1d28d588","id":5396,"name":"PositionOpened","nameLocation":"1903:14:15","nodeType":"EventDefinition","parameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5384,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1943:4:15","nodeType":"VariableDeclaration","scope":5396,"src":"1927:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5383,"name":"address","nodeType":"ElementaryTypeName","src":"1927:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5386,"indexed":false,"mutability":"mutable","name":"isLong","nameLocation":"1954:6:15","nodeType":"VariableDeclaration","scope":5396,"src":"1949:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5385,"name":"bool","nodeType":"ElementaryTypeName","src":"1949:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5388,"indexed":false,"mutability":"mutable","name":"collateral","nameLocation":"1970:10:15","nodeType":"VariableDeclaration","scope":5396,"src":"1962:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1962:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5390,"indexed":false,"mutability":"mutable","name":"size","nameLocation":"1990:4:15","nodeType":"VariableDeclaration","scope":5396,"src":"1982:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5392,"indexed":false,"mutability":"mutable","name":"xdcAmount","nameLocation":"2004:9:15","nodeType":"VariableDeclaration","scope":5396,"src":"1996:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5391,"name":"uint256","nodeType":"ElementaryTypeName","src":"1996:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5394,"indexed":false,"mutability":"mutable","name":"avgXdcPrice","nameLocation":"2023:11:15","nodeType":"VariableDeclaration","scope":5396,"src":"2015:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2015:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1917:123:15"},"src":"1897:144:15"},{"anonymous":false,"eventSelector":"03d6a8a613b220d398ccb1424a7f81ae5f2801885e02ebd7058de6d94c19198c","id":5404,"name":"PositionDecreased","nameLocation":"2053:17:15","nodeType":"EventDefinition","parameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5398,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2087:4:15","nodeType":"VariableDeclaration","scope":5404,"src":"2071:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5397,"name":"address","nodeType":"ElementaryTypeName","src":"2071:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5400,"indexed":false,"mutability":"mutable","name":"collateralDecreased","nameLocation":"2101:19:15","nodeType":"VariableDeclaration","scope":5404,"src":"2093:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5399,"name":"uint256","nodeType":"ElementaryTypeName","src":"2093:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5402,"indexed":false,"mutability":"mutable","name":"sizeDecreased","nameLocation":"2130:13:15","nodeType":"VariableDeclaration","scope":5404,"src":"2122:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2122:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2070:74:15"},"src":"2047:98:15"},{"canonicalName":"UDex.Position","id":5415,"members":[{"constant":false,"id":5406,"mutability":"mutable","name":"collateral","nameLocation":"2381:10:15","nodeType":"VariableDeclaration","scope":5415,"src":"2373:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5405,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5408,"mutability":"mutable","name":"avgXdcPrice","nameLocation":"2409:11:15","nodeType":"VariableDeclaration","scope":5415,"src":"2401:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"2401:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5410,"mutability":"mutable","name":"xdcAmount","nameLocation":"2438:9:15","nodeType":"VariableDeclaration","scope":5415,"src":"2430:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5412,"mutability":"mutable","name":"isLong","nameLocation":"2462:6:15","nodeType":"VariableDeclaration","scope":5415,"src":"2457:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5411,"name":"bool","nodeType":"ElementaryTypeName","src":"2457:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5414,"mutability":"mutable","name":"lastChangeTimestamp","nameLocation":"2486:19:15","nodeType":"VariableDeclaration","scope":5415,"src":"2478:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2478:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Position","nameLocation":"2354:8:15","nodeType":"StructDefinition","scope":6026,"src":"2347:165:15","visibility":"public"},{"canonicalName":"UDex.PositionsSummary","id":5420,"members":[{"constant":false,"id":5417,"mutability":"mutable","name":"sizeInUsdt","nameLocation":"2560:10:15","nodeType":"VariableDeclaration","scope":5420,"src":"2552:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5416,"name":"uint256","nodeType":"ElementaryTypeName","src":"2552:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5419,"mutability":"mutable","name":"sizeInXdc","nameLocation":"2588:9:15","nodeType":"VariableDeclaration","scope":5420,"src":"2580:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5418,"name":"uint256","nodeType":"ElementaryTypeName","src":"2580:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PositionsSummary","nameLocation":"2525:16:15","nodeType":"StructDefinition","scope":6026,"src":"2518:86:15","visibility":"public"},{"constant":true,"functionSelector":"2bdb4e73","id":5423,"mutability":"constant","name":"MAX_LEVARAGE","nameLocation":"2826:12:15","nodeType":"VariableDeclaration","scope":6026,"src":"2802:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3135","id":5422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2841:2:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"visibility":"public"},{"body":{"id":5448,"nodeType":"Block","src":"2949:95:15","statements":[{"expression":{"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5442,"name":"i_xdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"3017:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5444,"name":"_xdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"3032:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}],"id":5443,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"3025:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1047_$","typeString":"type(contract IERC20)"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3025:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"src":"3017:20:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"id":5447,"nodeType":"ExpressionStatement","src":"3017:20:15"}]},"id":5449,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5431,"name":"_xdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"2902:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}}],"id":5432,"kind":"baseConstructorSpecifier","modifierName":{"id":5430,"name":"ERC4626","nameLocations":["2894:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":1732,"src":"2894:7:15"},"nodeType":"ModifierInvocation","src":"2894:13:15"},{"arguments":[{"hexValue":"55446578","id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2914:6:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf73f354ee7f219e0cba96075ed656d6d7d37c7feaaab0d29732972463e2c899","typeString":"literal_string \"UDex\""},"value":"UDex"},{"hexValue":"554458","id":5435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:5:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_bff84f290cd9efc8118c54d54f4492dc14cf3e7c4a43ed7b5d9b6fd4a27cd282","typeString":"literal_string \"UDX\""},"value":"UDX"}],"id":5436,"kind":"baseConstructorSpecifier","modifierName":{"id":5433,"name":"ERC20","nameLocations":["2908:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":969,"src":"2908:5:15"},"nodeType":"ModifierInvocation","src":"2908:20:15"},{"arguments":[{"expression":{"id":5438,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2937:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2941:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2937:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5440,"kind":"baseConstructorSpecifier","modifierName":{"id":5437,"name":"Ownable","nameLocations":["2929:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2929:7:15"},"nodeType":"ModifierInvocation","src":"2929:19:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5425,"mutability":"mutable","name":"priceFeed","nameLocation":"2870:9:15","nodeType":"VariableDeclaration","scope":5449,"src":"2862:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5424,"name":"address","nodeType":"ElementaryTypeName","src":"2862:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5428,"mutability":"mutable","name":"_xdc","nameLocation":"2888:4:15","nodeType":"VariableDeclaration","scope":5449,"src":"2881:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"},"typeName":{"id":5427,"nodeType":"UserDefinedTypeName","pathNode":{"id":5426,"name":"IERC20","nameLocations":["2881:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1047,"src":"2881:6:15"},"referencedDeclaration":1047,"src":"2881:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"2861:32:15"},"returnParameters":{"id":5441,"nodeType":"ParameterList","parameters":[],"src":"2949:0:15"},"scope":6026,"src":"2850:194:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1244],"body":{"id":5490,"nodeType":"Block","src":"3319:292:15","statements":[{"assignments":[5456],"declarations":[{"constant":false,"id":5456,"mutability":"mutable","name":"tradersPnL","nameLocation":"3336:10:15","nodeType":"VariableDeclaration","scope":5490,"src":"3329:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5455,"name":"int256","nodeType":"ElementaryTypeName","src":"3329:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5459,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5457,"name":"getTradersPnL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"3349:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_int256_$","typeString":"function () view returns (int256)"}},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3349:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"3329:35:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5460,"name":"tradersPnL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"3378:10:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3391:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3378:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5474,"nodeType":"IfStatement","src":"3374:116:15","trueBody":{"id":5473,"nodeType":"Block","src":"3394:96:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5463,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3415:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_UDex_$6026_$","typeString":"type(contract super UDex)"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3421:11:15","memberName":"totalAssets","nodeType":"MemberAccess","referencedDeclaration":1244,"src":"3415:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5466,"name":"tradersPnL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"3437:10:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3448:9:15","memberName":"toUint256","nodeType":"MemberAccess","referencedDeclaration":4400,"src":"3437:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$attached_to$_t_int256_$","typeString":"function (int256) pure returns (uint256)"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3437:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3415:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5470,"name":"tradersCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"3462:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3415:64:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5454,"id":5472,"nodeType":"Return","src":"3408:71:15"}]}},{"expression":{"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5475,"name":"tradersPnL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"3499:10:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"3512:11:15","subExpression":{"id":5476,"name":"tradersPnL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"3513:10:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"3499:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5479,"nodeType":"ExpressionStatement","src":"3499:24:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5480,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3540:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_UDex_$6026_$","typeString":"type(contract super UDex)"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3546:11:15","memberName":"totalAssets","nodeType":"MemberAccess","referencedDeclaration":1244,"src":"3540:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3540:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5483,"name":"tradersPnL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"3562:10:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3573:9:15","memberName":"toUint256","nodeType":"MemberAccess","referencedDeclaration":4400,"src":"3562:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$attached_to$_t_int256_$","typeString":"function (int256) pure returns (uint256)"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3562:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3540:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5487,"name":"tradersCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"3587:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3540:64:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5454,"id":5489,"nodeType":"Return","src":"3533:71:15"}]},"functionSelector":"01e1d114","id":5491,"implemented":true,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"3258:11:15","nodeType":"FunctionDefinition","overrides":{"id":5451,"nodeType":"OverrideSpecifier","overrides":[],"src":"3292:8:15"},"parameters":{"id":5450,"nodeType":"ParameterList","parameters":[],"src":"3269:2:15"},"returnParameters":{"id":5454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5491,"src":"3310:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3310:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3309:9:15"},"scope":6026,"src":"3249:362:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1445],"body":{"id":5521,"nodeType":"Block","src":"3722:184:15","statements":[{"assignments":[5504],"declarations":[{"constant":false,"id":5504,"mutability":"mutable","name":"newTotalLiquidity","nameLocation":"3740:17:15","nodeType":"VariableDeclaration","scope":5521,"src":"3732:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5503,"name":"uint256","nodeType":"ElementaryTypeName","src":"3732:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5508,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5505,"name":"s_totalLiquidityDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"3760:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5506,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"3788:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3760:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3732:62:15"},{"expression":{"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5509,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"3804:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5512,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"3827:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5513,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"3835:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5510,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3813:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_UDex_$6026_$","typeString":"type(contract super UDex)"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3819:7:15","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":1445,"src":"3813:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) returns (uint256)"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3813:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3804:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5516,"nodeType":"ExpressionStatement","src":"3804:40:15"},{"expression":{"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5517,"name":"s_totalLiquidityDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"3854:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5518,"name":"newTotalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"3882:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3854:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5520,"nodeType":"ExpressionStatement","src":"3854:45:15"}]},"functionSelector":"6e553f65","id":5522,"implemented":true,"kind":"function","modifiers":[{"id":5499,"kind":"modifierInvocation","modifierName":{"id":5498,"name":"nonReentrant","nameLocations":["3684:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2392,"src":"3684:12:15"},"nodeType":"ModifierInvocation","src":"3684:12:15"}],"name":"deposit","nameLocation":"3626:7:15","nodeType":"FunctionDefinition","overrides":{"id":5497,"nodeType":"OverrideSpecifier","overrides":[],"src":"3675:8:15"},"parameters":{"id":5496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"assets","nameLocation":"3642:6:15","nodeType":"VariableDeclaration","scope":5522,"src":"3634:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5492,"name":"uint256","nodeType":"ElementaryTypeName","src":"3634:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5495,"mutability":"mutable","name":"receiver","nameLocation":"3658:8:15","nodeType":"VariableDeclaration","scope":5522,"src":"3650:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5494,"name":"address","nodeType":"ElementaryTypeName","src":"3650:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3633:34:15"},"returnParameters":{"id":5502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5501,"mutability":"mutable","name":"shares","nameLocation":"3714:6:15","nodeType":"VariableDeclaration","scope":5522,"src":"3706:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5500,"name":"uint256","nodeType":"ElementaryTypeName","src":"3706:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3705:16:15"},"scope":6026,"src":"3617:289:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1536],"body":{"id":5555,"nodeType":"Block","src":"4069:192:15","statements":[{"assignments":[5537],"declarations":[{"constant":false,"id":5537,"mutability":"mutable","name":"newTotalLiquidity","nameLocation":"4087:17:15","nodeType":"VariableDeclaration","scope":5555,"src":"4079:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5536,"name":"uint256","nodeType":"ElementaryTypeName","src":"4079:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5541,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5538,"name":"s_totalLiquidityDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"4107:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5539,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"4135:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4107:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4079:62:15"},{"expression":{"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5542,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"4151:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5545,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"4175:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5546,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"4183:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5547,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"4193:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5543,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4160:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_UDex_$6026_$","typeString":"type(contract super UDex)"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4166:8:15","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":1536,"src":"4160:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address,address) returns (uint256)"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4160:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4151:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5550,"nodeType":"ExpressionStatement","src":"4151:48:15"},{"expression":{"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5551,"name":"s_totalLiquidityDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"4209:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5552,"name":"newTotalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"4237:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4209:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5554,"nodeType":"ExpressionStatement","src":"4209:45:15"}]},"functionSelector":"b460af94","id":5556,"implemented":true,"kind":"function","modifiers":[{"id":5532,"kind":"modifierInvocation","modifierName":{"id":5531,"name":"nonReentrant","nameLocations":["4019:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2392,"src":"4019:12:15"},"nodeType":"ModifierInvocation","src":"4019:12:15"}],"name":"withdraw","nameLocation":"3921:8:15","nodeType":"FunctionDefinition","overrides":{"id":5530,"nodeType":"OverrideSpecifier","overrides":[],"src":"4002:8:15"},"parameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5524,"mutability":"mutable","name":"assets","nameLocation":"3938:6:15","nodeType":"VariableDeclaration","scope":5556,"src":"3930:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5523,"name":"uint256","nodeType":"ElementaryTypeName","src":"3930:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5526,"mutability":"mutable","name":"receiver","nameLocation":"3954:8:15","nodeType":"VariableDeclaration","scope":5556,"src":"3946:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5525,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5528,"mutability":"mutable","name":"owner","nameLocation":"3972:5:15","nodeType":"VariableDeclaration","scope":5556,"src":"3964:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5527,"name":"address","nodeType":"ElementaryTypeName","src":"3964:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3929:49:15"},"returnParameters":{"id":5535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5534,"mutability":"mutable","name":"shares","nameLocation":"4057:6:15","nodeType":"VariableDeclaration","scope":5556,"src":"4049:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5533,"name":"uint256","nodeType":"ElementaryTypeName","src":"4049:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4048:16:15"},"scope":6026,"src":"3912:349:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1489],"body":{"id":5580,"nodeType":"Block","src":"4369:99:15","statements":[{"expression":{"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5568,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"4379:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5571,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"4399:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5572,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"4407:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5569,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4388:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_UDex_$6026_$","typeString":"type(contract super UDex)"}},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4394:4:15","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":1489,"src":"4388:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) returns (uint256)"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4388:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4379:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5575,"nodeType":"ExpressionStatement","src":"4379:37:15"},{"expression":{"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5576,"name":"s_totalLiquidityDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"4426:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5577,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"4455:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4426:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5579,"nodeType":"ExpressionStatement","src":"4426:35:15"}]},"functionSelector":"94bf804d","id":5581,"implemented":true,"kind":"function","modifiers":[{"id":5564,"kind":"modifierInvocation","modifierName":{"id":5563,"name":"nonReentrant","nameLocations":["4331:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2392,"src":"4331:12:15"},"nodeType":"ModifierInvocation","src":"4331:12:15"}],"name":"mint","nameLocation":"4276:4:15","nodeType":"FunctionDefinition","overrides":{"id":5562,"nodeType":"OverrideSpecifier","overrides":[],"src":"4322:8:15"},"parameters":{"id":5561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"shares","nameLocation":"4289:6:15","nodeType":"VariableDeclaration","scope":5581,"src":"4281:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5557,"name":"uint256","nodeType":"ElementaryTypeName","src":"4281:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5560,"mutability":"mutable","name":"receiver","nameLocation":"4305:8:15","nodeType":"VariableDeclaration","scope":5581,"src":"4297:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5559,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4280:34:15"},"returnParameters":{"id":5567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5566,"mutability":"mutable","name":"assets","nameLocation":"4361:6:15","nodeType":"VariableDeclaration","scope":5581,"src":"4353:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5565,"name":"uint256","nodeType":"ElementaryTypeName","src":"4353:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4352:16:15"},"scope":6026,"src":"4267:201:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1583],"body":{"id":5608,"nodeType":"Block","src":"4629:108:15","statements":[{"expression":{"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5595,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"4639:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5598,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5583,"src":"4661:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5599,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"4669:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5600,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"4679:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5596,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4648:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_UDex_$6026_$","typeString":"type(contract super UDex)"}},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4654:6:15","memberName":"redeem","nodeType":"MemberAccess","referencedDeclaration":1583,"src":"4648:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address,address) returns (uint256)"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4639:46:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5603,"nodeType":"ExpressionStatement","src":"4639:46:15"},{"expression":{"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5604,"name":"s_totalLiquidityDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"4695:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5605,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"4724:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4695:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5607,"nodeType":"ExpressionStatement","src":"4695:35:15"}]},"functionSelector":"ba087652","id":5609,"implemented":true,"kind":"function","modifiers":[{"id":5591,"kind":"modifierInvocation","modifierName":{"id":5590,"name":"nonReentrant","nameLocations":["4579:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2392,"src":"4579:12:15"},"nodeType":"ModifierInvocation","src":"4579:12:15"}],"name":"redeem","nameLocation":"4483:6:15","nodeType":"FunctionDefinition","overrides":{"id":5589,"nodeType":"OverrideSpecifier","overrides":[],"src":"4562:8:15"},"parameters":{"id":5588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5583,"mutability":"mutable","name":"shares","nameLocation":"4498:6:15","nodeType":"VariableDeclaration","scope":5609,"src":"4490:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5582,"name":"uint256","nodeType":"ElementaryTypeName","src":"4490:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5585,"mutability":"mutable","name":"receiver","nameLocation":"4514:8:15","nodeType":"VariableDeclaration","scope":5609,"src":"4506:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5584,"name":"address","nodeType":"ElementaryTypeName","src":"4506:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5587,"mutability":"mutable","name":"owner","nameLocation":"4532:5:15","nodeType":"VariableDeclaration","scope":5609,"src":"4524:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5586,"name":"address","nodeType":"ElementaryTypeName","src":"4524:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:49:15"},"returnParameters":{"id":5594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5593,"mutability":"mutable","name":"assets","nameLocation":"4617:6:15","nodeType":"VariableDeclaration","scope":5609,"src":"4609:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5592,"name":"uint256","nodeType":"ElementaryTypeName","src":"4609:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4608:16:15"},"scope":6026,"src":"4474:263:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5618,"nodeType":"Block","src":"5002:28:15","statements":[{"expression":{"hexValue":"74727565","id":5616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5019:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5615,"id":5617,"nodeType":"Return","src":"5012:11:15"}]},"functionSelector":"cc265da9","id":5619,"implemented":true,"kind":"function","modifiers":[],"name":"tryfunction","nameLocation":"4955:11:15","nodeType":"FunctionDefinition","parameters":{"id":5612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5611,"mutability":"mutable","name":"isTrue","nameLocation":"4972:6:15","nodeType":"VariableDeclaration","scope":5619,"src":"4967:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5610,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:13:15"},"returnParameters":{"id":5615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5619,"src":"4996:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5613,"name":"bool","nodeType":"ElementaryTypeName","src":"4996:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4995:6:15"},"scope":6026,"src":"4946:84:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5727,"nodeType":"Block","src":"5137:1164:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5630,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"5151:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":5631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5165:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5151:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5639,"nodeType":"IfStatement","src":"5147:97:15","trueBody":{"id":5638,"nodeType":"Block","src":"5168:76:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5633,"name":"LibError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"5189:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibError_$6086_$","typeString":"type(library LibError)"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5198:33:15","memberName":"UDex__ErrorInsufficientCollateral","nodeType":"MemberAccess","referencedDeclaration":6075,"src":"5189:42:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5189:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5637,"nodeType":"RevertStatement","src":"5182:51:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5640,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"5257:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5265:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5257:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5649,"nodeType":"IfStatement","src":"5253:73:15","trueBody":{"id":5648,"nodeType":"Block","src":"5268:58:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5643,"name":"LibError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"5289:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibError_$6086_$","typeString":"type(library LibError)"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5298:15:15","memberName":"UDex__ErrorSize","nodeType":"MemberAccess","referencedDeclaration":6077,"src":"5289:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5289:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5647,"nodeType":"RevertStatement","src":"5282:33:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5650,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"5339:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Position_$5415_storage_$","typeString":"mapping(address => struct UDex.Position storage ref)"}},"id":5653,"indexExpression":{"expression":{"id":5651,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5349:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5353:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5349:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5339:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_storage","typeString":"struct UDex.Position storage ref"}},"id":5654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5361:10:15","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":5406,"src":"5339:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5375:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5339:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5663,"nodeType":"IfStatement","src":"5335:112:15","trueBody":{"id":5662,"nodeType":"Block","src":"5378:69:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5657,"name":"LibError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"5399:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibError_$6086_$","typeString":"type(library LibError)"}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5408:26:15","memberName":"UDex__PositionAlreadyExist","nodeType":"MemberAccess","referencedDeclaration":6079,"src":"5399:35:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5399:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5661,"nodeType":"RevertStatement","src":"5392:44:15"}]}},{"assignments":[5666],"declarations":[{"constant":false,"id":5666,"mutability":"mutable","name":"position","nameLocation":"5551:8:15","nodeType":"VariableDeclaration","scope":5727,"src":"5535:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position"},"typeName":{"id":5665,"nodeType":"UserDefinedTypeName","pathNode":{"id":5664,"name":"Position","nameLocations":["5535:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":5415,"src":"5535:8:15"},"referencedDeclaration":5415,"src":"5535:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_storage_ptr","typeString":"struct UDex.Position"}},"visibility":"internal"}],"id":5677,"initialValue":{"arguments":[{"id":5668,"name":"currentXDCPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"5598:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5669,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"5673:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5670,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"5722:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5671,"name":"currentXDCPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"5729:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5722:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5673,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"5776:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5674,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5817:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5823:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"5817:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5667,"name":"Position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"5562:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Position_$5415_storage_ptr_$","typeString":"type(struct UDex.Position storage pointer)"}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5585:11:15","5661:10:15","5711:9:15","5768:6:15","5796:19:15"],"names":["avgXdcPrice","collateral","xdcAmount","isLong","lastChangeTimestamp"],"nodeType":"FunctionCall","src":"5562:281:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"nodeType":"VariableDeclarationStatement","src":"5535:308:15"},{"expression":{"arguments":[{"id":5679,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"5874:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},{"id":5680,"name":"currentXDCPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"5884:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5678,"name":"_checkPositionHealth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"5853:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Position_$5415_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct UDex.Position memory,uint256) pure"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5853:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5682,"nodeType":"ExpressionStatement","src":"5853:47:15"},{"expression":{"arguments":[{"expression":{"id":5686,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5933:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5937:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5933:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5690,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5953:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_UDex_$6026","typeString":"contract UDex"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UDex_$6026","typeString":"contract UDex"}],"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5945:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5688,"name":"address","nodeType":"ElementaryTypeName","src":"5945:7:15","typeDescriptions":{}}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5945:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5692,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"5960:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5683,"name":"i_xdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"5910:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1047","typeString":"contract IERC20"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5916:16:15","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1871,"src":"5910:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1047_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1047_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5910:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5694,"nodeType":"ExpressionStatement","src":"5910:61:15"},{"expression":{"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5695,"name":"tradersCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"6007:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":5696,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"6028:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":5697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6037:10:15","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":5406,"src":"6028:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6007:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5699,"nodeType":"ExpressionStatement","src":"6007:40:15"},{"expression":{"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5700,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"6057:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Position_$5415_storage_$","typeString":"mapping(address => struct UDex.Position storage ref)"}},"id":5703,"indexExpression":{"expression":{"id":5701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6067:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6071:6:15","memberName":"sender","nodeType":"MemberAccess","src":"6067:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6057:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_storage","typeString":"struct UDex.Position storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5704,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"6081:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"src":"6057:32:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_storage","typeString":"struct UDex.Position storage ref"}},"id":5706,"nodeType":"ExpressionStatement","src":"6057:32:15"},{"expression":{"arguments":[{"id":5708,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"6124:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5709,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"6130:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":5710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6139:9:15","memberName":"xdcAmount","nodeType":"MemberAccess","referencedDeclaration":5410,"src":"6130:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5711,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"6150:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5707,"name":"_increasePositionsSumary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"6099:24:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,bool)"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5713,"nodeType":"ExpressionStatement","src":"6099:58:15"},{"eventCall":{"arguments":[{"expression":{"id":5715,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6206:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6210:6:15","memberName":"sender","nodeType":"MemberAccess","src":"6206:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5717,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"6218:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":5718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6227:6:15","memberName":"isLong","nodeType":"MemberAccess","referencedDeclaration":5412,"src":"6218:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5719,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"6235:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5720,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"6241:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5721,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"6253:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":5722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6262:9:15","memberName":"xdcAmount","nodeType":"MemberAccess","referencedDeclaration":5410,"src":"6253:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5723,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"6273:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":5724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6282:11:15","memberName":"avgXdcPrice","nodeType":"MemberAccess","referencedDeclaration":5408,"src":"6273:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5714,"name":"PositionOpened","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"6191:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bool,uint256,uint256,uint256,uint256)"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6191:103:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5726,"nodeType":"EmitStatement","src":"6186:108:15"}]},"functionSelector":"d4d5c230","id":5728,"implemented":true,"kind":"function","modifiers":[],"name":"openPosition","nameLocation":"5045:12:15","nodeType":"FunctionDefinition","parameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5621,"mutability":"mutable","name":"size","nameLocation":"5066:4:15","nodeType":"VariableDeclaration","scope":5728,"src":"5058:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5620,"name":"uint256","nodeType":"ElementaryTypeName","src":"5058:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5623,"mutability":"mutable","name":"collateral","nameLocation":"5080:10:15","nodeType":"VariableDeclaration","scope":5728,"src":"5072:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"5072:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5625,"mutability":"mutable","name":"currentXDCPrice","nameLocation":"5100:15:15","nodeType":"VariableDeclaration","scope":5728,"src":"5092:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5624,"name":"uint256","nodeType":"ElementaryTypeName","src":"5092:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5627,"mutability":"mutable","name":"isLong","nameLocation":"5122:6:15","nodeType":"VariableDeclaration","scope":5728,"src":"5117:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5626,"name":"bool","nodeType":"ElementaryTypeName","src":"5117:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5057:72:15"},"returnParameters":{"id":5629,"nodeType":"ParameterList","parameters":[],"src":"5137:0:15"},"scope":6026,"src":"5036:1265:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5758,"nodeType":"Block","src":"6608:219:15","statements":[{"assignments":[5738],"declarations":[{"constant":false,"id":5738,"mutability":"mutable","name":"requestedPosition","nameLocation":"6634:17:15","nodeType":"VariableDeclaration","scope":5758,"src":"6618:33:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position"},"typeName":{"id":5737,"nodeType":"UserDefinedTypeName","pathNode":{"id":5736,"name":"Position","nameLocations":["6618:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":5415,"src":"6618:8:15"},"referencedDeclaration":5415,"src":"6618:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_storage_ptr","typeString":"struct UDex.Position"}},"visibility":"internal"}],"id":5742,"initialValue":{"baseExpression":{"id":5739,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"6654:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Position_$5415_storage_$","typeString":"mapping(address => struct UDex.Position storage ref)"}},"id":5741,"indexExpression":{"id":5740,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"6664:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6654:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_storage","typeString":"struct UDex.Position storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6618:52:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5743,"name":"requestedPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"6684:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":5744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6702:10:15","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":5406,"src":"6684:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6716:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6684:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5753,"nodeType":"IfStatement","src":"6680:108:15","trueBody":{"id":5752,"nodeType":"Block","src":"6719:69:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5747,"name":"LibError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"6740:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibError_$6086_$","typeString":"type(library LibError)"}},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6749:26:15","memberName":"UDex__PositionDoesNotExist","nodeType":"MemberAccess","referencedDeclaration":6085,"src":"6740:35:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6740:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5751,"nodeType":"RevertStatement","src":"6733:44:15"}]}},{"expression":{"baseExpression":{"id":5754,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"6804:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Position_$5415_storage_$","typeString":"mapping(address => struct UDex.Position storage ref)"}},"id":5756,"indexExpression":{"id":5755,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"6814:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6804:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_storage","typeString":"struct UDex.Position storage ref"}},"functionReturnParameters":5735,"id":5757,"nodeType":"Return","src":"6797:23:15"}]},"functionSelector":"16c19739","id":5759,"implemented":true,"kind":"function","modifiers":[],"name":"getPosition","nameLocation":"6534:11:15","nodeType":"FunctionDefinition","parameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5730,"mutability":"mutable","name":"owner","nameLocation":"6554:5:15","nodeType":"VariableDeclaration","scope":5759,"src":"6546:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5729,"name":"address","nodeType":"ElementaryTypeName","src":"6546:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6545:15:15"},"returnParameters":{"id":5735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5734,"mutability":"mutable","name":"position","nameLocation":"6598:8:15","nodeType":"VariableDeclaration","scope":5759,"src":"6582:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position"},"typeName":{"id":5733,"nodeType":"UserDefinedTypeName","pathNode":{"id":5732,"name":"Position","nameLocations":["6582:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":5415,"src":"6582:8:15"},"referencedDeclaration":5415,"src":"6582:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_storage_ptr","typeString":"struct UDex.Position"}},"visibility":"internal"}],"src":"6581:26:15"},"scope":6026,"src":"6525:302:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5801,"nodeType":"Block","src":"6887:375:15","statements":[{"assignments":[5765],"declarations":[{"constant":false,"id":5765,"mutability":"mutable","name":"longPnL","nameLocation":"6904:7:15","nodeType":"VariableDeclaration","scope":5801,"src":"6897:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5764,"name":"int256","nodeType":"ElementaryTypeName","src":"6897:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5778,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"expression":{"id":5767,"name":"totalLongPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"6973:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary storage ref"}},"id":5768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6992:9:15","memberName":"sizeInXdc","nodeType":"MemberAccess","referencedDeclaration":5419,"src":"6973:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7003:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5766,"name":"getUsdtValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"6960:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6960:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7006:8:15","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5236,"src":"6960:54:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6960:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":5773,"name":"totalLongPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"7019:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary storage ref"}},"id":5774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7038:10:15","memberName":"sizeInUsdt","nodeType":"MemberAccess","referencedDeclaration":5417,"src":"7019:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7049:8:15","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5236,"src":"7019:38:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6960:99:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"6897:162:15"},{"assignments":[5780],"declarations":[{"constant":false,"id":5780,"mutability":"mutable","name":"shortPnL","nameLocation":"7077:8:15","nodeType":"VariableDeclaration","scope":5801,"src":"7070:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5779,"name":"int256","nodeType":"ElementaryTypeName","src":"7070:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5793,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":5781,"name":"totalShortPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"7100:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary storage ref"}},"id":5782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7120:10:15","memberName":"sizeInUsdt","nodeType":"MemberAccess","referencedDeclaration":5417,"src":"7100:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7131:8:15","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5236,"src":"7100:39:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7100:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"expression":{"id":5786,"name":"totalShortPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"7157:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary storage ref"}},"id":5787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7177:9:15","memberName":"sizeInXdc","nodeType":"MemberAccess","referencedDeclaration":5419,"src":"7157:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":5788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7188:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5785,"name":"getUsdtValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"7144:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7144:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7191:8:15","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5236,"src":"7144:55:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7144:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7100:101:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"7070:131:15"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5794,"name":"shortPnL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"7220:8:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5795,"name":"longPnL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5765,"src":"7231:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7220:18:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7219:20:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7242:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7219:27:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5763,"id":5800,"nodeType":"Return","src":"7212:34:15"}]},"functionSelector":"9f006651","id":5802,"implemented":true,"kind":"function","modifiers":[],"name":"getTradersPnL","nameLocation":"6842:13:15","nodeType":"FunctionDefinition","parameters":{"id":5760,"nodeType":"ParameterList","parameters":[],"src":"6855:2:15"},"returnParameters":{"id":5763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5802,"src":"6879:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5761,"name":"int256","nodeType":"ElementaryTypeName","src":"6879:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"6878:8:15"},"scope":6026,"src":"6833:429:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5811,"nodeType":"Block","src":"7831:39:15","statements":[{"expression":{"id":5809,"name":"currentXDCPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"7848:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5808,"id":5810,"nodeType":"Return","src":"7841:22:15"}]},"functionSelector":"e7572230","id":5812,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"7767:8:15","nodeType":"FunctionDefinition","parameters":{"id":5805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5804,"mutability":"mutable","name":"currentXDCPrice","nameLocation":"7784:15:15","nodeType":"VariableDeclaration","scope":5812,"src":"7776:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5803,"name":"uint256","nodeType":"ElementaryTypeName","src":"7776:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7775:25:15"},"returnParameters":{"id":5808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5812,"src":"7822:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5806,"name":"uint256","nodeType":"ElementaryTypeName","src":"7822:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7821:9:15"},"scope":6026,"src":"7758:112:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5836,"nodeType":"Block","src":"7969:148:15","statements":[{"assignments":[5822],"declarations":[{"constant":false,"id":5822,"mutability":"mutable","name":"xdcPrice","nameLocation":"7987:8:15","nodeType":"VariableDeclaration","scope":5836,"src":"7979:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5821,"name":"uint256","nodeType":"ElementaryTypeName","src":"7979:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5826,"initialValue":{"arguments":[{"id":5824,"name":"currentXDCPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"8007:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5823,"name":"getPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"7998:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7998:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7979:44:15"},{"assignments":[5828],"declarations":[{"constant":false,"id":5828,"mutability":"mutable","name":"xdcAmountInUsdt","nameLocation":"8041:15:15","nodeType":"VariableDeclaration","scope":5836,"src":"8033:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5827,"name":"uint256","nodeType":"ElementaryTypeName","src":"8033:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5833,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5829,"name":"xdcPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"8060:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5830,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"8071:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8060:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8059:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8033:45:15"},{"expression":{"id":5834,"name":"xdcAmountInUsdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"8095:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5820,"id":5835,"nodeType":"Return","src":"8088:22:15"}]},"functionSelector":"169fffe2","id":5837,"implemented":true,"kind":"function","modifiers":[],"name":"getUsdtValue","nameLocation":"7885:12:15","nodeType":"FunctionDefinition","parameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5814,"mutability":"mutable","name":"amount","nameLocation":"7906:6:15","nodeType":"VariableDeclaration","scope":5837,"src":"7898:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5813,"name":"uint256","nodeType":"ElementaryTypeName","src":"7898:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5816,"mutability":"mutable","name":"currentXDCPrice","nameLocation":"7922:15:15","nodeType":"VariableDeclaration","scope":5837,"src":"7914:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5815,"name":"uint256","nodeType":"ElementaryTypeName","src":"7914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7897:41:15"},"returnParameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5837,"src":"7960:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5818,"name":"uint256","nodeType":"ElementaryTypeName","src":"7960:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7959:9:15"},"scope":6026,"src":"7876:241:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5874,"nodeType":"Block","src":"8418:282:15","statements":[{"condition":{"id":5846,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"8432:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5872,"nodeType":"Block","src":"8569:125:15","statements":[{"expression":{"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5860,"name":"totalShortPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"8583:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary storage ref"}},"id":5862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8603:10:15","memberName":"sizeInUsdt","nodeType":"MemberAccess","referencedDeclaration":5417,"src":"8583:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5863,"name":"sizeInUsdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"8617:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8583:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5865,"nodeType":"ExpressionStatement","src":"8583:44:15"},{"expression":{"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5866,"name":"totalShortPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"8641:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary storage ref"}},"id":5868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8661:9:15","memberName":"sizeInXdc","nodeType":"MemberAccess","referencedDeclaration":5419,"src":"8641:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5869,"name":"sizeInXdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"8674:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8641:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5871,"nodeType":"ExpressionStatement","src":"8641:42:15"}]},"id":5873,"nodeType":"IfStatement","src":"8428:266:15","trueBody":{"id":5859,"nodeType":"Block","src":"8440:123:15","statements":[{"expression":{"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5847,"name":"totalLongPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"8454:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary storage ref"}},"id":5849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8473:10:15","memberName":"sizeInUsdt","nodeType":"MemberAccess","referencedDeclaration":5417,"src":"8454:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5850,"name":"sizeInUsdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"8487:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5852,"nodeType":"ExpressionStatement","src":"8454:43:15"},{"expression":{"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5853,"name":"totalLongPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"8511:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary storage ref"}},"id":5855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8530:9:15","memberName":"sizeInXdc","nodeType":"MemberAccess","referencedDeclaration":5419,"src":"8511:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5856,"name":"sizeInXdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"8543:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8511:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5858,"nodeType":"ExpressionStatement","src":"8511:41:15"}]}}]},"id":5875,"implemented":true,"kind":"function","modifiers":[],"name":"_increasePositionsSumary","nameLocation":"8332:24:15","nodeType":"FunctionDefinition","parameters":{"id":5844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5839,"mutability":"mutable","name":"sizeInUsdt","nameLocation":"8365:10:15","nodeType":"VariableDeclaration","scope":5875,"src":"8357:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5838,"name":"uint256","nodeType":"ElementaryTypeName","src":"8357:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5841,"mutability":"mutable","name":"sizeInXdc","nameLocation":"8385:9:15","nodeType":"VariableDeclaration","scope":5875,"src":"8377:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5840,"name":"uint256","nodeType":"ElementaryTypeName","src":"8377:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5843,"mutability":"mutable","name":"isLong","nameLocation":"8401:6:15","nodeType":"VariableDeclaration","scope":5875,"src":"8396:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5842,"name":"bool","nodeType":"ElementaryTypeName","src":"8396:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8356:52:15"},"returnParameters":{"id":5845,"nodeType":"ParameterList","parameters":[],"src":"8418:0:15"},"scope":6026,"src":"8323:377:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5912,"nodeType":"Block","src":"8802:282:15","statements":[{"condition":{"id":5884,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"8816:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5910,"nodeType":"Block","src":"8953:125:15","statements":[{"expression":{"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5898,"name":"totalShortPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"8967:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary storage ref"}},"id":5900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8987:10:15","memberName":"sizeInUsdt","nodeType":"MemberAccess","referencedDeclaration":5417,"src":"8967:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5901,"name":"sizeInUsdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"9001:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8967:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5903,"nodeType":"ExpressionStatement","src":"8967:44:15"},{"expression":{"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5904,"name":"totalShortPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"9025:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary storage ref"}},"id":5906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9045:9:15","memberName":"sizeInXdc","nodeType":"MemberAccess","referencedDeclaration":5419,"src":"9025:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5907,"name":"sizeInXdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"9058:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9025:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5909,"nodeType":"ExpressionStatement","src":"9025:42:15"}]},"id":5911,"nodeType":"IfStatement","src":"8812:266:15","trueBody":{"id":5897,"nodeType":"Block","src":"8824:123:15","statements":[{"expression":{"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5885,"name":"totalLongPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"8838:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary storage ref"}},"id":5887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8857:10:15","memberName":"sizeInUsdt","nodeType":"MemberAccess","referencedDeclaration":5417,"src":"8838:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5888,"name":"sizeInUsdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"8871:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8838:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5890,"nodeType":"ExpressionStatement","src":"8838:43:15"},{"expression":{"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5891,"name":"totalLongPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"8895:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_PositionsSummary_$5420_storage","typeString":"struct UDex.PositionsSummary storage ref"}},"id":5893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8914:9:15","memberName":"sizeInXdc","nodeType":"MemberAccess","referencedDeclaration":5419,"src":"8895:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5894,"name":"sizeInXdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"8927:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8895:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5896,"nodeType":"ExpressionStatement","src":"8895:41:15"}]}}]},"id":5913,"implemented":true,"kind":"function","modifiers":[],"name":"_decreasePositionsSummary","nameLocation":"8715:25:15","nodeType":"FunctionDefinition","parameters":{"id":5882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"sizeInUsdt","nameLocation":"8749:10:15","nodeType":"VariableDeclaration","scope":5913,"src":"8741:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5876,"name":"uint256","nodeType":"ElementaryTypeName","src":"8741:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5879,"mutability":"mutable","name":"sizeInXdc","nameLocation":"8769:9:15","nodeType":"VariableDeclaration","scope":5913,"src":"8761:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5878,"name":"uint256","nodeType":"ElementaryTypeName","src":"8761:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5881,"mutability":"mutable","name":"isLong","nameLocation":"8785:6:15","nodeType":"VariableDeclaration","scope":5913,"src":"8780:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5880,"name":"bool","nodeType":"ElementaryTypeName","src":"8780:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8740:52:15"},"returnParameters":{"id":5883,"nodeType":"ParameterList","parameters":[],"src":"8802:0:15"},"scope":6026,"src":"8706:378:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5977,"nodeType":"Block","src":"9185:541:15","statements":[{"assignments":[5922],"declarations":[{"constant":false,"id":5922,"mutability":"mutable","name":"positionPnL","nameLocation":"9202:11:15","nodeType":"VariableDeclaration","scope":5977,"src":"9195:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5921,"name":"int256","nodeType":"ElementaryTypeName","src":"9195:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5927,"initialValue":{"arguments":[{"id":5924,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"9238:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},{"id":5925,"name":"currentXdcPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"9248:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5923,"name":"_calculatePositionPnL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"9216:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Position_$5415_memory_ptr_$_t_uint256_$returns$_t_int256_$","typeString":"function (struct UDex.Position memory,uint256) pure returns (int256)"}},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9216:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"9195:69:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":5928,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"9279:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":5929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9288:10:15","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":5406,"src":"9279:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9299:8:15","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5236,"src":"9279:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9279:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5932,"name":"positionPnL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"9312:11:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9279:44:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":5934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9327:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9279:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5942,"nodeType":"IfStatement","src":"9275:134:15","trueBody":{"id":5941,"nodeType":"Block","src":"9330:79:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5936,"name":"LibError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"9351:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibError_$6086_$","typeString":"type(library LibError)"}},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9360:36:15","memberName":"UDex__InsufficientPositionCollateral","nodeType":"MemberAccess","referencedDeclaration":6081,"src":"9351:45:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9351:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5940,"nodeType":"RevertStatement","src":"9344:54:15"}]}},{"assignments":[5944],"declarations":[{"constant":false,"id":5944,"mutability":"mutable","name":"positionCollateral","nameLocation":"9427:18:15","nodeType":"VariableDeclaration","scope":5977,"src":"9419:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5943,"name":"uint256","nodeType":"ElementaryTypeName","src":"9419:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5954,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":5945,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"9449:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":5946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9458:10:15","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":5406,"src":"9449:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9469:8:15","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5236,"src":"9449:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9449:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5949,"name":"positionPnL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"9482:11:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9449:44:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9448:46:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9495:9:15","memberName":"toUint256","nodeType":"MemberAccess","referencedDeclaration":4400,"src":"9448:56:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$attached_to$_t_int256_$","typeString":"function (int256) pure returns (uint256)"}},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9419:87:15"},{"assignments":[5956],"declarations":[{"constant":false,"id":5956,"mutability":"mutable","name":"levarage","nameLocation":"9525:8:15","nodeType":"VariableDeclaration","scope":5977,"src":"9517:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5955,"name":"uint256","nodeType":"ElementaryTypeName","src":"9517:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5966,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5957,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"9538:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":5958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9547:9:15","memberName":"xdcAmount","nodeType":"MemberAccess","referencedDeclaration":5410,"src":"9538:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":5959,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"9559:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":5960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9568:11:15","memberName":"avgXdcPrice","nodeType":"MemberAccess","referencedDeclaration":5408,"src":"9559:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9538:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9537:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5963,"name":"positionCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"9583:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9537:64:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9536:66:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9517:85:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5967,"name":"levarage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"9627:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5968,"name":"MAX_LEVARAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"9639:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9627:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5976,"nodeType":"IfStatement","src":"9623:97:15","trueBody":{"id":5975,"nodeType":"Block","src":"9653:67:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5970,"name":"LibError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"9674:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibError_$6086_$","typeString":"type(library LibError)"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9683:24:15","memberName":"UDex__BreaksHealthFactor","nodeType":"MemberAccess","referencedDeclaration":6083,"src":"9674:33:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5974,"nodeType":"RevertStatement","src":"9667:42:15"}]}}]},"id":5978,"implemented":true,"kind":"function","modifiers":[],"name":"_checkPositionHealth","nameLocation":"9099:20:15","nodeType":"FunctionDefinition","parameters":{"id":5919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"position","nameLocation":"9136:8:15","nodeType":"VariableDeclaration","scope":5978,"src":"9120:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position"},"typeName":{"id":5915,"nodeType":"UserDefinedTypeName","pathNode":{"id":5914,"name":"Position","nameLocations":["9120:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":5415,"src":"9120:8:15"},"referencedDeclaration":5415,"src":"9120:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_storage_ptr","typeString":"struct UDex.Position"}},"visibility":"internal"},{"constant":false,"id":5918,"mutability":"mutable","name":"currentXdcPrice","nameLocation":"9154:15:15","nodeType":"VariableDeclaration","scope":5978,"src":"9146:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5917,"name":"uint256","nodeType":"ElementaryTypeName","src":"9146:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9119:51:15"},"returnParameters":{"id":5920,"nodeType":"ParameterList","parameters":[],"src":"9185:0:15"},"scope":6026,"src":"9090:636:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6024,"nodeType":"Block","src":"9845:456:15","statements":[{"assignments":[5989],"declarations":[{"constant":false,"id":5989,"mutability":"mutable","name":"currentPositionValue","nameLocation":"9862:20:15","nodeType":"VariableDeclaration","scope":6024,"src":"9855:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5988,"name":"int256","nodeType":"ElementaryTypeName","src":"9855:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5997,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5990,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"9886:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":5991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9895:9:15","memberName":"xdcAmount","nodeType":"MemberAccess","referencedDeclaration":5410,"src":"9886:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5992,"name":"currentXdcPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"9907:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9886:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9885:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9924:8:15","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5236,"src":"9885:47:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9885:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"9855:79:15"},{"assignments":[5999],"declarations":[{"constant":false,"id":5999,"mutability":"mutable","name":"positionValueWhenCreated","nameLocation":"9983:24:15","nodeType":"VariableDeclaration","scope":6024,"src":"9976:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5998,"name":"int256","nodeType":"ElementaryTypeName","src":"9976:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6008,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6000,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"10011:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":6001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10020:9:15","memberName":"xdcAmount","nodeType":"MemberAccess","referencedDeclaration":5410,"src":"10011:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":6002,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"10032:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":6003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10041:11:15","memberName":"avgXdcPrice","nodeType":"MemberAccess","referencedDeclaration":5408,"src":"10032:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10011:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10010:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10054:8:15","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5236,"src":"10010:52:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10010:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"9976:88:15"},{"condition":{"expression":{"id":6009,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"10110:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position memory"}},"id":6010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10119:6:15","memberName":"isLong","nodeType":"MemberAccess","referencedDeclaration":5412,"src":"10110:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6022,"nodeType":"Block","src":"10214:81:15","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6017,"name":"positionValueWhenCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"10236:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6018,"name":"currentPositionValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"10263:20:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10236:47:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10235:49:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5987,"id":6021,"nodeType":"Return","src":"10228:56:15"}]},"id":6023,"nodeType":"IfStatement","src":"10106:189:15","trueBody":{"id":6016,"nodeType":"Block","src":"10127:81:15","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6011,"name":"currentPositionValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"10149:20:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6012,"name":"positionValueWhenCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"10172:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10149:47:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10148:49:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5987,"id":6015,"nodeType":"Return","src":"10141:56:15"}]}}]},"id":6025,"implemented":true,"kind":"function","modifiers":[],"name":"_calculatePositionPnL","nameLocation":"9741:21:15","nodeType":"FunctionDefinition","parameters":{"id":5984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"position","nameLocation":"9779:8:15","nodeType":"VariableDeclaration","scope":6025,"src":"9763:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_memory_ptr","typeString":"struct UDex.Position"},"typeName":{"id":5980,"nodeType":"UserDefinedTypeName","pathNode":{"id":5979,"name":"Position","nameLocations":["9763:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":5415,"src":"9763:8:15"},"referencedDeclaration":5415,"src":"9763:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$5415_storage_ptr","typeString":"struct UDex.Position"}},"visibility":"internal"},{"constant":false,"id":5983,"mutability":"mutable","name":"currentXdcPrice","nameLocation":"9797:15:15","nodeType":"VariableDeclaration","scope":6025,"src":"9789:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5982,"name":"uint256","nodeType":"ElementaryTypeName","src":"9789:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9762:51:15"},"returnParameters":{"id":5987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6025,"src":"9837:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5985,"name":"int256","nodeType":"ElementaryTypeName","src":"9837:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9836:8:15"},"scope":6026,"src":"9732:569:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6027,"src":"783:9568:15","usedErrors":[13,18,329,334,339,348,353,358,1081,1090,1099,1108,1811,2092,2097,2100,2373,2434,3497,3509,6075,6077,6079,6081,6083,6085],"usedEvents":[24,168,180,981,990,5396,5404]}],"src":"33:10319:15"},"id":15},"contracts/interface/IStatus.sol":{"ast":{"absolutePath":"contracts/interface/IStatus.sol","exportedSymbols":{"IStatus":[6069]},"id":6070,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6028,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"31:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IStatus","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":6069,"linearizedBaseContracts":[6069],"name":"IStatus","nameLocation":"66:7:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IStatus.FlightStatus","id":6035,"members":[{"id":6029,"name":"DELAYED","nameLocation":"108:7:16","nodeType":"EnumValue","src":"108:7:16"},{"id":6030,"name":"UPCOMING","nameLocation":"125:8:16","nodeType":"EnumValue","src":"125:8:16"},{"id":6031,"name":"DEPARTURED","nameLocation":"143:10:16","nodeType":"EnumValue","src":"143:10:16"},{"id":6032,"name":"TRANSIT","nameLocation":"163:7:16","nodeType":"EnumValue","src":"163:7:16"},{"id":6033,"name":"CANCELLED","nameLocation":"180:9:16","nodeType":"EnumValue","src":"180:9:16"},{"id":6034,"name":"ONTIME","nameLocation":"199:6:16","nodeType":"EnumValue","src":"199:6:16"}],"name":"FlightStatus","nameLocation":"85:12:16","nodeType":"EnumDefinition","src":"80:131:16"},{"canonicalName":"IStatus.FlightMaster","id":6048,"members":[{"constant":false,"id":6037,"mutability":"mutable","name":"flightId","nameLocation":"255:8:16","nodeType":"VariableDeclaration","scope":6048,"src":"247:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6036,"name":"uint256","nodeType":"ElementaryTypeName","src":"247:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6039,"mutability":"mutable","name":"carrierFlightNumber","nameLocation":"280:19:16","nodeType":"VariableDeclaration","scope":6048,"src":"273:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6038,"name":"string","nodeType":"ElementaryTypeName","src":"273:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6041,"mutability":"mutable","name":"serviceProviderName","nameLocation":"316:19:16","nodeType":"VariableDeclaration","scope":6048,"src":"309:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6040,"name":"string","nodeType":"ElementaryTypeName","src":"309:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6043,"mutability":"mutable","name":"serviceProvider","nameLocation":"353:15:16","nodeType":"VariableDeclaration","scope":6048,"src":"345:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6042,"name":"address","nodeType":"ElementaryTypeName","src":"345:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6045,"mutability":"mutable","name":"registeredOn","nameLocation":"431:12:16","nodeType":"VariableDeclaration","scope":6048,"src":"423:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6044,"name":"uint256","nodeType":"ElementaryTypeName","src":"423:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6047,"mutability":"mutable","name":"registeredBy","nameLocation":"461:12:16","nodeType":"VariableDeclaration","scope":6048,"src":"453:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6046,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"FlightMaster","nameLocation":"224:12:16","nodeType":"StructDefinition","scope":6069,"src":"217:263:16","visibility":"public"},{"canonicalName":"IStatus.FlightInsurance","id":6068,"members":[{"constant":false,"id":6050,"mutability":"mutable","name":"polictyid","nameLocation":"527:9:16","nodeType":"VariableDeclaration","scope":6068,"src":"519:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6049,"name":"uint256","nodeType":"ElementaryTypeName","src":"519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6052,"mutability":"mutable","name":"passenger","nameLocation":"554:9:16","nodeType":"VariableDeclaration","scope":6068,"src":"546:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6051,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6054,"mutability":"mutable","name":"carrierFlightNumber","nameLocation":"580:19:16","nodeType":"VariableDeclaration","scope":6068,"src":"573:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6053,"name":"string","nodeType":"ElementaryTypeName","src":"573:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6056,"mutability":"mutable","name":"departureOn","nameLocation":"617:11:16","nodeType":"VariableDeclaration","scope":6068,"src":"609:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6055,"name":"uint256","nodeType":"ElementaryTypeName","src":"609:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6058,"mutability":"mutable","name":"arrivalOn","nameLocation":"646:9:16","nodeType":"VariableDeclaration","scope":6068,"src":"638:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6057,"name":"uint256","nodeType":"ElementaryTypeName","src":"638:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6060,"mutability":"mutable","name":"bookedOn","nameLocation":"673:8:16","nodeType":"VariableDeclaration","scope":6068,"src":"665:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6059,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6063,"mutability":"mutable","name":"flightStatus","nameLocation":"704:12:16","nodeType":"VariableDeclaration","scope":6068,"src":"691:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_FlightStatus_$6035","typeString":"enum IStatus.FlightStatus"},"typeName":{"id":6062,"nodeType":"UserDefinedTypeName","pathNode":{"id":6061,"name":"FlightStatus","nameLocations":["691:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":6035,"src":"691:12:16"},"referencedDeclaration":6035,"src":"691:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_FlightStatus_$6035","typeString":"enum IStatus.FlightStatus"}},"visibility":"internal"},{"constant":false,"id":6065,"mutability":"mutable","name":"yearmonthdate","nameLocation":"734:13:16","nodeType":"VariableDeclaration","scope":6068,"src":"726:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6064,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6067,"mutability":"mutable","name":"processed","nameLocation":"762:9:16","nodeType":"VariableDeclaration","scope":6068,"src":"757:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6066,"name":"bool","nodeType":"ElementaryTypeName","src":"757:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FlightInsurance","nameLocation":"493:15:16","nodeType":"StructDefinition","scope":6069,"src":"486:292:16","visibility":"public"}],"scope":6070,"src":"56:724:16","usedErrors":[],"usedEvents":[]}],"src":"31:750:16"},"id":16},"contracts/lib/LibError.sol":{"ast":{"absolutePath":"contracts/lib/LibError.sol","exportedSymbols":{"LibError":[6086]},"id":6087,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6071,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"33:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"LibError","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":6086,"linearizedBaseContracts":[6086],"name":"LibError","nameLocation":"67:8:17","nodeType":"ContractDefinition","nodes":[{"errorSelector":"8332ebe2","id":6073,"name":"Oracle__ErrorPrice","nameLocation":"101:18:17","nodeType":"ErrorDefinition","parameters":{"id":6072,"nodeType":"ParameterList","parameters":[],"src":"119:2:17"},"src":"95:27:17"},{"errorSelector":"7b92cb43","id":6075,"name":"UDex__ErrorInsufficientCollateral","nameLocation":"147:33:17","nodeType":"ErrorDefinition","parameters":{"id":6074,"nodeType":"ParameterList","parameters":[],"src":"180:2:17"},"src":"141:42:17"},{"errorSelector":"62a73c50","id":6077,"name":"UDex__ErrorSize","nameLocation":"194:15:17","nodeType":"ErrorDefinition","parameters":{"id":6076,"nodeType":"ParameterList","parameters":[],"src":"209:2:17"},"src":"188:24:17"},{"errorSelector":"63dab3e8","id":6079,"name":"UDex__PositionAlreadyExist","nameLocation":"223:26:17","nodeType":"ErrorDefinition","parameters":{"id":6078,"nodeType":"ParameterList","parameters":[],"src":"249:2:17"},"src":"217:35:17"},{"errorSelector":"4f5a26ba","id":6081,"name":"UDex__InsufficientPositionCollateral","nameLocation":"263:36:17","nodeType":"ErrorDefinition","parameters":{"id":6080,"nodeType":"ParameterList","parameters":[],"src":"299:2:17"},"src":"257:45:17"},{"errorSelector":"f97fcc9c","id":6083,"name":"UDex__BreaksHealthFactor","nameLocation":"313:24:17","nodeType":"ErrorDefinition","parameters":{"id":6082,"nodeType":"ParameterList","parameters":[],"src":"337:2:17"},"src":"307:33:17"},{"errorSelector":"bd32c614","id":6085,"name":"UDex__PositionDoesNotExist","nameLocation":"351:26:17","nodeType":"ErrorDefinition","parameters":{"id":6084,"nodeType":"ParameterList","parameters":[],"src":"377:2:17"},"src":"345:35:17"}],"scope":6087,"src":"59:323:17","usedErrors":[6073,6075,6077,6079,6081,6083,6085],"usedEvents":[]}],"src":"33:350:17"},"id":17}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4626.sol":{"IERC4626":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"assetTokenAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"totalManagedAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address)":"ba087652","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256,address,address)":"b460af94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalManagedAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC4626 \\\"Tokenized Vault Standard\\\", as defined in https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"maxDeposit(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert.\"},\"maxMint(address)\":{\"details\":\"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert.\"},\"maxRedeem(address)\":{\"details\":\"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert.\"},\"maxWithdraw(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"redeem(uint256,address,address)\":{\"details\":\"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256,address,address)\":{\"details\":\"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":\"IERC4626\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol":{"ERC4626":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxDeposit","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxMint","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxRedeem","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxWithdraw","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address)":"ba087652","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256,address,address)":"b460af94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxDeposit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxRedeem\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC4626 \\\"Tokenized Vault Standard\\\" as defined in https://eips.ethereum.org/EIPS/eip-4626[EIP-4626]. This extension allows the minting and burning of \\\"shares\\\" (represented using the ERC20 inheritance) in exchange for underlying \\\"assets\\\" through standardized {deposit}, {mint}, {redeem} and {burn} workflows. This contract extends the ERC20 standard. Any additional extensions included along it would affect the \\\"shares\\\" token represented by this contract and not the \\\"assets\\\" token which is an independent contract. [CAUTION] ==== In empty (or nearly empty) ERC-4626 vaults, deposits are at high risk of being stolen through frontrunning with a \\\"donation\\\" to the vault that inflates the price of a share. This is variously known as a donation or inflation attack and is essentially a problem of slippage. Vault deployers can protect against this attack by making an initial deposit of a non-trivial amount of the asset, such that price manipulation becomes infeasible. Withdrawals may similarly be affected by slippage. Users can protect against this attack as well as unexpected slippage in general by verifying the amount received is as expected, using a wrapper that performs these checks such as https://github.com/fei-protocol/ERC4626#erc4626router-and-base[ERC4626Router]. Since v4.9, this implementation uses virtual assets and shares to mitigate that risk. The `_decimalsOffset()` corresponds to an offset in the decimal representation between the underlying asset's decimals and the vault decimals. This offset also determines the rate of virtual shares to virtual assets in the vault, which itself determines the initial exchange rate. While not fully preventing the attack, analysis shows that the default offset (0) makes it non-profitable, as a result of the value being captured by the virtual shares (out of the attacker's donation) matching the attacker's expected gains. With a larger offset, the attack becomes orders of magnitude more expensive than it is profitable. More details about the underlying math can be found xref:erc4626.adoc#inflation-attack[here]. The drawback of this approach is that the virtual shares do capture (a very small) part of the value being accrued to the vault. Also, if the vault experiences losses, the users try to exit the vault, the virtual shares and assets will cause the first user to exit to experience reduced losses in detriment to the last users that will experience bigger losses. Developers willing to revert back to the pre-v4.9 behavior just need to override the `_convertToShares` and `_convertToAssets` functions. To learn more, check out our xref:ROOT:erc4626.adoc[ERC-4626 guide]. ====\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC4626ExceededMaxDeposit(address,uint256,uint256)\":[{\"details\":\"Attempted to deposit more assets than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxMint(address,uint256,uint256)\":[{\"details\":\"Attempted to mint more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxRedeem(address,uint256,uint256)\":[{\"details\":\"Attempted to redeem more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxWithdraw(address,uint256,uint256)\":[{\"details\":\"Attempted to withdraw more assets than the max amount for `receiver`.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"See {IERC4626-asset}. \"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Set the underlying asset contract. This must be an ERC20-compatible contract (ERC20 or ERC777).\"},\"convertToAssets(uint256)\":{\"details\":\"See {IERC4626-convertToAssets}. \"},\"convertToShares(uint256)\":{\"details\":\"See {IERC4626-convertToShares}. \"},\"decimals()\":{\"details\":\"Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This \\\"original\\\" value is cached during construction of the vault contract. If this read operation fails (e.g., the asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals. See {IERC20Metadata-decimals}.\"},\"deposit(uint256,address)\":{\"details\":\"See {IERC4626-deposit}. \"},\"maxDeposit(address)\":{\"details\":\"See {IERC4626-maxDeposit}. \"},\"maxMint(address)\":{\"details\":\"See {IERC4626-maxMint}. \"},\"maxRedeem(address)\":{\"details\":\"See {IERC4626-maxRedeem}. \"},\"maxWithdraw(address)\":{\"details\":\"See {IERC4626-maxWithdraw}. \"},\"mint(uint256,address)\":{\"details\":\"See {IERC4626-mint}. As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero. In this case, the shares will be minted without requiring any assets to be deposited.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"See {IERC4626-previewDeposit}. \"},\"previewMint(uint256)\":{\"details\":\"See {IERC4626-previewMint}. \"},\"previewRedeem(uint256)\":{\"details\":\"See {IERC4626-previewRedeem}. \"},\"previewWithdraw(uint256)\":{\"details\":\"See {IERC4626-previewWithdraw}. \"},\"redeem(uint256,address,address)\":{\"details\":\"See {IERC4626-redeem}. \"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"See {IERC4626-totalAssets}. \"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"withdraw(uint256,address,address)\":{\"details\":\"See {IERC4626-withdraw}. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\":\"ERC4626\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0x1837547e04d5fe5334eeb77a345683c22995f1e7aa033020757ddf83a80fc72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d6031bc0e6f70edceb4e63fd624fe6be09dc48f5201c7a9078c26e6a9ef95f\",\"dweb:/ipfs/QmPTEBH7dmU3NgE6vtjMy7xEK54as9VHSgf9ojupwnvoke\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068a4978f966a95d10101a549430473f2c354ab426795cb818439affc21d473fc64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xA4978F966A95D10101 0xA5 0x49 NUMBER DIV PUSH20 0xF2C354AB426795CB818439AFFC21D473FC64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"751:5018:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068a4978f966a95d10101a549430473f2c354ab426795cb818439affc21d473fc64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xA4978F966A95D10101 0xA5 0x49 NUMBER DIV PUSH20 0xF2C354AB426795CB818439AFFC21D473FC64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"751:5018:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c130009c20f826936a558e8b70b0f8bbf7e1dd504220c7657e001546a401f5b864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 ADDRESS STOP SWAP13 KECCAK256 0xF8 0x26 SWAP4 PUSH11 0x558E8B70B0F8BBF7E1DD50 TIMESTAMP KECCAK256 0xC7 PUSH6 0x7E001546A401 CREATE2 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c130009c20f826936a558e8b70b0f8bbf7e1dd504220c7657e001546a401f5b864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 ADDRESS STOP SWAP13 KECCAK256 0xF8 0x26 SWAP4 PUSH11 0x558E8B70B0F8BBF7E1DD50 TIMESTAMP KECCAK256 0xC7 PUSH6 0x7E001546A401 CREATE2 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f13fdb1781f3305fc299657a0d60bca3167ebf43f36d9c04464d877f134e96264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SGT REVERT 0xB1 PUSH25 0x1F3305FC299657A0D60BCA3167EBF43F36D9C04464D877F134 0xE9 PUSH3 0x64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"203:14914:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f13fdb1781f3305fc299657a0d60bca3167ebf43f36d9c04464d877f134e96264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SGT REVERT 0xB1 PUSH25 0x1F3305FC299657A0D60BCA3167EBF43F36D9C04464D877F134 0xE9 PUSH3 0x64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"203:14914:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e5378e8345b50b7ca2e1bee06ff62d5b518544effc0a7098a655ef17a84a0cb64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E MSTORE8 PUSH25 0xE8345B50B7CA2E1BEE06FF62D5B518544EFFC0A7098A655EF1 PUSH27 0x84A0CB64736F6C6343000814003300000000000000000000000000 ","sourceMap":"764:33927:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;764:33927:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e5378e8345b50b7ca2e1bee06ff62d5b518544effc0a7098a655ef17a84a0cb64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E MSTORE8 PUSH25 0xE8345B50B7CA2E1BEE06FF62D5B518544EFFC0A7098A655EF1 PUSH27 0x84A0CB64736F6C6343000814003300000000000000000000000000 ","sourceMap":"764:33927:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}"}},"contracts/CustomerContract.sol":{"CustomerContract":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"_counter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_bookName","type":"string"}],"name":"addBooks","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"books","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"bookName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceInfo","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"show","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_5277":{"entryPoint":null,"id":5277,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080604052600080546001600160a01b031916734c50a698f8148b2560eadb50a8397b614dcff6a017905534801561003657600080fd5b5060016002556105bc8061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100615760003560e01c80626d6cae14610066578063330227bf146100825780633c9d54de1461008a578063687440461461009f5780637cd49fde146100c0578063cc80f6f3146100c9575b600080fd5b61006f60015481565b6040519081526020015b60405180910390f35b61006f6100d1565b61009d6100983660046102dd565b61014a565b005b6100b26100ad36600461038e565b6101a5565b6040516100799291906103a7565b61006f60025481565b61006f61024a565b60008054604051639dd4cc5d60e01b81523360048201526001600160a01b0390911690639dd4cc5d906024016020604051808303816000875af115801561011c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014091906103fd565b6001819055919050565b6040805180820182526002548082526020808301858152600092835260039091529290208151815591519091906001820190610186908261049f565b5090505060016002600082825461019d919061055f565b909155505050565b600360205260009081526040902080546001820180549192916101c790610416565b80601f01602080910402602001604051908101604052809291908181526020018280546101f390610416565b80156102405780601f1061021557610100808354040283529160200191610240565b820191906000526020600020905b81548152906001019060200180831161022357829003601f168201915b5050505050905082565b60008060009054906101000a90046001600160a01b03166001600160a01b0316638e0e0abb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561029e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c291906103fd565b905090565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156102ef57600080fd5b813567ffffffffffffffff8082111561030757600080fd5b818401915084601f83011261031b57600080fd5b81358181111561032d5761032d6102c7565b604051601f8201601f19908116603f01168101908382118183101715610355576103556102c7565b8160405282815287602084870101111561036e57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156103a057600080fd5b5035919050565b82815260006020604081840152835180604085015260005b818110156103db578581018301518582016060015282016103bf565b506000606082860101526060601f19601f830116850101925050509392505050565b60006020828403121561040f57600080fd5b5051919050565b600181811c9082168061042a57607f821691505b60208210810361044a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561049a57600081815260208120601f850160051c810160208610156104775750805b601f850160051c820191505b8181101561049657828155600101610483565b5050505b505050565b815167ffffffffffffffff8111156104b9576104b96102c7565b6104cd816104c78454610416565b84610450565b602080601f83116001811461050257600084156104ea5750858301515b600019600386901b1c1916600185901b178555610496565b600085815260208120601f198616915b8281101561053157888601518255948401946001909101908401610512565b508582101561054f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561058057634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212203935f729198904828bf0769e4a36fcc82dfff02e5296ca3ba74f4e5b7657a27464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x4C50A698F8148B2560EADB50A8397B614DCFF6A0 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SSTORE PUSH2 0x5BC DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x61 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x6D6CAE EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x330227BF EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x3C9D54DE EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x68744046 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x7CD49FDE EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xCC80F6F3 EQ PUSH2 0xC9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0xD1 JUMP JUMPDEST PUSH2 0x9D PUSH2 0x98 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DD JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0x38E JUMP JUMPDEST PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP3 SWAP2 SWAP1 PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x6F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x24A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x9DD4CC5D PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x9DD4CC5D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x186 SWAP1 DUP3 PUSH2 0x49F JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x55F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x1C7 SWAP1 PUSH2 0x416 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F3 SWAP1 PUSH2 0x416 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x240 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x215 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x240 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x223 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8E0E0ABB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x3FD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x32D JUMPI PUSH2 0x32D PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x355 JUMPI PUSH2 0x355 PUSH2 0x2C7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x42A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x44A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x477 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x496 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x483 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B9 JUMPI PUSH2 0x4B9 PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x4C7 DUP5 SLOAD PUSH2 0x416 JUMP JUMPDEST DUP5 PUSH2 0x450 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x502 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4EA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x496 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x531 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x512 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x54F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x580 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY CALLDATALOAD 0xF7 0x29 NOT DUP10 DIV DUP3 DUP12 CREATE PUSH23 0x9E4A36FCC82DFFF02E5296CA3BA74F4E5B7657A2746473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"224:1157:14:-:0;;;256:65;;;-1:-1:-1;;;;;;256:65:14;279:42;256:65;;;501:41;;;;;;;;;-1:-1:-1;534:1:14;524:8;:11;224:1157;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_counter_5259":{"entryPoint":null,"id":5259,"parameterSlots":0,"returnSlots":0},"@addBooks_5296":{"entryPoint":330,"id":5296,"parameterSlots":1,"returnSlots":0},"@books_5269":{"entryPoint":421,"id":5269,"parameterSlots":0,"returnSlots":0},"@getPriceInfo_5315":{"entryPoint":209,"id":5315,"parameterSlots":0,"returnSlots":1},"@requestId_5257":{"entryPoint":null,"id":5257,"parameterSlots":0,"returnSlots":0},"@show_5327":{"entryPoint":586,"id":5327,"parameterSlots":0,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":1021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":910,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":935,"id":null,"parameterSlots":3,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1375,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1104,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1183,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1046,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":711,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5645:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:18","statements":[{"nodeType":"YulAssignment","src":"125:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:18"},"nodeType":"YulFunctionCall","src":"133:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:18"},"nodeType":"YulFunctionCall","src":"160:25:18"},"nodeType":"YulExpressionStatement","src":"160:25:18"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:18","type":""}],"src":"14:177:18"},{"body":{"nodeType":"YulBlock","src":"228:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"245:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"252:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"257:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"248:3:18"},"nodeType":"YulFunctionCall","src":"248:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"238:6:18"},"nodeType":"YulFunctionCall","src":"238:31:18"},"nodeType":"YulExpressionStatement","src":"238:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"285:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"288:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"278:6:18"},"nodeType":"YulFunctionCall","src":"278:15:18"},"nodeType":"YulExpressionStatement","src":"278:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"309:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"312:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:18"},"nodeType":"YulFunctionCall","src":"302:15:18"},"nodeType":"YulExpressionStatement","src":"302:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"196:127:18"},{"body":{"nodeType":"YulBlock","src":"408:842:18","statements":[{"body":{"nodeType":"YulBlock","src":"454:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"463:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"466:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"456:6:18"},"nodeType":"YulFunctionCall","src":"456:12:18"},"nodeType":"YulExpressionStatement","src":"456:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"429:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"438:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"425:3:18"},"nodeType":"YulFunctionCall","src":"425:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"450:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"421:3:18"},"nodeType":"YulFunctionCall","src":"421:32:18"},"nodeType":"YulIf","src":"418:52:18"},{"nodeType":"YulVariableDeclaration","src":"479:37:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"506:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"493:12:18"},"nodeType":"YulFunctionCall","src":"493:23:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"483:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"525:28:18","value":{"kind":"number","nodeType":"YulLiteral","src":"535:18:18","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"529:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"580:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"589:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"592:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"582:6:18"},"nodeType":"YulFunctionCall","src":"582:12:18"},"nodeType":"YulExpressionStatement","src":"582:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"568:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"576:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"565:2:18"},"nodeType":"YulFunctionCall","src":"565:14:18"},"nodeType":"YulIf","src":"562:34:18"},{"nodeType":"YulVariableDeclaration","src":"605:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"619:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"630:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"615:3:18"},"nodeType":"YulFunctionCall","src":"615:22:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"609:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"685:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"694:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"697:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"687:6:18"},"nodeType":"YulFunctionCall","src":"687:12:18"},"nodeType":"YulExpressionStatement","src":"687:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"664:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"668:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"660:3:18"},"nodeType":"YulFunctionCall","src":"660:13:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"675:7:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"656:3:18"},"nodeType":"YulFunctionCall","src":"656:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"649:6:18"},"nodeType":"YulFunctionCall","src":"649:35:18"},"nodeType":"YulIf","src":"646:55:18"},{"nodeType":"YulVariableDeclaration","src":"710:26:18","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"733:2:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"720:12:18"},"nodeType":"YulFunctionCall","src":"720:16:18"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"714:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"759:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"761:16:18"},"nodeType":"YulFunctionCall","src":"761:18:18"},"nodeType":"YulExpressionStatement","src":"761:18:18"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"751:2:18"},{"name":"_1","nodeType":"YulIdentifier","src":"755:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"748:2:18"},"nodeType":"YulFunctionCall","src":"748:10:18"},"nodeType":"YulIf","src":"745:36:18"},{"nodeType":"YulVariableDeclaration","src":"790:17:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"804:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"800:3:18"},"nodeType":"YulFunctionCall","src":"800:7:18"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"794:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"816:23:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"836:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"830:5:18"},"nodeType":"YulFunctionCall","src":"830:9:18"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"820:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"848:71:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"870:6:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"894:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"898:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"890:3:18"},"nodeType":"YulFunctionCall","src":"890:13:18"},{"name":"_4","nodeType":"YulIdentifier","src":"905:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"886:3:18"},"nodeType":"YulFunctionCall","src":"886:22:18"},{"kind":"number","nodeType":"YulLiteral","src":"910:2:18","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"882:3:18"},"nodeType":"YulFunctionCall","src":"882:31:18"},{"name":"_4","nodeType":"YulIdentifier","src":"915:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"878:3:18"},"nodeType":"YulFunctionCall","src":"878:40:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"866:3:18"},"nodeType":"YulFunctionCall","src":"866:53:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"852:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"978:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"980:16:18"},"nodeType":"YulFunctionCall","src":"980:18:18"},"nodeType":"YulExpressionStatement","src":"980:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"937:10:18"},{"name":"_1","nodeType":"YulIdentifier","src":"949:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"934:2:18"},"nodeType":"YulFunctionCall","src":"934:18:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"957:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"969:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"954:2:18"},"nodeType":"YulFunctionCall","src":"954:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"931:2:18"},"nodeType":"YulFunctionCall","src":"931:46:18"},"nodeType":"YulIf","src":"928:72:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1016:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1020:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1009:6:18"},"nodeType":"YulFunctionCall","src":"1009:22:18"},"nodeType":"YulExpressionStatement","src":"1009:22:18"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1047:6:18"},{"name":"_3","nodeType":"YulIdentifier","src":"1055:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1040:6:18"},"nodeType":"YulFunctionCall","src":"1040:18:18"},"nodeType":"YulExpressionStatement","src":"1040:18:18"},{"body":{"nodeType":"YulBlock","src":"1104:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1113:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1116:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1106:6:18"},"nodeType":"YulFunctionCall","src":"1106:12:18"},"nodeType":"YulExpressionStatement","src":"1106:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1081:2:18"},{"name":"_3","nodeType":"YulIdentifier","src":"1085:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1077:3:18"},"nodeType":"YulFunctionCall","src":"1077:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1090:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1073:3:18"},"nodeType":"YulFunctionCall","src":"1073:20:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1095:7:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1070:2:18"},"nodeType":"YulFunctionCall","src":"1070:33:18"},"nodeType":"YulIf","src":"1067:53:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1146:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1154:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1142:3:18"},"nodeType":"YulFunctionCall","src":"1142:15:18"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1163:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"1167:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1159:3:18"},"nodeType":"YulFunctionCall","src":"1159:11:18"},{"name":"_3","nodeType":"YulIdentifier","src":"1172:2:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1129:12:18"},"nodeType":"YulFunctionCall","src":"1129:46:18"},"nodeType":"YulExpressionStatement","src":"1129:46:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1199:6:18"},{"name":"_3","nodeType":"YulIdentifier","src":"1207:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1195:3:18"},"nodeType":"YulFunctionCall","src":"1195:15:18"},{"kind":"number","nodeType":"YulLiteral","src":"1212:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1191:3:18"},"nodeType":"YulFunctionCall","src":"1191:24:18"},{"kind":"number","nodeType":"YulLiteral","src":"1217:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1184:6:18"},"nodeType":"YulFunctionCall","src":"1184:35:18"},"nodeType":"YulExpressionStatement","src":"1184:35:18"},{"nodeType":"YulAssignment","src":"1228:16:18","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1238:6:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1228:6:18"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"374:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"385:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"397:6:18","type":""}],"src":"328:922:18"},{"body":{"nodeType":"YulBlock","src":"1325:110:18","statements":[{"body":{"nodeType":"YulBlock","src":"1371:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1380:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1383:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1373:6:18"},"nodeType":"YulFunctionCall","src":"1373:12:18"},"nodeType":"YulExpressionStatement","src":"1373:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1346:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1355:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1342:3:18"},"nodeType":"YulFunctionCall","src":"1342:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1367:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1338:3:18"},"nodeType":"YulFunctionCall","src":"1338:32:18"},"nodeType":"YulIf","src":"1335:52:18"},{"nodeType":"YulAssignment","src":"1396:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1419:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1406:12:18"},"nodeType":"YulFunctionCall","src":"1406:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1396:6:18"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1291:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1302:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1314:6:18","type":""}],"src":"1255:180:18"},{"body":{"nodeType":"YulBlock","src":"1589:470:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1606:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"1617:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1599:6:18"},"nodeType":"YulFunctionCall","src":"1599:25:18"},"nodeType":"YulExpressionStatement","src":"1599:25:18"},{"nodeType":"YulVariableDeclaration","src":"1633:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1643:2:18","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1637:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1665:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1676:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1661:3:18"},"nodeType":"YulFunctionCall","src":"1661:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"1681:2:18","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1654:6:18"},"nodeType":"YulFunctionCall","src":"1654:30:18"},"nodeType":"YulExpressionStatement","src":"1654:30:18"},{"nodeType":"YulVariableDeclaration","src":"1693:27:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1713:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1707:5:18"},"nodeType":"YulFunctionCall","src":"1707:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1697:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1740:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1751:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1736:3:18"},"nodeType":"YulFunctionCall","src":"1736:18:18"},{"name":"length","nodeType":"YulIdentifier","src":"1756:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:18"},"nodeType":"YulFunctionCall","src":"1729:34:18"},"nodeType":"YulExpressionStatement","src":"1729:34:18"},{"nodeType":"YulVariableDeclaration","src":"1772:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1781:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1776:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1841:90:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1870:9:18"},{"name":"i","nodeType":"YulIdentifier","src":"1881:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1866:3:18"},"nodeType":"YulFunctionCall","src":"1866:17:18"},{"kind":"number","nodeType":"YulLiteral","src":"1885:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1862:3:18"},"nodeType":"YulFunctionCall","src":"1862:26:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1904:6:18"},{"name":"i","nodeType":"YulIdentifier","src":"1912:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1900:3:18"},"nodeType":"YulFunctionCall","src":"1900:14:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1916:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1896:3:18"},"nodeType":"YulFunctionCall","src":"1896:23:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1890:5:18"},"nodeType":"YulFunctionCall","src":"1890:30:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1855:6:18"},"nodeType":"YulFunctionCall","src":"1855:66:18"},"nodeType":"YulExpressionStatement","src":"1855:66:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1802:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"1805:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1799:2:18"},"nodeType":"YulFunctionCall","src":"1799:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1813:19:18","statements":[{"nodeType":"YulAssignment","src":"1815:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1824:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1827:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1820:3:18"},"nodeType":"YulFunctionCall","src":"1820:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1815:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1795:3:18","statements":[]},"src":"1791:140:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1955:9:18"},{"name":"length","nodeType":"YulIdentifier","src":"1966:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1951:3:18"},"nodeType":"YulFunctionCall","src":"1951:22:18"},{"kind":"number","nodeType":"YulLiteral","src":"1975:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:18"},"nodeType":"YulFunctionCall","src":"1947:31:18"},{"kind":"number","nodeType":"YulLiteral","src":"1980:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:18"},"nodeType":"YulFunctionCall","src":"1940:42:18"},"nodeType":"YulExpressionStatement","src":"1940:42:18"},{"nodeType":"YulAssignment","src":"1991:62:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2007:9:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2026:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2034:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2022:3:18"},"nodeType":"YulFunctionCall","src":"2022:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2043:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2039:3:18"},"nodeType":"YulFunctionCall","src":"2039:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2018:3:18"},"nodeType":"YulFunctionCall","src":"2018:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2003:3:18"},"nodeType":"YulFunctionCall","src":"2003:45:18"},{"kind":"number","nodeType":"YulLiteral","src":"2050:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1999:3:18"},"nodeType":"YulFunctionCall","src":"1999:54:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1991:4:18"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1550:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1561:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1569:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1580:4:18","type":""}],"src":"1440:619:18"},{"body":{"nodeType":"YulBlock","src":"2165:76:18","statements":[{"nodeType":"YulAssignment","src":"2175:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2187:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2198:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:18"},"nodeType":"YulFunctionCall","src":"2183:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2175:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2217:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"2228:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2210:6:18"},"nodeType":"YulFunctionCall","src":"2210:25:18"},"nodeType":"YulExpressionStatement","src":"2210:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2134:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2145:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2156:4:18","type":""}],"src":"2064:177:18"},{"body":{"nodeType":"YulBlock","src":"2347:102:18","statements":[{"nodeType":"YulAssignment","src":"2357:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2369:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2380:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2365:3:18"},"nodeType":"YulFunctionCall","src":"2365:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2357:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2399:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2414:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2430:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2435:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2426:3:18"},"nodeType":"YulFunctionCall","src":"2426:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"2439:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2422:3:18"},"nodeType":"YulFunctionCall","src":"2422:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2410:3:18"},"nodeType":"YulFunctionCall","src":"2410:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:18"},"nodeType":"YulFunctionCall","src":"2392:51:18"},"nodeType":"YulExpressionStatement","src":"2392:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2316:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2327:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2338:4:18","type":""}],"src":"2246:203:18"},{"body":{"nodeType":"YulBlock","src":"2535:103:18","statements":[{"body":{"nodeType":"YulBlock","src":"2581:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2590:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2593:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2583:6:18"},"nodeType":"YulFunctionCall","src":"2583:12:18"},"nodeType":"YulExpressionStatement","src":"2583:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2556:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2565:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2552:3:18"},"nodeType":"YulFunctionCall","src":"2552:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2577:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2548:3:18"},"nodeType":"YulFunctionCall","src":"2548:32:18"},"nodeType":"YulIf","src":"2545:52:18"},{"nodeType":"YulAssignment","src":"2606:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2622:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2616:5:18"},"nodeType":"YulFunctionCall","src":"2616:16:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2606:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2501:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2512:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2524:6:18","type":""}],"src":"2454:184:18"},{"body":{"nodeType":"YulBlock","src":"2698:325:18","statements":[{"nodeType":"YulAssignment","src":"2708:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2722:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2725:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2718:3:18"},"nodeType":"YulFunctionCall","src":"2718:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2708:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"2739:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2769:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2765:3:18"},"nodeType":"YulFunctionCall","src":"2765:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2743:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2816:31:18","statements":[{"nodeType":"YulAssignment","src":"2818:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2832:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2840:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2828:3:18"},"nodeType":"YulFunctionCall","src":"2828:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2818:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2796:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2789:6:18"},"nodeType":"YulFunctionCall","src":"2789:26:18"},"nodeType":"YulIf","src":"2786:61:18"},{"body":{"nodeType":"YulBlock","src":"2906:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2927:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2934:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2939:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2930:3:18"},"nodeType":"YulFunctionCall","src":"2930:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2920:6:18"},"nodeType":"YulFunctionCall","src":"2920:31:18"},"nodeType":"YulExpressionStatement","src":"2920:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2971:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2974:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2964:6:18"},"nodeType":"YulFunctionCall","src":"2964:15:18"},"nodeType":"YulExpressionStatement","src":"2964:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2999:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3002:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2992:6:18"},"nodeType":"YulFunctionCall","src":"2992:15:18"},"nodeType":"YulExpressionStatement","src":"2992:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2862:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2885:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2893:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2882:2:18"},"nodeType":"YulFunctionCall","src":"2882:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2859:2:18"},"nodeType":"YulFunctionCall","src":"2859:38:18"},"nodeType":"YulIf","src":"2856:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2678:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2687:6:18","type":""}],"src":"2643:380:18"},{"body":{"nodeType":"YulBlock","src":"3084:65:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3101:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"3104:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3094:6:18"},"nodeType":"YulFunctionCall","src":"3094:14:18"},"nodeType":"YulExpressionStatement","src":"3094:14:18"},{"nodeType":"YulAssignment","src":"3117:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3135:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3138:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3125:9:18"},"nodeType":"YulFunctionCall","src":"3125:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3117:4:18"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3067:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3075:4:18","type":""}],"src":"3028:121:18"},{"body":{"nodeType":"YulBlock","src":"3235:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"3268:425:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3282:11:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3292:1:18","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3286:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3313:2:18"},{"name":"array","nodeType":"YulIdentifier","src":"3317:5:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3306:6:18"},"nodeType":"YulFunctionCall","src":"3306:17:18"},"nodeType":"YulExpressionStatement","src":"3306:17:18"},{"nodeType":"YulVariableDeclaration","src":"3336:31:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3358:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"3362:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3348:9:18"},"nodeType":"YulFunctionCall","src":"3348:19:18"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"3340:4:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3380:57:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3403:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3413:1:18","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3420:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3416:3:18"},"nodeType":"YulFunctionCall","src":"3416:19:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3409:3:18"},"nodeType":"YulFunctionCall","src":"3409:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3399:3:18"},"nodeType":"YulFunctionCall","src":"3399:38:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"3384:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3474:23:18","statements":[{"nodeType":"YulAssignment","src":"3476:19:18","value":{"name":"data","nodeType":"YulIdentifier","src":"3491:4:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3476:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3456:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"3468:4:18","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3453:2:18"},"nodeType":"YulFunctionCall","src":"3453:20:18"},"nodeType":"YulIf","src":"3450:47:18"},{"nodeType":"YulVariableDeclaration","src":"3510:41:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3524:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3534:1:18","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3541:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3546:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3537:3:18"},"nodeType":"YulFunctionCall","src":"3537:12:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3530:3:18"},"nodeType":"YulFunctionCall","src":"3530:20:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3520:3:18"},"nodeType":"YulFunctionCall","src":"3520:31:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3514:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3564:24:18","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"3577:11:18"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"3568:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3662:21:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3671:5:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3678:2:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3664:6:18"},"nodeType":"YulFunctionCall","src":"3664:17:18"},"nodeType":"YulExpressionStatement","src":"3664:17:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3612:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"3619:2:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3609:2:18"},"nodeType":"YulFunctionCall","src":"3609:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3623:26:18","statements":[{"nodeType":"YulAssignment","src":"3625:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3638:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"3645:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:18"},"nodeType":"YulFunctionCall","src":"3634:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3625:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"3605:3:18","statements":[]},"src":"3601:82:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3251:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3256:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3248:2:18"},"nodeType":"YulFunctionCall","src":"3248:11:18"},"nodeType":"YulIf","src":"3245:448:18"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3207:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"3214:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3219:10:18","type":""}],"src":"3154:545:18"},{"body":{"nodeType":"YulBlock","src":"3789:81:18","statements":[{"nodeType":"YulAssignment","src":"3799:65:18","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3814:4:18"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3832:1:18","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"3835:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3828:3:18"},"nodeType":"YulFunctionCall","src":"3828:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3845:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3841:3:18"},"nodeType":"YulFunctionCall","src":"3841:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3824:3:18"},"nodeType":"YulFunctionCall","src":"3824:24:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3820:3:18"},"nodeType":"YulFunctionCall","src":"3820:29:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3810:3:18"},"nodeType":"YulFunctionCall","src":"3810:40:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3856:1:18","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"3859:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3852:3:18"},"nodeType":"YulFunctionCall","src":"3852:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3807:2:18"},"nodeType":"YulFunctionCall","src":"3807:57:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3799:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3766:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"3772:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3780:4:18","type":""}],"src":"3704:166:18"},{"body":{"nodeType":"YulBlock","src":"3971:1256:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3981:24:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4001:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3995:5:18"},"nodeType":"YulFunctionCall","src":"3995:10:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3985:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4048:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4050:16:18"},"nodeType":"YulFunctionCall","src":"4050:18:18"},"nodeType":"YulExpressionStatement","src":"4050:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4020:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4028:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4017:2:18"},"nodeType":"YulFunctionCall","src":"4017:30:18"},"nodeType":"YulIf","src":"4014:56:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4123:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4161:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4155:5:18"},"nodeType":"YulFunctionCall","src":"4155:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4129:25:18"},"nodeType":"YulFunctionCall","src":"4129:38:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"4169:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"4079:43:18"},"nodeType":"YulFunctionCall","src":"4079:97:18"},"nodeType":"YulExpressionStatement","src":"4079:97:18"},{"nodeType":"YulVariableDeclaration","src":"4185:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4202:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4189:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4212:23:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4231:4:18","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"4216:11:18","type":""}]},{"nodeType":"YulAssignment","src":"4244:24:18","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4257:11:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4244:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4314:656:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4328:35:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4347:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4359:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4355:3:18"},"nodeType":"YulFunctionCall","src":"4355:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4343:3:18"},"nodeType":"YulFunctionCall","src":"4343:20:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4332:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4376:49:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4420:4:18"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"4390:29:18"},"nodeType":"YulFunctionCall","src":"4390:35:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4380:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4438:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4447:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4442:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4525:172:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4550:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4568:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4573:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4564:3:18"},"nodeType":"YulFunctionCall","src":"4564:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4558:5:18"},"nodeType":"YulFunctionCall","src":"4558:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4543:6:18"},"nodeType":"YulFunctionCall","src":"4543:42:18"},"nodeType":"YulExpressionStatement","src":"4543:42:18"},{"nodeType":"YulAssignment","src":"4602:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4616:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4624:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4612:3:18"},"nodeType":"YulFunctionCall","src":"4612:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4602:6:18"}]},{"nodeType":"YulAssignment","src":"4643:40:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4660:9:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4671:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:18"},"nodeType":"YulFunctionCall","src":"4656:27:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4643:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4472:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4475:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4469:2:18"},"nodeType":"YulFunctionCall","src":"4469:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4484:28:18","statements":[{"nodeType":"YulAssignment","src":"4486:24:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4495:1:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4498:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4491:3:18"},"nodeType":"YulFunctionCall","src":"4491:19:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4486:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"4465:3:18","statements":[]},"src":"4461:236:18"},{"body":{"nodeType":"YulBlock","src":"4745:166:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4763:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4790:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4795:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4786:3:18"},"nodeType":"YulFunctionCall","src":"4786:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4780:5:18"},"nodeType":"YulFunctionCall","src":"4780:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4767:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4830:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4842:9:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4869:1:18","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"4872:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4865:3:18"},"nodeType":"YulFunctionCall","src":"4865:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"4881:3:18","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4861:3:18"},"nodeType":"YulFunctionCall","src":"4861:24:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4891:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4887:3:18"},"nodeType":"YulFunctionCall","src":"4887:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4857:3:18"},"nodeType":"YulFunctionCall","src":"4857:37:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4853:3:18"},"nodeType":"YulFunctionCall","src":"4853:42:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4838:3:18"},"nodeType":"YulFunctionCall","src":"4838:58:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4823:6:18"},"nodeType":"YulFunctionCall","src":"4823:74:18"},"nodeType":"YulExpressionStatement","src":"4823:74:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4716:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"4725:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4713:2:18"},"nodeType":"YulFunctionCall","src":"4713:19:18"},"nodeType":"YulIf","src":"4710:201:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4931:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4945:1:18","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4948:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4941:3:18"},"nodeType":"YulFunctionCall","src":"4941:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"4957:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4937:3:18"},"nodeType":"YulFunctionCall","src":"4937:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4924:6:18"},"nodeType":"YulFunctionCall","src":"4924:36:18"},"nodeType":"YulExpressionStatement","src":"4924:36:18"}]},"nodeType":"YulCase","src":"4307:663:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4312:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4987:234:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5001:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5014:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5005:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5050:67:18","statements":[{"nodeType":"YulAssignment","src":"5068:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5087:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5092:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5083:3:18"},"nodeType":"YulFunctionCall","src":"5083:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5077:5:18"},"nodeType":"YulFunctionCall","src":"5077:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5068:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5031:6:18"},"nodeType":"YulIf","src":"5028:89:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5137:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5196:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"5203:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5143:52:18"},"nodeType":"YulFunctionCall","src":"5143:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5130:6:18"},"nodeType":"YulFunctionCall","src":"5130:81:18"},"nodeType":"YulExpressionStatement","src":"5130:81:18"}]},"nodeType":"YulCase","src":"4979:242:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4287:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4295:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4284:2:18"},"nodeType":"YulFunctionCall","src":"4284:14:18"},"nodeType":"YulSwitch","src":"4277:944:18"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3956:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"3962:3:18","type":""}],"src":"3875:1352:18"},{"body":{"nodeType":"YulBlock","src":"5280:174:18","statements":[{"nodeType":"YulAssignment","src":"5290:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5301:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"5304:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5297:3:18"},"nodeType":"YulFunctionCall","src":"5297:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5290:3:18"}]},{"body":{"nodeType":"YulBlock","src":"5337:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5358:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5365:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5370:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5361:3:18"},"nodeType":"YulFunctionCall","src":"5361:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5351:6:18"},"nodeType":"YulFunctionCall","src":"5351:31:18"},"nodeType":"YulExpressionStatement","src":"5351:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5402:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5405:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5395:6:18"},"nodeType":"YulFunctionCall","src":"5395:15:18"},"nodeType":"YulExpressionStatement","src":"5395:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5430:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5433:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5423:6:18"},"nodeType":"YulFunctionCall","src":"5423:15:18"},"nodeType":"YulExpressionStatement","src":"5423:15:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5321:1:18"},{"name":"sum","nodeType":"YulIdentifier","src":"5324:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5318:2:18"},"nodeType":"YulFunctionCall","src":"5318:10:18"},"nodeType":"YulIf","src":"5315:133:18"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5263:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"5266:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5272:3:18","type":""}],"src":"5232:222:18"},{"body":{"nodeType":"YulBlock","src":"5540:103:18","statements":[{"body":{"nodeType":"YulBlock","src":"5586:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5595:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5598:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5588:6:18"},"nodeType":"YulFunctionCall","src":"5588:12:18"},"nodeType":"YulExpressionStatement","src":"5588:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5561:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5570:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5557:3:18"},"nodeType":"YulFunctionCall","src":"5557:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5582:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5553:3:18"},"nodeType":"YulFunctionCall","src":"5553:32:18"},"nodeType":"YulIf","src":"5550:52:18"},{"nodeType":"YulAssignment","src":"5611:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5627:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5621:5:18"},"nodeType":"YulFunctionCall","src":"5621:16:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5611:6:18"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5506:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5517:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5529:6:18","type":""}],"src":"5459:184:18"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 64)\n        let length := mload(value1)\n        mstore(add(headStart, 64), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 96), mload(add(add(value1, i), _1)))\n        }\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100615760003560e01c80626d6cae14610066578063330227bf146100825780633c9d54de1461008a578063687440461461009f5780637cd49fde146100c0578063cc80f6f3146100c9575b600080fd5b61006f60015481565b6040519081526020015b60405180910390f35b61006f6100d1565b61009d6100983660046102dd565b61014a565b005b6100b26100ad36600461038e565b6101a5565b6040516100799291906103a7565b61006f60025481565b61006f61024a565b60008054604051639dd4cc5d60e01b81523360048201526001600160a01b0390911690639dd4cc5d906024016020604051808303816000875af115801561011c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014091906103fd565b6001819055919050565b6040805180820182526002548082526020808301858152600092835260039091529290208151815591519091906001820190610186908261049f565b5090505060016002600082825461019d919061055f565b909155505050565b600360205260009081526040902080546001820180549192916101c790610416565b80601f01602080910402602001604051908101604052809291908181526020018280546101f390610416565b80156102405780601f1061021557610100808354040283529160200191610240565b820191906000526020600020905b81548152906001019060200180831161022357829003601f168201915b5050505050905082565b60008060009054906101000a90046001600160a01b03166001600160a01b0316638e0e0abb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561029e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c291906103fd565b905090565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156102ef57600080fd5b813567ffffffffffffffff8082111561030757600080fd5b818401915084601f83011261031b57600080fd5b81358181111561032d5761032d6102c7565b604051601f8201601f19908116603f01168101908382118183101715610355576103556102c7565b8160405282815287602084870101111561036e57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156103a057600080fd5b5035919050565b82815260006020604081840152835180604085015260005b818110156103db578581018301518582016060015282016103bf565b506000606082860101526060601f19601f830116850101925050509392505050565b60006020828403121561040f57600080fd5b5051919050565b600181811c9082168061042a57607f821691505b60208210810361044a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561049a57600081815260208120601f850160051c810160208610156104775750805b601f850160051c820191505b8181101561049657828155600101610483565b5050505b505050565b815167ffffffffffffffff8111156104b9576104b96102c7565b6104cd816104c78454610416565b84610450565b602080601f83116001811461050257600084156104ea5750858301515b600019600386901b1c1916600185901b178555610496565b600085815260208120601f198616915b8281101561053157888601518255948401946001909101908401610512565b508582101561054f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561058057634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212203935f729198904828bf0769e4a36fcc82dfff02e5296ca3ba74f4e5b7657a27464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x61 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x6D6CAE EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x330227BF EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x3C9D54DE EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x68744046 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x7CD49FDE EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xCC80F6F3 EQ PUSH2 0xC9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0xD1 JUMP JUMPDEST PUSH2 0x9D PUSH2 0x98 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DD JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0x38E JUMP JUMPDEST PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP3 SWAP2 SWAP1 PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x6F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x24A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x9DD4CC5D PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x9DD4CC5D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x186 SWAP1 DUP3 PUSH2 0x49F JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x55F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x1C7 SWAP1 PUSH2 0x416 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F3 SWAP1 PUSH2 0x416 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x240 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x215 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x240 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x223 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8E0E0ABB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x3FD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x32D JUMPI PUSH2 0x32D PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x355 JUMPI PUSH2 0x355 PUSH2 0x2C7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x40 DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x60 ADD MSTORE DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x42A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x44A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x477 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x496 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x483 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B9 JUMPI PUSH2 0x4B9 PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x4C7 DUP5 SLOAD PUSH2 0x416 JUMP JUMPDEST DUP5 PUSH2 0x450 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x502 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4EA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x496 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x531 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x512 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x54F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x580 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY CALLDATALOAD 0xF7 0x29 NOT DUP10 DIV DUP3 DUP12 CREATE PUSH23 0x9E4A36FCC82DFFF02E5296CA3BA74F4E5B7657A2746473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"224:1157:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;327:24;;;;;;;;;160:25:18;;;148:2;133:18;327:24:14;;;;;;;;892:192;;;:::i;548:165::-;;;;;;:::i;:::-;;:::i;:::-;;457:37;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;358:23::-;;;;;;1268:111;;;:::i;892:192::-;934:7;981:12;;967:84;;-1:-1:-1;;;967:84:14;;1030:10;967:84;;;2392:51:18;-1:-1:-1;;;;;981:12:14;;;;967:39;;2365:18:18;;967:84:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;954:9;953:98;;;;892:192;-1:-1:-1;892:192:14:o;548:165::-;626:59;;;;;;;;644:8;;626:59;;;;;;;;;;-1:-1:-1;608:15:14;;;:5;:15;;;;;;:77;;;;;;626:59;;608:15;:77;;;;;;;;:::i;:::-;;;;;705:1;695:8;;:11;;;;;;;:::i;:::-;;;;-1:-1:-1;;;548:165:14:o;457:37::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1268:111::-;1307:7;1347:12;;;;;;;;;-1:-1:-1;;;;;1347:12:14;-1:-1:-1;;;;;1333:37:14;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1326:46;;1268:111;:::o;196:127:18:-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:922;397:6;450:2;438:9;429:7;425:23;421:32;418:52;;;466:1;463;456:12;418:52;506:9;493:23;535:18;576:2;568:6;565:14;562:34;;;592:1;589;582:12;562:34;630:6;619:9;615:22;605:32;;675:7;668:4;664:2;660:13;656:27;646:55;;697:1;694;687:12;646:55;733:2;720:16;755:2;751;748:10;745:36;;;761:18;;:::i;:::-;836:2;830:9;804:2;890:13;;-1:-1:-1;;886:22:18;;;910:2;882:31;878:40;866:53;;;934:18;;;954:22;;;931:46;928:72;;;980:18;;:::i;:::-;1020:10;1016:2;1009:22;1055:2;1047:6;1040:18;1095:7;1090:2;1085;1081;1077:11;1073:20;1070:33;1067:53;;;1116:1;1113;1106:12;1067:53;1172:2;1167;1163;1159:11;1154:2;1146:6;1142:15;1129:46;1217:1;1195:15;;;1212:2;1191:24;1184:35;;;;-1:-1:-1;1199:6:18;328:922;-1:-1:-1;;;;;328:922:18:o;1255:180::-;1314:6;1367:2;1355:9;1346:7;1342:23;1338:32;1335:52;;;1383:1;1380;1373:12;1335:52;-1:-1:-1;1406:23:18;;1255:180;-1:-1:-1;1255:180:18:o;1440:619::-;1617:6;1606:9;1599:25;1580:4;1643:2;1681;1676;1665:9;1661:18;1654:30;1713:6;1707:13;1756:6;1751:2;1740:9;1736:18;1729:34;1781:1;1791:140;1805:6;1802:1;1799:13;1791:140;;;1900:14;;;1896:23;;1890:30;1866:17;;;1885:2;1862:26;1855:66;1820:10;;1791:140;;;1795:3;1980:1;1975:2;1966:6;1955:9;1951:22;1947:31;1940:42;2050:2;2043;2039:7;2034:2;2026:6;2022:15;2018:29;2007:9;2003:45;1999:54;1991:62;;;;1440:619;;;;;:::o;2454:184::-;2524:6;2577:2;2565:9;2556:7;2552:23;2548:32;2545:52;;;2593:1;2590;2583:12;2545:52;-1:-1:-1;2616:16:18;;2454:184;-1:-1:-1;2454:184:18:o;2643:380::-;2722:1;2718:12;;;;2765;;;2786:61;;2840:4;2832:6;2828:17;2818:27;;2786:61;2893:2;2885:6;2882:14;2862:18;2859:38;2856:161;;2939:10;2934:3;2930:20;2927:1;2920:31;2974:4;2971:1;2964:15;3002:4;2999:1;2992:15;2856:161;;2643:380;;;:::o;3154:545::-;3256:2;3251:3;3248:11;3245:448;;;3292:1;3317:5;3313:2;3306:17;3362:4;3358:2;3348:19;3432:2;3420:10;3416:19;3413:1;3409:27;3403:4;3399:38;3468:4;3456:10;3453:20;3450:47;;;-1:-1:-1;3491:4:18;3450:47;3546:2;3541:3;3537:12;3534:1;3530:20;3524:4;3520:31;3510:41;;3601:82;3619:2;3612:5;3609:13;3601:82;;;3664:17;;;3645:1;3634:13;3601:82;;;3605:3;;;3245:448;3154:545;;;:::o;3875:1352::-;4001:3;3995:10;4028:18;4020:6;4017:30;4014:56;;;4050:18;;:::i;:::-;4079:97;4169:6;4129:38;4161:4;4155:11;4129:38;:::i;:::-;4123:4;4079:97;:::i;:::-;4231:4;;4295:2;4284:14;;4312:1;4307:663;;;;5014:1;5031:6;5028:89;;;-1:-1:-1;5083:19:18;;;5077:26;5028:89;-1:-1:-1;;3832:1:18;3828:11;;;3824:24;3820:29;3810:40;3856:1;3852:11;;;3807:57;5130:81;;4277:944;;4307:663;3101:1;3094:14;;;3138:4;3125:18;;-1:-1:-1;;4343:20:18;;;4461:236;4475:7;4472:1;4469:14;4461:236;;;4564:19;;;4558:26;4543:42;;4656:27;;;;4624:1;4612:14;;;;4491:19;;4461:236;;;4465:3;4725:6;4716:7;4713:19;4710:201;;;4786:19;;;4780:26;-1:-1:-1;;4869:1:18;4865:14;;;4881:3;4861:24;4857:37;4853:42;4838:58;4823:74;;4710:201;-1:-1:-1;;;;;4957:1:18;4941:14;;;4937:22;4924:36;;-1:-1:-1;3875:1352:18:o;5232:222::-;5297:9;;;5318:10;;;5315:133;;;5370:10;5365:3;5361:20;5358:1;5351:31;5405:4;5402:1;5395:15;5433:4;5430:1;5423:15;5315:133;5232:222;;;;:::o"},"methodIdentifiers":{"_counter()":"7cd49fde","addBooks(string)":"3c9d54de","books(uint256)":"68744046","getPriceInfo()":"330227bf","requestId()":"006d6cae","show()":"cc80f6f3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_bookName\",\"type\":\"string\"}],\"name\":\"addBooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"books\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"bookName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceInfo\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"show\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CustomerContract.sol\":\"CustomerContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CustomerContract.sol\":{\"keccak256\":\"0xb9d8e90f933c2130aee9b869213cd075af8e1ab4e7e22a520469df28779a5798\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4256f1135f0937f07fa7dbdfed0d18ee9d8cf2cd240e31fd10e52304d8a3d8b2\",\"dweb:/ipfs/QmWKnhtMgXQqjyHqkgCk9H2zGNKTTCQVwcZYfLnHKkhXEo\"]}},\"version\":1}"},"IInvokeOracle":{"abi":[{"inputs":[{"internalType":"address","name":"_caller","type":"address"}],"name":"requestData","outputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"showPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"requestData(address)":"9dd4cc5d","showPrice()":"8e0e0abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"requestData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CustomerContract.sol\":\"IInvokeOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CustomerContract.sol\":{\"keccak256\":\"0xb9d8e90f933c2130aee9b869213cd075af8e1ab4e7e22a520469df28779a5798\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4256f1135f0937f07fa7dbdfed0d18ee9d8cf2cd240e31fd10e52304d8a3d8b2\",\"dweb:/ipfs/QmWKnhtMgXQqjyHqkgCk9H2zGNKTTCQVwcZYfLnHKkhXEo\"]}},\"version\":1}"}},"contracts/UDex.sol":{"UDex":{"abi":[{"inputs":[{"internalType":"address","name":"priceFeed","type":"address"},{"internalType":"contract IERC20","name":"_xdc","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxDeposit","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxMint","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxRedeem","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxWithdraw","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[],"name":"UDex__BreaksHealthFactor","type":"error"},{"inputs":[],"name":"UDex__ErrorInsufficientCollateral","type":"error"},{"inputs":[],"name":"UDex__ErrorSize","type":"error"},{"inputs":[],"name":"UDex__InsufficientPositionCollateral","type":"error"},{"inputs":[],"name":"UDex__PositionAlreadyExist","type":"error"},{"inputs":[],"name":"UDex__PositionDoesNotExist","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"collateralDecreased","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sizeDecreased","type":"uint256"}],"name":"PositionDecreased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bool","name":"isLong","type":"bool"},{"indexed":false,"internalType":"uint256","name":"collateral","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"size","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"xdcAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"avgXdcPrice","type":"uint256"}],"name":"PositionOpened","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"MAX_LEVARAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getPosition","outputs":[{"components":[{"internalType":"uint256","name":"collateral","type":"uint256"},{"internalType":"uint256","name":"avgXdcPrice","type":"uint256"},{"internalType":"uint256","name":"xdcAmount","type":"uint256"},{"internalType":"bool","name":"isLong","type":"bool"},{"internalType":"uint256","name":"lastChangeTimestamp","type":"uint256"}],"internalType":"struct UDex.Position","name":"position","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"currentXDCPrice","type":"uint256"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTradersPnL","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"currentXDCPrice","type":"uint256"}],"name":"getUsdtValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_xdc","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"uint256","name":"collateral","type":"uint256"},{"internalType":"uint256","name":"currentXDCPrice","type":"uint256"},{"internalType":"bool","name":"isLong","type":"bool"}],"name":"openPosition","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_totalLiquidityDeposited","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradersCollateral","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"isTrue","type":"bool"}],"name":"tryfunction","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1135":{"entryPoint":null,"id":1135,"parameterSlots":1,"returnSlots":0},"@_2381":{"entryPoint":null,"id":2381,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_506":{"entryPoint":null,"id":506,"parameterSlots":2,"returnSlots":0},"@_5449":{"entryPoint":null,"id":5449,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":512,"id":146,"parameterSlots":1,"returnSlots":0},"@_tryGetAssetDecimals_1202":{"entryPoint":283,"id":1202,"parameterSlots":1,"returnSlots":2},"abi_decode_tuple_t_addresst_contract$_IERC20_$1047_fromMemory":{"entryPoint":619,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1100,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1051,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":764,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":847,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":704,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":682,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":594,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4087:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:18"},"nodeType":"YulFunctionCall","src":"125:12:18"},"nodeType":"YulExpressionStatement","src":"125:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"113:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"104:3:18"},"nodeType":"YulFunctionCall","src":"104:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"117:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:18"},"nodeType":"YulFunctionCall","src":"100:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:18"},"nodeType":"YulFunctionCall","src":"89:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:18"},"nodeType":"YulFunctionCall","src":"79:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:18"},"nodeType":"YulFunctionCall","src":"72:50:18"},"nodeType":"YulIf","src":"69:70:18"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:18","type":""}],"src":"14:131:18"},{"body":{"nodeType":"YulBlock","src":"263:287:18","statements":[{"body":{"nodeType":"YulBlock","src":"309:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"318:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"321:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"311:6:18"},"nodeType":"YulFunctionCall","src":"311:12:18"},"nodeType":"YulExpressionStatement","src":"311:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"284:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"293:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"280:3:18"},"nodeType":"YulFunctionCall","src":"280:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"305:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"276:3:18"},"nodeType":"YulFunctionCall","src":"276:32:18"},"nodeType":"YulIf","src":"273:52:18"},{"nodeType":"YulVariableDeclaration","src":"334:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"353:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"347:5:18"},"nodeType":"YulFunctionCall","src":"347:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"338:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"397:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"372:24:18"},"nodeType":"YulFunctionCall","src":"372:31:18"},"nodeType":"YulExpressionStatement","src":"372:31:18"},{"nodeType":"YulAssignment","src":"412:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"422:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"412:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"436:40:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"461:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"472:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"457:3:18"},"nodeType":"YulFunctionCall","src":"457:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"451:5:18"},"nodeType":"YulFunctionCall","src":"451:25:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"440:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"510:7:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"485:24:18"},"nodeType":"YulFunctionCall","src":"485:33:18"},"nodeType":"YulExpressionStatement","src":"485:33:18"},{"nodeType":"YulAssignment","src":"527:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"537:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"527:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_contract$_IERC20_$1047_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"221:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"232:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"244:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"252:6:18","type":""}],"src":"150:400:18"},{"body":{"nodeType":"YulBlock","src":"587:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"611:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"616:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"607:3:18"},"nodeType":"YulFunctionCall","src":"607:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:18"},"nodeType":"YulFunctionCall","src":"597:31:18"},"nodeType":"YulExpressionStatement","src":"597:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"644:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"647:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"637:6:18"},"nodeType":"YulFunctionCall","src":"637:15:18"},"nodeType":"YulExpressionStatement","src":"637:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"668:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"671:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"661:6:18"},"nodeType":"YulFunctionCall","src":"661:15:18"},"nodeType":"YulExpressionStatement","src":"661:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"555:127:18"},{"body":{"nodeType":"YulBlock","src":"742:325:18","statements":[{"nodeType":"YulAssignment","src":"752:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"766:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"769:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"762:3:18"},"nodeType":"YulFunctionCall","src":"762:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"752:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"783:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"813:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"819:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"809:3:18"},"nodeType":"YulFunctionCall","src":"809:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"787:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"860:31:18","statements":[{"nodeType":"YulAssignment","src":"862:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"876:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"884:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"872:3:18"},"nodeType":"YulFunctionCall","src":"872:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"862:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"840:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"833:6:18"},"nodeType":"YulFunctionCall","src":"833:26:18"},"nodeType":"YulIf","src":"830:61:18"},{"body":{"nodeType":"YulBlock","src":"950:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"978:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"983:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"974:3:18"},"nodeType":"YulFunctionCall","src":"974:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"964:6:18"},"nodeType":"YulFunctionCall","src":"964:31:18"},"nodeType":"YulExpressionStatement","src":"964:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1015:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1018:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1008:6:18"},"nodeType":"YulFunctionCall","src":"1008:15:18"},"nodeType":"YulExpressionStatement","src":"1008:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1043:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1046:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1036:6:18"},"nodeType":"YulFunctionCall","src":"1036:15:18"},"nodeType":"YulExpressionStatement","src":"1036:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"906:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"929:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"937:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"926:2:18"},"nodeType":"YulFunctionCall","src":"926:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"903:2:18"},"nodeType":"YulFunctionCall","src":"903:38:18"},"nodeType":"YulIf","src":"900:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"722:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"731:6:18","type":""}],"src":"687:380:18"},{"body":{"nodeType":"YulBlock","src":"1128:65:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1145:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1148:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1138:6:18"},"nodeType":"YulFunctionCall","src":"1138:14:18"},"nodeType":"YulExpressionStatement","src":"1138:14:18"},{"nodeType":"YulAssignment","src":"1161:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1179:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1182:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1169:9:18"},"nodeType":"YulFunctionCall","src":"1169:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1161:4:18"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1111:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1119:4:18","type":""}],"src":"1072:121:18"},{"body":{"nodeType":"YulBlock","src":"1279:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"1312:425:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1326:11:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1336:1:18","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1330:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1357:2:18"},{"name":"array","nodeType":"YulIdentifier","src":"1361:5:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1350:6:18"},"nodeType":"YulFunctionCall","src":"1350:17:18"},"nodeType":"YulExpressionStatement","src":"1350:17:18"},{"nodeType":"YulVariableDeclaration","src":"1380:31:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1402:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"1406:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1392:9:18"},"nodeType":"YulFunctionCall","src":"1392:19:18"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1384:4:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1424:57:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1447:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1457:1:18","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1464:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"1476:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1460:3:18"},"nodeType":"YulFunctionCall","src":"1460:19:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1453:3:18"},"nodeType":"YulFunctionCall","src":"1453:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1443:3:18"},"nodeType":"YulFunctionCall","src":"1443:38:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1428:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1518:23:18","statements":[{"nodeType":"YulAssignment","src":"1520:19:18","value":{"name":"data","nodeType":"YulIdentifier","src":"1535:4:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1520:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1500:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"1512:4:18","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1497:2:18"},"nodeType":"YulFunctionCall","src":"1497:20:18"},"nodeType":"YulIf","src":"1494:47:18"},{"nodeType":"YulVariableDeclaration","src":"1554:41:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1568:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1578:1:18","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1585:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"1590:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1581:3:18"},"nodeType":"YulFunctionCall","src":"1581:12:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1574:3:18"},"nodeType":"YulFunctionCall","src":"1574:20:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1564:3:18"},"nodeType":"YulFunctionCall","src":"1564:31:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1558:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1608:24:18","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1621:11:18"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1612:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1706:21:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1715:5:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1722:2:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1708:6:18"},"nodeType":"YulFunctionCall","src":"1708:17:18"},"nodeType":"YulExpressionStatement","src":"1708:17:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1656:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"1663:2:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1653:2:18"},"nodeType":"YulFunctionCall","src":"1653:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1667:26:18","statements":[{"nodeType":"YulAssignment","src":"1669:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1682:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1689:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1678:3:18"},"nodeType":"YulFunctionCall","src":"1678:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1669:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1649:3:18","statements":[]},"src":"1645:82:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1295:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"1300:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1292:2:18"},"nodeType":"YulFunctionCall","src":"1292:11:18"},"nodeType":"YulIf","src":"1289:448:18"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1251:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"1258:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1263:10:18","type":""}],"src":"1198:545:18"},{"body":{"nodeType":"YulBlock","src":"1833:81:18","statements":[{"nodeType":"YulAssignment","src":"1843:65:18","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1858:4:18"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1876:1:18","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1879:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1872:3:18"},"nodeType":"YulFunctionCall","src":"1872:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1889:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1885:3:18"},"nodeType":"YulFunctionCall","src":"1885:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1868:3:18"},"nodeType":"YulFunctionCall","src":"1868:24:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1864:3:18"},"nodeType":"YulFunctionCall","src":"1864:29:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1854:3:18"},"nodeType":"YulFunctionCall","src":"1854:40:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1900:1:18","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1903:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1896:3:18"},"nodeType":"YulFunctionCall","src":"1896:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1851:2:18"},"nodeType":"YulFunctionCall","src":"1851:57:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1843:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1810:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"1816:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1824:4:18","type":""}],"src":"1748:166:18"},{"body":{"nodeType":"YulBlock","src":"2015:1256:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2025:24:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2045:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2039:5:18"},"nodeType":"YulFunctionCall","src":"2039:10:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2029:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2092:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2094:16:18"},"nodeType":"YulFunctionCall","src":"2094:18:18"},"nodeType":"YulExpressionStatement","src":"2094:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2064:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2080:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2084:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2076:3:18"},"nodeType":"YulFunctionCall","src":"2076:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"2088:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2072:3:18"},"nodeType":"YulFunctionCall","src":"2072:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2061:2:18"},"nodeType":"YulFunctionCall","src":"2061:30:18"},"nodeType":"YulIf","src":"2058:56:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2167:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2205:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2199:5:18"},"nodeType":"YulFunctionCall","src":"2199:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"2173:25:18"},"nodeType":"YulFunctionCall","src":"2173:38:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"2213:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2123:43:18"},"nodeType":"YulFunctionCall","src":"2123:97:18"},"nodeType":"YulExpressionStatement","src":"2123:97:18"},{"nodeType":"YulVariableDeclaration","src":"2229:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2246:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"2233:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2256:23:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2275:4:18","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2260:11:18","type":""}]},{"nodeType":"YulAssignment","src":"2288:24:18","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2301:11:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2288:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2358:656:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2372:35:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2391:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2403:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2399:3:18"},"nodeType":"YulFunctionCall","src":"2399:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2387:3:18"},"nodeType":"YulFunctionCall","src":"2387:20:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2376:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2420:49:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2464:4:18"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"2434:29:18"},"nodeType":"YulFunctionCall","src":"2434:35:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2424:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2482:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2491:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2486:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2569:172:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2594:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2612:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2617:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2608:3:18"},"nodeType":"YulFunctionCall","src":"2608:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2602:5:18"},"nodeType":"YulFunctionCall","src":"2602:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2587:6:18"},"nodeType":"YulFunctionCall","src":"2587:42:18"},"nodeType":"YulExpressionStatement","src":"2587:42:18"},{"nodeType":"YulAssignment","src":"2646:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2660:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2668:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2656:3:18"},"nodeType":"YulFunctionCall","src":"2656:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2646:6:18"}]},{"nodeType":"YulAssignment","src":"2687:40:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2704:9:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2715:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2700:3:18"},"nodeType":"YulFunctionCall","src":"2700:27:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2687:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2516:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2519:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2513:2:18"},"nodeType":"YulFunctionCall","src":"2513:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2528:28:18","statements":[{"nodeType":"YulAssignment","src":"2530:24:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2539:1:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2542:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2535:3:18"},"nodeType":"YulFunctionCall","src":"2535:19:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2530:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"2509:3:18","statements":[]},"src":"2505:236:18"},{"body":{"nodeType":"YulBlock","src":"2789:166:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2807:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2834:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2839:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2830:3:18"},"nodeType":"YulFunctionCall","src":"2830:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2824:5:18"},"nodeType":"YulFunctionCall","src":"2824:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2811:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2874:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2886:9:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2913:1:18","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2916:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2909:3:18"},"nodeType":"YulFunctionCall","src":"2909:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"2925:3:18","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2905:3:18"},"nodeType":"YulFunctionCall","src":"2905:24:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2935:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2931:3:18"},"nodeType":"YulFunctionCall","src":"2931:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2901:3:18"},"nodeType":"YulFunctionCall","src":"2901:37:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2897:3:18"},"nodeType":"YulFunctionCall","src":"2897:42:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2882:3:18"},"nodeType":"YulFunctionCall","src":"2882:58:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2867:6:18"},"nodeType":"YulFunctionCall","src":"2867:74:18"},"nodeType":"YulExpressionStatement","src":"2867:74:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2760:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"2769:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2757:2:18"},"nodeType":"YulFunctionCall","src":"2757:19:18"},"nodeType":"YulIf","src":"2754:201:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2975:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2989:1:18","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2992:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2985:3:18"},"nodeType":"YulFunctionCall","src":"2985:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"3001:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2981:3:18"},"nodeType":"YulFunctionCall","src":"2981:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2968:6:18"},"nodeType":"YulFunctionCall","src":"2968:36:18"},"nodeType":"YulExpressionStatement","src":"2968:36:18"}]},"nodeType":"YulCase","src":"2351:663:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2356:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3031:234:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3045:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3058:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3049:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3094:67:18","statements":[{"nodeType":"YulAssignment","src":"3112:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3131:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3136:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3127:3:18"},"nodeType":"YulFunctionCall","src":"3127:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3121:5:18"},"nodeType":"YulFunctionCall","src":"3121:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3112:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3075:6:18"},"nodeType":"YulIf","src":"3072:89:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3181:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3240:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"3247:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"3187:52:18"},"nodeType":"YulFunctionCall","src":"3187:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3174:6:18"},"nodeType":"YulFunctionCall","src":"3174:81:18"},"nodeType":"YulExpressionStatement","src":"3174:81:18"}]},"nodeType":"YulCase","src":"3023:242:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2331:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2339:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2328:2:18"},"nodeType":"YulFunctionCall","src":"2328:14:18"},"nodeType":"YulSwitch","src":"2321:944:18"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2000:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"2006:3:18","type":""}],"src":"1919:1352:18"},{"body":{"nodeType":"YulBlock","src":"3377:102:18","statements":[{"nodeType":"YulAssignment","src":"3387:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3399:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3410:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3395:3:18"},"nodeType":"YulFunctionCall","src":"3395:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3387:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3429:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3444:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3460:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3465:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3456:3:18"},"nodeType":"YulFunctionCall","src":"3456:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"3469:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3452:3:18"},"nodeType":"YulFunctionCall","src":"3452:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3440:3:18"},"nodeType":"YulFunctionCall","src":"3440:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3422:6:18"},"nodeType":"YulFunctionCall","src":"3422:51:18"},"nodeType":"YulExpressionStatement","src":"3422:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3346:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3357:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3368:4:18","type":""}],"src":"3276:203:18"},{"body":{"nodeType":"YulBlock","src":"3621:275:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3631:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3651:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3645:5:18"},"nodeType":"YulFunctionCall","src":"3645:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3635:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3667:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3676:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3671:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3738:77:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3763:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"3768:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3759:3:18"},"nodeType":"YulFunctionCall","src":"3759:11:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3786:6:18"},{"name":"i","nodeType":"YulIdentifier","src":"3794:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3782:3:18"},"nodeType":"YulFunctionCall","src":"3782:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"3798:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3778:3:18"},"nodeType":"YulFunctionCall","src":"3778:25:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3772:5:18"},"nodeType":"YulFunctionCall","src":"3772:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3752:6:18"},"nodeType":"YulFunctionCall","src":"3752:53:18"},"nodeType":"YulExpressionStatement","src":"3752:53:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3697:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"3700:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3694:2:18"},"nodeType":"YulFunctionCall","src":"3694:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3708:21:18","statements":[{"nodeType":"YulAssignment","src":"3710:17:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3719:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"3722:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3715:3:18"},"nodeType":"YulFunctionCall","src":"3715:12:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3710:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"3690:3:18","statements":[]},"src":"3686:129:18"},{"nodeType":"YulVariableDeclaration","src":"3824:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3838:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"3843:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3834:3:18"},"nodeType":"YulFunctionCall","src":"3834:16:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3828:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3866:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"3870:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:18"},"nodeType":"YulFunctionCall","src":"3859:13:18"},"nodeType":"YulExpressionStatement","src":"3859:13:18"},{"nodeType":"YulAssignment","src":"3881:9:18","value":{"name":"_1","nodeType":"YulIdentifier","src":"3888:2:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3881:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3597:3:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3602:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3613:3:18","type":""}],"src":"3484:412:18"},{"body":{"nodeType":"YulBlock","src":"3982:103:18","statements":[{"body":{"nodeType":"YulBlock","src":"4028:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4037:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4040:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4030:6:18"},"nodeType":"YulFunctionCall","src":"4030:12:18"},"nodeType":"YulExpressionStatement","src":"4030:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4003:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4012:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3999:3:18"},"nodeType":"YulFunctionCall","src":"3999:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4024:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3995:3:18"},"nodeType":"YulFunctionCall","src":"3995:32:18"},"nodeType":"YulIf","src":"3992:52:18"},{"nodeType":"YulAssignment","src":"4053:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4069:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4063:5:18"},"nodeType":"YulFunctionCall","src":"4063:16:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4053:6:18"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3948:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3959:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3971:6:18","type":""}],"src":"3901:184:18"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$1047_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e06040523480156200001157600080fd5b50604051620022343803806200223483398101604081905262000034916200026b565b3381604051806040016040528060048152602001630aa88caf60e31b815250604051806040016040528060038152602001620aa88b60eb1b81525081600390816200008091906200034f565b5060046200008f82826200034f565b505050600080620000a6836200011b60201b60201c565b9150915081620000b8576012620000ba565b805b60ff1660a05250506001600160a01b039081166080528116620000f757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620001028162000200565b5060016006556001600160a01b031660c0525062000466565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000918291829182916001600160a01b0387169162000164916200041b565b600060405180830381855afa9150503d8060008114620001a1576040519150601f19603f3d011682016040523d82523d6000602084013e620001a6565b606091505b5091509150818015620001bb57506020815110155b15620001f357600081806020019051810190620001d991906200044c565b905060ff8111620001f1576001969095509350505050565b505b5060009485945092505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811681146200026857600080fd5b50565b600080604083850312156200027f57600080fd5b82516200028c8162000252565b60208401519092506200029f8162000252565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002d557607f821691505b602082108103620002f657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200034a57600081815260208120601f850160051c81016020861015620003255750805b601f850160051c820191505b81811015620003465782815560010162000331565b5050505b505050565b81516001600160401b038111156200036b576200036b620002aa565b62000383816200037c8454620002c0565b84620002fc565b602080601f831160018114620003bb5760008415620003a25750858301515b600019600386901b1c1916600185901b17855562000346565b600085815260208120601f198616915b82811015620003ec57888601518255948401946001909101908401620003cb565b50858210156200040b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825160005b818110156200043e576020818601810151858301520162000422565b506000920191825250919050565b6000602082840312156200045f57600080fd5b5051919050565b60805160a05160c051611d82620004b2600039600081816103fa0152610aa4015260006107e701526000818161036201528181610c4c0152818161139201526114440152611d826000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80638da5cb5b11610130578063c6e6f592116100b8578063dd5b2f521161007c578063dd5b2f52146104fc578063dd62ed3e14610505578063e75722301461053e578063ef8b30f71461049c578063f2fde38b1461054f57600080fd5b8063c6e6f5921461049c578063cc265da9146104af578063ce96cb77146104c3578063d4d5c230146104d6578063d905777e146104e957600080fd5b8063a9059cbb116100ff578063a9059cbb14610450578063b3d7f6b914610463578063b460af9414610476578063ba08765214610489578063c63d75b61461039a57600080fd5b80638da5cb5b1461041c57806394bf804d1461042d57806395d89b41146104405780639f0066511461044857600080fd5b806323b872dd116101be5780634cdad506116101825780634cdad506146102705780636e553f65146103af57806370a08231146103c2578063715018a6146103eb578063798cd94c146103f557600080fd5b806323b872dd1461032b5780632bdb4e731461033e578063313ce5671461034657806338d52e0f14610360578063402d267d1461039a57600080fd5b8063095ea7b311610205578063095ea7b3146102835780630a28a477146102a6578063169fffe2146102b957806316c19739146102cc57806318160ddd1461032357600080fd5b806301e1d114146102375780630258d92a1461025257806306fdde031461025b57806307a2d13a14610270575b600080fd5b61023f610562565b6040519081526020015b60405180910390f35b61023f600e5481565b6102636105cf565b6040516102499190611844565b61023f61027e366004611877565b610661565b6102966102913660046118ac565b610674565b6040519015158152602001610249565b61023f6102b4366004611877565b61068c565b61023f6102c73660046118d6565b610699565b6102df6102da3660046118f8565b6106b0565b6040516102499190600060a0820190508251825260208301516020830152604083015160408301526060830151151560608301526080830151608083015292915050565b60025461023f565b610296610339366004611913565b6107b9565b61023f600f81565b61034e6107df565b60405160ff9091168152602001610249565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610249565b61023f6103a83660046118f8565b5060001990565b61023f6103bd36600461194f565b610810565b61023f6103d03660046118f8565b6001600160a01b031660009081526020819052604090205490565b6103f3610848565b005b6103827f000000000000000000000000000000000000000000000000000000000000000081565b6005546001600160a01b0316610382565b61023f61043b36600461194f565b61085c565b610263610893565b61023f6108a2565b61029661045e3660046118ac565b610928565b61023f610471366004611877565b610936565b61023f61048436600461197b565b610943565b61023f61049736600461197b565b61097c565b61023f6104aa366004611877565b6109b4565b6102966104bd3660046119c5565b50600190565b61023f6104d13660046118f8565b6109c1565b6103f36104e43660046119e2565b6109e5565b61023f6104f73660046118f8565b610ba9565b61023f600c5481565b61023f610513366004611a23565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61023f61054c366004611877565b90565b6103f361055d3660046118f8565b610bc7565b60008061056d6108a2565b905060008113156105a657600c5461058482610c0a565b61058c610c34565b6105969190611a63565b6105a09190611a63565b91505090565b6105af81611a76565b9050600c546105bd82610c0a565b6105c5610c34565b6105969190611a92565b6060600380546105de90611aa5565b80601f016020809104026020016040519081016040528092919081815260200182805461060a90611aa5565b80156106575780601f1061062c57610100808354040283529160200191610657565b820191906000526020600020905b81548152906001019060200180831161063a57829003601f168201915b5050505050905090565b600061066e826000610cbf565b92915050565b600033610682818585610cf9565b5060019392505050565b600061066e826001610d0b565b600081816106a78583611adf565b95945050505050565b6106e46040518060a00160405280600081526020016000815260200160008152602001600015158152602001600081525090565b6001600160a01b0382166000908152600b60209081526040808320815160a0810183528154808252600183015494820194909452600282015492810192909252600381015460ff1615156060830152600401546080820152910361075b57604051632f4cb18560e21b815260040160405180910390fd5b50506001600160a01b03166000908152600b6020908152604091829020825160a08101845281548152600182015492810192909252600281015492820192909252600382015460ff1615156060820152600490910154608082015290565b6000336107c7858285610d3b565b6107d2858585610da6565b60019150505b9392505050565b600061080b817f0000000000000000000000000000000000000000000000000000000000000000611af6565b905090565b600061081a610e05565b600083600e5461082a9190611a92565b90506108368484610e2f565b600e91909155905061066e6001600655565b610850610e55565b61085a6000610e82565b565b6000610866610e05565b6108708383610ed4565b905080600e60008282546108849190611a92565b9091555050600160065561066e565b6060600480546105de90611aa5565b6000806108b3600760000154610ef2565b6108cb6108c66007600101546001610699565b610ef2565b6108d59190611b0f565b905060006108ec6108c66009600101546001610699565b6009546108f890610ef2565b6109029190611b0f565b9050670de0b6b3a76400006109178383611b36565b6109219190611b6c565b9250505090565b600033610682818585610da6565b600061066e826001610cbf565b600061094d610e05565b600084600e5461095d9190611a63565b905061096a858585610f1f565b600e9190915590506107d86001600655565b6000610986610e05565b610991848484610f6e565b905080600e60008282546109a59190611a63565b909155505060016006556107d8565b600061066e826000610d0b565b6001600160a01b03811660009081526020819052604081205461066e906000610cbf565b60008311610a0657604051637b92cb4360e01b815260040160405180910390fd5b60008411610a275760405163062a73c560e41b815260040160405180910390fd5b336000908152600b602052604090205415610a5557604051630c7b567d60e31b815260040160405180910390fd5b60006040518060a001604052808581526020018481526020018487610a7a9190611b9a565b81526020018315158152602001428152509050610a978184610fbd565b610acc6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333087611072565b8051600c8054600090610ae0908490611a92565b9091555050336000908152600b6020908152604091829020835181559083015160018201559082015160028201819055606083015160038301805460ff19169115159190911790556080830151600490920191909155610b42908690846110d9565b606081810151604080840151602080860151835194151585529084018a9052838301899052938301526080820192909252905133917f0e8f4b81343afa64bc4ddcfbf2d80e883e0ddfc6663c400ca09da13d1d28d588919081900360a00190a25050505050565b6001600160a01b03811660009081526020819052604081205461066e565b610bcf610e55565b6001600160a01b038116610bfe57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610c0781610e82565b50565b600080821215610c3057604051635467221960e11b815260048101839052602401610bf5565b5090565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610c9b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080b9190611bae565b60006107d8610ccc610562565b610cd7906001611a92565b610ce36000600a611cab565b600254610cf09190611a92565b85919085611152565b610d0683838360016111a1565b505050565b60006107d8610d1b82600a611cab565b600254610d289190611a92565b610d30610562565b610cf0906001611a92565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610da05781811015610d9157828183604051637dc7a0d960e11b8152600401610bf593929190611cba565b610da0848484840360006111a1565b50505050565b6001600160a01b038316610dd057604051634b637e8f60e11b815260006004820152602401610bf5565b6001600160a01b038216610dfa5760405163ec442f0560e01b815260006004820152602401610bf5565b610d06838383611276565b600260065403610e2857604051633ee5aeb560e01b815260040160405180910390fd5b6002600655565b60006000196000610e3f856109b4565b9050610e4d3385878461138d565b949350505050565b6005546001600160a01b0316331461085a5760405163118cdaa760e01b8152336004820152602401610bf5565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006000196000610ee485610936565b9050610e4d3385838861138d565b60006001600160ff1b03821115610c305760405163123baf0360e11b815260048101839052602401610bf5565b600080610f2b836109c1565b905080851115610f5457828582604051633fa733bb60e21b8152600401610bf593929190611cba565b6000610f5f8661068c565b90506106a73386868985611411565b600080610f7a83610ba9565b905080851115610fa357828582604051632e52afbb60e21b8152600401610bf593929190611cba565b6000610fae86610661565b90506106a7338686848a611411565b6000610fc983836114d1565b9050600081610fdb8560000151610ef2565b610fe59190611b36565b13611003576040516327ad135d60e11b815260040160405180910390fd5b6000611025826110168660000151610ef2565b6110209190611b36565b610c0a565b90506000818560200151866040015161103e9190611adf565b6110489190611b9a565b9050600f811061106b57604051633e5ff32760e21b815260040160405180910390fd5b5050505050565b6040516001600160a01b038481166024830152838116604483015260648201839052610da09186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611533565b80156111195782600760000160008282546110f49190611a92565b90915550506008805483919060009061110e908490611a92565b90915550610d069050565b826009600001600082825461112e9190611a92565b9091555050600a8054839190600090611148908490611a92565b9091555050505050565b600080611160868686611596565b905061116b8361165a565b801561118757506000848061118257611182611b56565b868809115b156106a757611197600182611a92565b9695505050505050565b6001600160a01b0384166111cb5760405163e602df0560e01b815260006004820152602401610bf5565b6001600160a01b0383166111f557604051634a1406b160e11b815260006004820152602401610bf5565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610da057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161126891815260200190565b60405180910390a350505050565b6001600160a01b0383166112a15780600260008282546112969190611a92565b909155506113009050565b6001600160a01b038316600090815260208190526040902054818110156112e15783818360405163391434e360e21b8152600401610bf593929190611cba565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661131c5760028054829003905561133b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161138091815260200190565b60405180910390a3505050565b6113b97f0000000000000000000000000000000000000000000000000000000000000000853085611072565b6113c38382611687565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051611268929190918252602082015260400190565b826001600160a01b0316856001600160a01b03161461143557611435838683610d3b565b61143f83826116c1565b61146a7f000000000000000000000000000000000000000000000000000000000000000085846116f7565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db85856040516114c2929190918252602082015260400190565b60405180910390a45050505050565b6000806114e78385604001516108c69190611adf565b90506000611502856020015186604001516108c69190611adf565b9050846060015115611521576115188183611b0f565b9250505061066e565b6115188282611b0f565b505092915050565b60006115486001600160a01b03841683611728565b9050805160001415801561156d57508080602001905181019061156b9190611cdb565b155b15610d0657604051635274afe760e01b81526001600160a01b0384166004820152602401610bf5565b60008383028160001985870982811083820303915050806000036115cd578382816115c3576115c3611b56565b04925050506107d8565b8084116115ed5760405163227bc15360e01b815260040160405180910390fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000600282600381111561167057611670611cf8565b61167a9190611d0e565b60ff166001149050919050565b6001600160a01b0382166116b15760405163ec442f0560e01b815260006004820152602401610bf5565b6116bd60008383611276565b5050565b6001600160a01b0382166116eb57604051634b637e8f60e11b815260006004820152602401610bf5565b6116bd82600083611276565b6040516001600160a01b03838116602483015260448201839052610d0691859182169063a9059cbb906064016110a7565b60606107d88383600084600080856001600160a01b0316848660405161174e9190611d30565b60006040518083038185875af1925050503d806000811461178b576040519150601f19603f3d011682016040523d82523d6000602084013e611790565b606091505b50915091506111978683836060826117b0576117ab826117f7565b6107d8565b81511580156117c757506001600160a01b0384163b155b156117f057604051639996b31560e01b81526001600160a01b0385166004820152602401610bf5565b50806107d8565b8051156118075780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60005b8381101561183b578181015183820152602001611823565b50506000910152565b6020815260008251806020840152611863816040850160208701611820565b601f01601f19169190910160400192915050565b60006020828403121561188957600080fd5b5035919050565b80356001600160a01b03811681146118a757600080fd5b919050565b600080604083850312156118bf57600080fd5b6118c883611890565b946020939093013593505050565b600080604083850312156118e957600080fd5b50508035926020909101359150565b60006020828403121561190a57600080fd5b6107d882611890565b60008060006060848603121561192857600080fd5b61193184611890565b925061193f60208501611890565b9150604084013590509250925092565b6000806040838503121561196257600080fd5b8235915061197260208401611890565b90509250929050565b60008060006060848603121561199057600080fd5b833592506119a060208501611890565b91506119ae60408501611890565b90509250925092565b8015158114610c0757600080fd5b6000602082840312156119d757600080fd5b81356107d8816119b7565b600080600080608085870312156119f857600080fd5b8435935060208501359250604085013591506060850135611a18816119b7565b939692955090935050565b60008060408385031215611a3657600080fd5b611a3f83611890565b915061197260208401611890565b634e487b7160e01b600052601160045260246000fd5b8181038181111561066e5761066e611a4d565b6000600160ff1b8201611a8b57611a8b611a4d565b5060000390565b8082018082111561066e5761066e611a4d565b600181811c90821680611ab957607f821691505b602082108103611ad957634e487b7160e01b600052602260045260246000fd5b50919050565b808202811582820484141761066e5761066e611a4d565b60ff818116838216019081111561066e5761066e611a4d565b8181036000831280158383131683831282161715611b2f57611b2f611a4d565b5092915050565b808201828112600083128015821682158216171561152b5761152b611a4d565b634e487b7160e01b600052601260045260246000fd5b600082611b7b57611b7b611b56565b600160ff1b821460001984141615611b9557611b95611a4d565b500590565b600082611ba957611ba9611b56565b500490565b600060208284031215611bc057600080fd5b5051919050565b600181815b80851115611c02578160001904821115611be857611be8611a4d565b80851615611bf557918102915b93841c9390800290611bcc565b509250929050565b600082611c195750600161066e565b81611c265750600061066e565b8160018114611c3c5760028114611c4657611c62565b600191505061066e565b60ff841115611c5757611c57611a4d565b50506001821b61066e565b5060208310610133831016604e8410600b8410161715611c85575081810a61066e565b611c8f8383611bc7565b8060001904821115611ca357611ca3611a4d565b029392505050565b60006107d860ff841683611c0a565b6001600160a01b039390931683526020830191909152604082015260600190565b600060208284031215611ced57600080fd5b81516107d8816119b7565b634e487b7160e01b600052602160045260246000fd5b600060ff831680611d2157611d21611b56565b8060ff84160691505092915050565b60008251611d42818460208701611820565b919091019291505056fea2646970667358221220cffa4ce0f91f446a2c8f990a155173c691bff35ced68b07e4353033f7f01856064736f6c63430008140033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2234 CODESIZE SUB DUP1 PUSH3 0x2234 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x26B JUMP JUMPDEST CALLER DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xAA88CAF PUSH1 0xE3 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xAA88B PUSH1 0xEB SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x80 SWAP2 SWAP1 PUSH3 0x34F JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x8F DUP3 DUP3 PUSH3 0x34F JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP1 PUSH3 0xA6 DUP4 PUSH3 0x11B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH3 0xB8 JUMPI PUSH1 0x12 PUSH3 0xBA JUMP JUMPDEST DUP1 JUMPDEST PUSH1 0xFF AND PUSH1 0xA0 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 MSTORE DUP2 AND PUSH3 0xF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x102 DUP2 PUSH3 0x200 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC0 MSTORE POP PUSH3 0x466 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH3 0x164 SWAP2 PUSH3 0x41B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x1A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x1A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH3 0x1BB JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST ISZERO PUSH3 0x1F3 JUMPI PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH3 0x1D9 SWAP2 SWAP1 PUSH3 0x44C JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP2 GT PUSH3 0x1F1 JUMPI PUSH1 0x1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x0 SWAP5 DUP6 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x28C DUP2 PUSH3 0x252 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x29F DUP2 PUSH3 0x252 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x34A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x325 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x346 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x331 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x36B JUMPI PUSH3 0x36B PUSH3 0x2AA JUMP JUMPDEST PUSH3 0x383 DUP2 PUSH3 0x37C DUP5 SLOAD PUSH3 0x2C0 JUMP JUMPDEST DUP5 PUSH3 0x2FC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3BB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3A2 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x346 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3EC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3CB JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x40B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x43E JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH3 0x422 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1D82 PUSH3 0x4B2 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x3FA ADD MSTORE PUSH2 0xAA4 ADD MSTORE PUSH1 0x0 PUSH2 0x7E7 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x362 ADD MSTORE DUP2 DUP2 PUSH2 0xC4C ADD MSTORE DUP2 DUP2 PUSH2 0x1392 ADD MSTORE PUSH2 0x1444 ADD MSTORE PUSH2 0x1D82 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xC6E6F592 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xDD5B2F52 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDD5B2F52 EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xE7572230 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xCC265DA9 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xCE96CB77 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xD4D5C230 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xD905777E EQ PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xB3D7F6B9 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0xB460AF94 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xBA087652 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xC63D75B6 EQ PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x9F006651 EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4CDAD506 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4CDAD506 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x798CD94C EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x2BDB4E73 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x402D267D EQ PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xA28A477 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x169FFFE2 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x16C19739 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x258D92A EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x270 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23F PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1844 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST PUSH2 0x296 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AC JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x249 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x23F PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x23F JUMP JUMPDEST PUSH2 0x296 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1913 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x23F PUSH1 0xF DUP2 JUMP JUMPDEST PUSH2 0x34E PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x249 JUMP JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x249 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST POP PUSH1 0x0 NOT SWAP1 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x848 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x382 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x382 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST PUSH2 0x263 PUSH2 0x893 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x296 PUSH2 0x45E CALLDATASIZE PUSH1 0x4 PUSH2 0x18AC JUMP JUMPDEST PUSH2 0x928 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x471 CALLDATASIZE PUSH1 0x4 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x197B JUMP JUMPDEST PUSH2 0x943 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x197B JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST PUSH2 0x23F PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x296 PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x19C5 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x4D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x4E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19E2 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x4F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x23F PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x513 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x54C CALLDATASIZE PUSH1 0x4 PUSH2 0x1877 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x55D CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x56D PUSH2 0x8A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0xC SLOAD PUSH2 0x584 DUP3 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x58C PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5AF DUP2 PUSH2 0x1A76 JUMP JUMPDEST SWAP1 POP PUSH1 0xC SLOAD PUSH2 0x5BD DUP3 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x5C5 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x1AA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x60A SWAP1 PUSH2 0x1AA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x657 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x657 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x63A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E DUP3 PUSH1 0x0 PUSH2 0xCBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x682 DUP2 DUP6 DUP6 PUSH2 0xCF9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E DUP3 PUSH1 0x1 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 PUSH2 0x6A7 DUP6 DUP4 PUSH2 0x1ADF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6E4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP2 SUB PUSH2 0x75B JUMPI PUSH1 0x40 MLOAD PUSH4 0x2F4CB185 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7C7 DUP6 DUP3 DUP6 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x7D2 DUP6 DUP6 DUP6 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80B DUP2 PUSH32 0x0 PUSH2 0x1AF6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81A PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xE SLOAD PUSH2 0x82A SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 POP PUSH2 0x836 DUP5 DUP5 PUSH2 0xE2F JUMP JUMPDEST PUSH1 0xE SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x66E PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x850 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x85A PUSH1 0x0 PUSH2 0xE82 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x866 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x870 DUP4 DUP4 PUSH2 0xED4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH2 0x66E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8B3 PUSH1 0x7 PUSH1 0x0 ADD SLOAD PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0x8CB PUSH2 0x8C6 PUSH1 0x7 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH2 0x699 JUMP JUMPDEST PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0x8D5 SWAP2 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8EC PUSH2 0x8C6 PUSH1 0x9 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x8F8 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0x902 SWAP2 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x917 DUP4 DUP4 PUSH2 0x1B36 JUMP JUMPDEST PUSH2 0x921 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x682 DUP2 DUP6 DUP6 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E DUP3 PUSH1 0x1 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94D PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0xE SLOAD PUSH2 0x95D SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST SWAP1 POP PUSH2 0x96A DUP6 DUP6 DUP6 PUSH2 0xF1F JUMP JUMPDEST PUSH1 0xE SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x7D8 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x991 DUP5 DUP5 DUP5 PUSH2 0xF6E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9A5 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E DUP3 PUSH1 0x0 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x66E SWAP1 PUSH1 0x0 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA06 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7B92CB43 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH4 0x62A73C5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC7B567D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP8 PUSH2 0xA7A SWAP2 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH2 0xA97 DUP2 DUP5 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0xACC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP8 PUSH2 0x1072 JUMP JUMPDEST DUP1 MLOAD PUSH1 0xC DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xAE0 SWAP1 DUP5 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xB42 SWAP1 DUP7 SWAP1 DUP5 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x20 DUP1 DUP7 ADD MLOAD DUP4 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE SWAP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP4 DUP4 ADD DUP10 SWAP1 MSTORE SWAP4 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE8F4B81343AFA64BC4DDCFBF2D80E883E0DDFC6663C400CA09DA13D1D28D588 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x66E JUMP JUMPDEST PUSH2 0xBCF PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC07 DUP2 PUSH2 0xE82 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54672219 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D8 PUSH2 0xCCC PUSH2 0x562 JUMP JUMPDEST PUSH2 0xCD7 SWAP1 PUSH1 0x1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0xCE3 PUSH1 0x0 PUSH1 0xA PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xCF0 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST DUP6 SWAP2 SWAP1 DUP6 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0xD06 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D8 PUSH2 0xD1B DUP3 PUSH1 0xA PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xD28 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0xD30 PUSH2 0x562 JUMP JUMPDEST PUSH2 0xCF0 SWAP1 PUSH1 0x1 PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xDA0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD91 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0xDA0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x11A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDD0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0xD06 DUP4 DUP4 DUP4 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT PUSH1 0x0 PUSH2 0xE3F DUP6 PUSH2 0x9B4 JUMP JUMPDEST SWAP1 POP PUSH2 0xE4D CALLER DUP6 DUP8 DUP5 PUSH2 0x138D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT PUSH1 0x0 PUSH2 0xEE4 DUP6 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP PUSH2 0xE4D CALLER DUP6 DUP4 DUP9 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD PUSH4 0x123BAF03 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF2B DUP4 PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0xF54 JUMPI DUP3 DUP6 DUP3 PUSH1 0x40 MLOAD PUSH4 0x3FA733BB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP7 PUSH2 0x68C JUMP JUMPDEST SWAP1 POP PUSH2 0x6A7 CALLER DUP7 DUP7 DUP10 DUP6 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF7A DUP4 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0xFA3 JUMPI DUP3 DUP6 DUP3 PUSH1 0x40 MLOAD PUSH4 0x2E52AFBB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAE DUP7 PUSH2 0x661 JUMP JUMPDEST SWAP1 POP PUSH2 0x6A7 CALLER DUP7 DUP7 DUP5 DUP11 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC9 DUP4 DUP4 PUSH2 0x14D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0xFDB DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0xFE5 SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST SGT PUSH2 0x1003 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27AD135D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1025 DUP3 PUSH2 0x1016 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0x1020 SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST PUSH2 0xC0A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x103E SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH2 0x1048 SWAP2 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST SWAP1 POP PUSH1 0xF DUP2 LT PUSH2 0x106B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E5FF327 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xDA0 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1533 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1119 JUMPI DUP3 PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10F4 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x110E SWAP1 DUP5 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD06 SWAP1 POP JUMP JUMPDEST DUP3 PUSH1 0x9 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x112E SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1148 SWAP1 DUP5 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1160 DUP7 DUP7 DUP7 PUSH2 0x1596 JUMP JUMPDEST SWAP1 POP PUSH2 0x116B DUP4 PUSH2 0x165A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1187 JUMPI POP PUSH1 0x0 DUP5 DUP1 PUSH2 0x1182 JUMPI PUSH2 0x1182 PUSH2 0x1B56 JUMP JUMPDEST DUP7 DUP9 MULMOD GT JUMPDEST ISZERO PUSH2 0x6A7 JUMPI PUSH2 0x1197 PUSH1 0x1 DUP3 PUSH2 0x1A92 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x11CB JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xDA0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1268 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12A1 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1300 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12E1 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x131C JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x133B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1380 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x13B9 PUSH32 0x0 DUP6 ADDRESS DUP6 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x13C3 DUP4 DUP3 PUSH2 0x1687 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1268 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1435 JUMPI PUSH2 0x1435 DUP4 DUP7 DUP4 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x143F DUP4 DUP3 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x146A PUSH32 0x0 DUP6 DUP5 PUSH2 0x16F7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x14C2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14E7 DUP4 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1502 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x60 ADD MLOAD ISZERO PUSH2 0x1521 JUMPI PUSH2 0x1518 DUP2 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x66E JUMP JUMPDEST PUSH2 0x1518 DUP3 DUP3 PUSH2 0x1B0F JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1548 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x1728 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x156D JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x156B SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xD06 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 MUL DUP2 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 SUB PUSH2 0x15CD JUMPI DUP4 DUP3 DUP2 PUSH2 0x15C3 JUMPI PUSH2 0x15C3 PUSH2 0x1B56 JUMP JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x7D8 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x15ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x227BC153 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1670 JUMPI PUSH2 0x1670 PUSH2 0x1CF8 JUMP JUMPDEST PUSH2 0x167A SWAP2 SWAP1 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x16BD PUSH1 0x0 DUP4 DUP4 PUSH2 0x1276 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x16BD DUP3 PUSH1 0x0 DUP4 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xD06 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7D8 DUP4 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x174E SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x178B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1197 DUP7 DUP4 DUP4 PUSH1 0x60 DUP3 PUSH2 0x17B0 JUMPI PUSH2 0x17AB DUP3 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x17C7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST POP DUP1 PUSH2 0x7D8 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1807 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x183B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1823 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1863 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18C8 DUP4 PUSH2 0x1890 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x190A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D8 DUP3 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1931 DUP5 PUSH2 0x1890 JUMP JUMPDEST SWAP3 POP PUSH2 0x193F PUSH1 0x20 DUP6 ADD PUSH2 0x1890 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1972 PUSH1 0x20 DUP5 ADD PUSH2 0x1890 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x19A0 PUSH1 0x20 DUP6 ADD PUSH2 0x1890 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AE PUSH1 0x40 DUP6 ADD PUSH2 0x1890 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7D8 DUP2 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x1A18 DUP2 PUSH2 0x19B7 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3F DUP4 PUSH2 0x1890 JUMP JUMPDEST SWAP2 POP PUSH2 0x1972 PUSH1 0x20 DUP5 ADD PUSH2 0x1890 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x66E JUMPI PUSH2 0x66E PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 ADD PUSH2 0x1A8B JUMPI PUSH2 0x1A8B PUSH2 0x1A4D JUMP JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x66E JUMPI PUSH2 0x66E PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1AB9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AD9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x66E JUMPI PUSH2 0x66E PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x66E JUMPI PUSH2 0x66E PUSH2 0x1A4D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP4 SLT DUP1 ISZERO DUP4 DUP4 SGT AND DUP4 DUP4 SLT DUP3 AND OR ISZERO PUSH2 0x1B2F JUMPI PUSH2 0x1B2F PUSH2 0x1A4D JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 SLT PUSH1 0x0 DUP4 SLT DUP1 ISZERO DUP3 AND DUP3 ISZERO DUP3 AND OR ISZERO PUSH2 0x152B JUMPI PUSH2 0x152B PUSH2 0x1A4D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B7B JUMPI PUSH2 0x1B7B PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ PUSH1 0x0 NOT DUP5 EQ AND ISZERO PUSH2 0x1B95 JUMPI PUSH2 0x1B95 PUSH2 0x1A4D JUMP JUMPDEST POP SDIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BA9 JUMPI PUSH2 0x1BA9 PUSH2 0x1B56 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1C02 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1BE8 JUMPI PUSH2 0x1BE8 PUSH2 0x1A4D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1BF5 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1BCC JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C19 JUMPI POP PUSH1 0x1 PUSH2 0x66E JUMP JUMPDEST DUP2 PUSH2 0x1C26 JUMPI POP PUSH1 0x0 PUSH2 0x66E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1C3C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1C46 JUMPI PUSH2 0x1C62 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x66E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1C57 JUMPI PUSH2 0x1C57 PUSH2 0x1A4D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x66E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1C85 JUMPI POP DUP2 DUP2 EXP PUSH2 0x66E JUMP JUMPDEST PUSH2 0x1C8F DUP4 DUP4 PUSH2 0x1BC7 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1CA3 JUMPI PUSH2 0x1CA3 PUSH2 0x1A4D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D8 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7D8 DUP2 PUSH2 0x19B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP4 AND DUP1 PUSH2 0x1D21 JUMPI PUSH2 0x1D21 PUSH2 0x1B56 JUMP JUMPDEST DUP1 PUSH1 0xFF DUP5 AND MOD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1D42 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1820 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF STATICCALL 0x4C 0xE0 0xF9 0x1F PREVRANDAO PUSH11 0x2C8F990A155173C691BFF3 0x5C 0xED PUSH9 0xB07E4353033F7F0185 PUSH1 0x64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"783:9568:15:-:0;;;2850:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2937:10;2902:4;1896:113:3;;;;;;;;;;;;;-1:-1:-1;;;1896:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:3;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:3;:17;1995:7;1985;:17;:::i;:::-;;1896:113;;4203:12:5;4217:19;4240:28;4261:6;4240:20;;;:28;;:::i;:::-;4202:66;;;;4300:7;:28;;4326:2;4300:28;;;4310:13;4300:28;4278:50;;;;-1:-1:-1;;;;;;;4338:15:5;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3422:51:18;3395:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1713:1:11;1917:7;:21;-1:-1:-1;;;;;3017:20:15::3;;::::0;-1:-1:-1;783:9568:15;;4503:533:5;4680:43;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4680:43:5;-1:-1:-1;;;4680:43:5;;;4640:93;;4570:4;;;;;;;;-1:-1:-1;;;;;4640:26:5;;;:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4593:140;;;;4747:7;:39;;;;;4784:2;4758:15;:22;:28;;4747:39;4743:260;;;4802:24;4840:15;4829:38;;;;;;;;;;;;:::i;:::-;4802:65;-1:-1:-1;4905:15:5;4885:35;;4881:112;;4948:4;;4960:16;;-1:-1:-1;4503:533:5;-1:-1:-1;;;;4503:533:5:o;4881:112::-;4788:215;4743:260;-1:-1:-1;5020:5:5;;;;-1:-1:-1;4503:533:5;-1:-1:-1;;;4503:533:5:o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:131:18:-;-1:-1:-1;;;;;89:31:18;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:400::-;244:6;252;305:2;293:9;284:7;280:23;276:32;273:52;;;321:1;318;311:12;273:52;353:9;347:16;372:31;397:5;372:31;:::i;:::-;472:2;457:18;;451:25;422:5;;-1:-1:-1;485:33:18;451:25;485:33;:::i;:::-;537:7;527:17;;;150:400;;;;;:::o;555:127::-;616:10;611:3;607:20;604:1;597:31;647:4;644:1;637:15;671:4;668:1;661:15;687:380;766:1;762:12;;;;809;;;830:61;;884:4;876:6;872:17;862:27;;830:61;937:2;929:6;926:14;906:18;903:38;900:161;;983:10;978:3;974:20;971:1;964:31;1018:4;1015:1;1008:15;1046:4;1043:1;1036:15;900:161;;687:380;;;:::o;1198:545::-;1300:2;1295:3;1292:11;1289:448;;;1336:1;1361:5;1357:2;1350:17;1406:4;1402:2;1392:19;1476:2;1464:10;1460:19;1457:1;1453:27;1447:4;1443:38;1512:4;1500:10;1497:20;1494:47;;;-1:-1:-1;1535:4:18;1494:47;1590:2;1585:3;1581:12;1578:1;1574:20;1568:4;1564:31;1554:41;;1645:82;1663:2;1656:5;1653:13;1645:82;;;1708:17;;;1689:1;1678:13;1645:82;;;1649:3;;;1289:448;1198:545;;;:::o;1919:1352::-;2039:10;;-1:-1:-1;;;;;2061:30:18;;2058:56;;;2094:18;;:::i;:::-;2123:97;2213:6;2173:38;2205:4;2199:11;2173:38;:::i;:::-;2167:4;2123:97;:::i;:::-;2275:4;;2339:2;2328:14;;2356:1;2351:663;;;;3058:1;3075:6;3072:89;;;-1:-1:-1;3127:19:18;;;3121:26;3072:89;-1:-1:-1;;1876:1:18;1872:11;;;1868:24;1864:29;1854:40;1900:1;1896:11;;;1851:57;3174:81;;2321:944;;2351:663;1145:1;1138:14;;;1182:4;1169:18;;-1:-1:-1;;2387:20:18;;;2505:236;2519:7;2516:1;2513:14;2505:236;;;2608:19;;;2602:26;2587:42;;2700:27;;;;2668:1;2656:14;;;;2535:19;;2505:236;;;2509:3;2769:6;2760:7;2757:19;2754:201;;;2830:19;;;2824:26;-1:-1:-1;;2913:1:18;2909:14;;;2925:3;2905:24;2901:37;2897:42;2882:58;2867:74;;2754:201;-1:-1:-1;;;;;3001:1:18;2985:14;;;2981:22;2968:36;;-1:-1:-1;1919:1352:18:o;3484:412::-;3613:3;3651:6;3645:13;3676:1;3686:129;3700:6;3697:1;3694:13;3686:129;;;3798:4;3782:14;;;3778:25;;3772:32;3759:11;;;3752:53;3715:12;3686:129;;;-1:-1:-1;3870:1:18;3834:16;;3859:13;;;-1:-1:-1;3834:16:18;3484:412;-1:-1:-1;3484:412:18:o;3901:184::-;3971:6;4024:2;4012:9;4003:7;3999:23;3995:32;3992:52;;;4040:1;4037;4030:12;3992:52;-1:-1:-1;4063:16:18;;3901:184;-1:-1:-1;3901:184:18:o;:::-;783:9568:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MAX_LEVARAGE_5423":{"entryPoint":null,"id":5423,"parameterSlots":0,"returnSlots":0},"@_approve_860":{"entryPoint":3321,"id":860,"parameterSlots":3,"returnSlots":0},"@_approve_920":{"entryPoint":4513,"id":920,"parameterSlots":4,"returnSlots":0},"@_burn_842":{"entryPoint":5825,"id":842,"parameterSlots":2,"returnSlots":0},"@_calculatePositionPnL_6025":{"entryPoint":5329,"id":6025,"parameterSlots":2,"returnSlots":1},"@_callOptionalReturn_2034":{"entryPoint":5427,"id":2034,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3669,"id":84,"parameterSlots":0,"returnSlots":0},"@_checkPositionHealth_5978":{"entryPoint":4029,"id":5978,"parameterSlots":2,"returnSlots":0},"@_convertToAssets_1639":{"entryPoint":3263,"id":1639,"parameterSlots":2,"returnSlots":1},"@_convertToShares_1611":{"entryPoint":3339,"id":1611,"parameterSlots":2,"returnSlots":1},"@_decimalsOffset_1731":{"entryPoint":null,"id":1731,"parameterSlots":0,"returnSlots":1},"@_deposit_1676":{"entryPoint":5005,"id":1676,"parameterSlots":4,"returnSlots":0},"@_increasePositionsSumary_5875":{"entryPoint":4313,"id":5875,"parameterSlots":3,"returnSlots":0},"@_mint_809":{"entryPoint":5767,"id":809,"parameterSlots":2,"returnSlots":0},"@_msgSender_2349":{"entryPoint":null,"id":2349,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_2416":{"entryPoint":null,"id":2416,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_2408":{"entryPoint":3589,"id":2408,"parameterSlots":0,"returnSlots":0},"@_revert_2336":{"entryPoint":6135,"id":2336,"parameterSlots":1,"returnSlots":0},"@_spendAllowance_968":{"entryPoint":3387,"id":968,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3714,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_699":{"entryPoint":3494,"id":699,"parameterSlots":3,"returnSlots":0},"@_update_776":{"entryPoint":4726,"id":776,"parameterSlots":3,"returnSlots":0},"@_withdraw_1723":{"entryPoint":5137,"id":1723,"parameterSlots":5,"returnSlots":0},"@allowance_596":{"entryPoint":null,"id":596,"parameterSlots":2,"returnSlots":1},"@approve_620":{"entryPoint":1652,"id":620,"parameterSlots":2,"returnSlots":1},"@asset_1229":{"entryPoint":null,"id":1229,"parameterSlots":0,"returnSlots":1},"@balanceOf_555":{"entryPoint":null,"id":555,"parameterSlots":1,"returnSlots":1},"@convertToAssets_1276":{"entryPoint":1633,"id":1276,"parameterSlots":1,"returnSlots":1},"@convertToShares_1260":{"entryPoint":2484,"id":1260,"parameterSlots":1,"returnSlots":1},"@decimals_1217":{"entryPoint":2015,"id":1217,"parameterSlots":0,"returnSlots":1},"@deposit_1445":{"entryPoint":3631,"id":1445,"parameterSlots":2,"returnSlots":1},"@deposit_5522":{"entryPoint":2064,"id":5522,"parameterSlots":2,"returnSlots":1},"@functionCallWithValue_2204":{"entryPoint":null,"id":2204,"parameterSlots":3,"returnSlots":1},"@functionCall_2158":{"entryPoint":5928,"id":2158,"parameterSlots":2,"returnSlots":1},"@getPosition_5759":{"entryPoint":1712,"id":5759,"parameterSlots":1,"returnSlots":1},"@getPrice_5812":{"entryPoint":null,"id":5812,"parameterSlots":1,"returnSlots":1},"@getTradersPnL_5802":{"entryPoint":2210,"id":5802,"parameterSlots":0,"returnSlots":1},"@getUsdtValue_5837":{"entryPoint":1689,"id":5837,"parameterSlots":2,"returnSlots":1},"@i_xdc_5365":{"entryPoint":null,"id":5365,"parameterSlots":0,"returnSlots":0},"@maxDeposit_1291":{"entryPoint":null,"id":1291,"parameterSlots":1,"returnSlots":1},"@maxMint_1306":{"entryPoint":null,"id":1306,"parameterSlots":1,"returnSlots":1},"@maxRedeem_1337":{"entryPoint":2985,"id":1337,"parameterSlots":1,"returnSlots":1},"@maxWithdraw_1324":{"entryPoint":2497,"id":1324,"parameterSlots":1,"returnSlots":1},"@mint_1489":{"entryPoint":3796,"id":1489,"parameterSlots":2,"returnSlots":1},"@mint_5581":{"entryPoint":2140,"id":5581,"parameterSlots":2,"returnSlots":1},"@mulDiv_2816":{"entryPoint":5526,"id":2816,"parameterSlots":3,"returnSlots":1},"@mulDiv_2859":{"entryPoint":4434,"id":2859,"parameterSlots":4,"returnSlots":1},"@name_515":{"entryPoint":1487,"id":515,"parameterSlots":0,"returnSlots":1},"@openPosition_5728":{"entryPoint":2533,"id":5728,"parameterSlots":4,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@previewDeposit_1353":{"entryPoint":null,"id":1353,"parameterSlots":1,"returnSlots":1},"@previewMint_1369":{"entryPoint":2358,"id":1369,"parameterSlots":1,"returnSlots":1},"@previewRedeem_1401":{"entryPoint":null,"id":1401,"parameterSlots":1,"returnSlots":1},"@previewWithdraw_1385":{"entryPoint":1676,"id":1385,"parameterSlots":1,"returnSlots":1},"@redeem_1583":{"entryPoint":3950,"id":1583,"parameterSlots":3,"returnSlots":1},"@redeem_5609":{"entryPoint":2428,"id":5609,"parameterSlots":3,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2120,"id":98,"parameterSlots":0,"returnSlots":0},"@s_totalLiquidityDeposited_5382":{"entryPoint":null,"id":5382,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1871":{"entryPoint":4210,"id":1871,"parameterSlots":4,"returnSlots":0},"@safeTransfer_1844":{"entryPoint":5879,"id":1844,"parameterSlots":3,"returnSlots":0},"@symbol_524":{"entryPoint":2195,"id":524,"parameterSlots":0,"returnSlots":1},"@toInt256_5236":{"entryPoint":3826,"id":5236,"parameterSlots":1,"returnSlots":1},"@toUint256_4400":{"entryPoint":3082,"id":4400,"parameterSlots":1,"returnSlots":1},"@totalAssets_1244":{"entryPoint":3124,"id":1244,"parameterSlots":0,"returnSlots":1},"@totalAssets_5491":{"entryPoint":1378,"id":5491,"parameterSlots":0,"returnSlots":1},"@totalSupply_542":{"entryPoint":null,"id":542,"parameterSlots":0,"returnSlots":1},"@tradersCollateral_5378":{"entryPoint":null,"id":5378,"parameterSlots":0,"returnSlots":0},"@transferFrom_652":{"entryPoint":1977,"id":652,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":3015,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_579":{"entryPoint":2344,"id":579,"parameterSlots":2,"returnSlots":1},"@tryfunction_5619":{"entryPoint":null,"id":5619,"parameterSlots":1,"returnSlots":1},"@unsignedRoundsUp_3481":{"entryPoint":5722,"id":3481,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_2296":{"entryPoint":null,"id":2296,"parameterSlots":3,"returnSlots":1},"@withdraw_1536":{"entryPoint":3871,"id":1536,"parameterSlots":3,"returnSlots":1},"@withdraw_5556":{"entryPoint":2371,"id":5556,"parameterSlots":3,"returnSlots":1},"abi_decode_address":{"entryPoint":6288,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6392,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6691,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6419,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6316,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":6597,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":7387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6263,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":7086,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":6479,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_address":{"entryPoint":6523,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":6358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256t_bool":{"entryPoint":6626,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7472,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7354,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$1047__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6212,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Position_$5415_memory_ptr__to_t_struct$_Position_$5415_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_int256":{"entryPoint":6966,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6802,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint8":{"entryPoint":6902,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_int256":{"entryPoint":7020,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7066,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":7111,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":7339,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":7178,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6879,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_int256":{"entryPoint":6927,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6755,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":6176,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6821,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint8":{"entryPoint":7438,"id":null,"parameterSlots":2,"returnSlots":1},"negate_t_int256":{"entryPoint":6774,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6733,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6998,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":7416,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":6583,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11703:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:18","statements":[{"nodeType":"YulAssignment","src":"125:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:18"},"nodeType":"YulFunctionCall","src":"133:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:18"},"nodeType":"YulFunctionCall","src":"160:25:18"},"nodeType":"YulExpressionStatement","src":"160:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:18","type":""}],"src":"14:177:18"},{"body":{"nodeType":"YulBlock","src":"262:184:18","statements":[{"nodeType":"YulVariableDeclaration","src":"272:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"281:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"276:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"341:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"366:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"371:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"362:3:18"},"nodeType":"YulFunctionCall","src":"362:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"385:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"390:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"381:3:18"},"nodeType":"YulFunctionCall","src":"381:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"375:5:18"},"nodeType":"YulFunctionCall","src":"375:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"355:6:18"},"nodeType":"YulFunctionCall","src":"355:39:18"},"nodeType":"YulExpressionStatement","src":"355:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"302:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"305:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"299:2:18"},"nodeType":"YulFunctionCall","src":"299:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"313:19:18","statements":[{"nodeType":"YulAssignment","src":"315:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"324:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"327:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"320:3:18"},"nodeType":"YulFunctionCall","src":"320:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"315:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"295:3:18","statements":[]},"src":"291:113:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"424:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"429:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"420:3:18"},"nodeType":"YulFunctionCall","src":"420:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"438:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"413:6:18"},"nodeType":"YulFunctionCall","src":"413:27:18"},"nodeType":"YulExpressionStatement","src":"413:27:18"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"240:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"245:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"250:6:18","type":""}],"src":"196:250:18"},{"body":{"nodeType":"YulBlock","src":"572:275:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"589:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"600:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"582:6:18"},"nodeType":"YulFunctionCall","src":"582:21:18"},"nodeType":"YulExpressionStatement","src":"582:21:18"},{"nodeType":"YulVariableDeclaration","src":"612:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"632:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"626:5:18"},"nodeType":"YulFunctionCall","src":"626:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"616:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"659:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"670:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"655:3:18"},"nodeType":"YulFunctionCall","src":"655:18:18"},{"name":"length","nodeType":"YulIdentifier","src":"675:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:18"},"nodeType":"YulFunctionCall","src":"648:34:18"},"nodeType":"YulExpressionStatement","src":"648:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"730:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"738:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"726:3:18"},"nodeType":"YulFunctionCall","src":"726:15:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"747:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"758:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"743:3:18"},"nodeType":"YulFunctionCall","src":"743:18:18"},{"name":"length","nodeType":"YulIdentifier","src":"763:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"691:34:18"},"nodeType":"YulFunctionCall","src":"691:79:18"},"nodeType":"YulExpressionStatement","src":"691:79:18"},{"nodeType":"YulAssignment","src":"779:62:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"795:9:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"814:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"822:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"810:3:18"},"nodeType":"YulFunctionCall","src":"810:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"831:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"827:3:18"},"nodeType":"YulFunctionCall","src":"827:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"806:3:18"},"nodeType":"YulFunctionCall","src":"806:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"791:3:18"},"nodeType":"YulFunctionCall","src":"791:45:18"},{"kind":"number","nodeType":"YulLiteral","src":"838:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:18"},"nodeType":"YulFunctionCall","src":"787:54:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"779:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"541:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"552:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"563:4:18","type":""}],"src":"451:396:18"},{"body":{"nodeType":"YulBlock","src":"922:110:18","statements":[{"body":{"nodeType":"YulBlock","src":"968:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"977:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"980:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"970:6:18"},"nodeType":"YulFunctionCall","src":"970:12:18"},"nodeType":"YulExpressionStatement","src":"970:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:18"},"nodeType":"YulFunctionCall","src":"939:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:18"},"nodeType":"YulFunctionCall","src":"935:32:18"},"nodeType":"YulIf","src":"932:52:18"},{"nodeType":"YulAssignment","src":"993:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1016:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1003:12:18"},"nodeType":"YulFunctionCall","src":"1003:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"993:6:18"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"888:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"899:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"911:6:18","type":""}],"src":"852:180:18"},{"body":{"nodeType":"YulBlock","src":"1086:124:18","statements":[{"nodeType":"YulAssignment","src":"1096:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1118:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1105:12:18"},"nodeType":"YulFunctionCall","src":"1105:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1096:5:18"}]},{"body":{"nodeType":"YulBlock","src":"1188:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1197:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1200:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1190:6:18"},"nodeType":"YulFunctionCall","src":"1190:12:18"},"nodeType":"YulExpressionStatement","src":"1190:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1147:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1158:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1173:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1178:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1169:3:18"},"nodeType":"YulFunctionCall","src":"1169:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1182:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1165:3:18"},"nodeType":"YulFunctionCall","src":"1165:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1154:3:18"},"nodeType":"YulFunctionCall","src":"1154:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1144:2:18"},"nodeType":"YulFunctionCall","src":"1144:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1137:6:18"},"nodeType":"YulFunctionCall","src":"1137:50:18"},"nodeType":"YulIf","src":"1134:70:18"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1076:5:18","type":""}],"src":"1037:173:18"},{"body":{"nodeType":"YulBlock","src":"1302:167:18","statements":[{"body":{"nodeType":"YulBlock","src":"1348:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1357:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1360:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1350:6:18"},"nodeType":"YulFunctionCall","src":"1350:12:18"},"nodeType":"YulExpressionStatement","src":"1350:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1323:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1332:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1319:3:18"},"nodeType":"YulFunctionCall","src":"1319:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1344:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1315:3:18"},"nodeType":"YulFunctionCall","src":"1315:32:18"},"nodeType":"YulIf","src":"1312:52:18"},{"nodeType":"YulAssignment","src":"1373:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1383:18:18"},"nodeType":"YulFunctionCall","src":"1383:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1373:6:18"}]},{"nodeType":"YulAssignment","src":"1421:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1444:3:18"},"nodeType":"YulFunctionCall","src":"1444:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1431:12:18"},"nodeType":"YulFunctionCall","src":"1431:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1421:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1260:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1271:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1283:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1291:6:18","type":""}],"src":"1215:254:18"},{"body":{"nodeType":"YulBlock","src":"1569:92:18","statements":[{"nodeType":"YulAssignment","src":"1579:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1591:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1602:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1587:3:18"},"nodeType":"YulFunctionCall","src":"1587:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1579:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1621:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1646:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1639:6:18"},"nodeType":"YulFunctionCall","src":"1639:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1632:6:18"},"nodeType":"YulFunctionCall","src":"1632:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1614:6:18"},"nodeType":"YulFunctionCall","src":"1614:41:18"},"nodeType":"YulExpressionStatement","src":"1614:41:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1538:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1549:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1560:4:18","type":""}],"src":"1474:187:18"},{"body":{"nodeType":"YulBlock","src":"1753:161:18","statements":[{"body":{"nodeType":"YulBlock","src":"1799:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1808:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1811:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1801:6:18"},"nodeType":"YulFunctionCall","src":"1801:12:18"},"nodeType":"YulExpressionStatement","src":"1801:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1774:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1770:3:18"},"nodeType":"YulFunctionCall","src":"1770:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1795:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1766:3:18"},"nodeType":"YulFunctionCall","src":"1766:32:18"},"nodeType":"YulIf","src":"1763:52:18"},{"nodeType":"YulAssignment","src":"1824:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1847:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1834:12:18"},"nodeType":"YulFunctionCall","src":"1834:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1824:6:18"}]},{"nodeType":"YulAssignment","src":"1866:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1893:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1904:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1889:3:18"},"nodeType":"YulFunctionCall","src":"1889:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1876:12:18"},"nodeType":"YulFunctionCall","src":"1876:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1866:6:18"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1711:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1722:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1734:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1742:6:18","type":""}],"src":"1666:248:18"},{"body":{"nodeType":"YulBlock","src":"1989:116:18","statements":[{"body":{"nodeType":"YulBlock","src":"2035:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2044:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2047:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2037:6:18"},"nodeType":"YulFunctionCall","src":"2037:12:18"},"nodeType":"YulExpressionStatement","src":"2037:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2010:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2019:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2006:3:18"},"nodeType":"YulFunctionCall","src":"2006:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2031:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2002:3:18"},"nodeType":"YulFunctionCall","src":"2002:32:18"},"nodeType":"YulIf","src":"1999:52:18"},{"nodeType":"YulAssignment","src":"2060:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2089:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2070:18:18"},"nodeType":"YulFunctionCall","src":"2070:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2060:6:18"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1955:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1966:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1978:6:18","type":""}],"src":"1919:186:18"},{"body":{"nodeType":"YulBlock","src":"2263:352:18","statements":[{"nodeType":"YulAssignment","src":"2273:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2285:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2296:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2281:3:18"},"nodeType":"YulFunctionCall","src":"2281:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2273:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2316:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2333:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2327:5:18"},"nodeType":"YulFunctionCall","src":"2327:13:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2309:6:18"},"nodeType":"YulFunctionCall","src":"2309:32:18"},"nodeType":"YulExpressionStatement","src":"2309:32:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2361:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2372:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2357:3:18"},"nodeType":"YulFunctionCall","src":"2357:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2389:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2397:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2385:3:18"},"nodeType":"YulFunctionCall","src":"2385:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2379:5:18"},"nodeType":"YulFunctionCall","src":"2379:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2350:6:18"},"nodeType":"YulFunctionCall","src":"2350:54:18"},"nodeType":"YulExpressionStatement","src":"2350:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2424:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2435:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2420:3:18"},"nodeType":"YulFunctionCall","src":"2420:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2452:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2460:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2448:3:18"},"nodeType":"YulFunctionCall","src":"2448:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2442:5:18"},"nodeType":"YulFunctionCall","src":"2442:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2413:6:18"},"nodeType":"YulFunctionCall","src":"2413:54:18"},"nodeType":"YulExpressionStatement","src":"2413:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2487:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2498:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2483:3:18"},"nodeType":"YulFunctionCall","src":"2483:20:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2529:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2537:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2525:3:18"},"nodeType":"YulFunctionCall","src":"2525:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2519:5:18"},"nodeType":"YulFunctionCall","src":"2519:24:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2512:6:18"},"nodeType":"YulFunctionCall","src":"2512:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2505:6:18"},"nodeType":"YulFunctionCall","src":"2505:40:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2476:6:18"},"nodeType":"YulFunctionCall","src":"2476:70:18"},"nodeType":"YulExpressionStatement","src":"2476:70:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2566:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2577:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2562:3:18"},"nodeType":"YulFunctionCall","src":"2562:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2594:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2602:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2590:3:18"},"nodeType":"YulFunctionCall","src":"2590:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2584:5:18"},"nodeType":"YulFunctionCall","src":"2584:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2555:6:18"},"nodeType":"YulFunctionCall","src":"2555:54:18"},"nodeType":"YulExpressionStatement","src":"2555:54:18"}]},"name":"abi_encode_tuple_t_struct$_Position_$5415_memory_ptr__to_t_struct$_Position_$5415_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2232:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2243:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2254:4:18","type":""}],"src":"2110:505:18"},{"body":{"nodeType":"YulBlock","src":"2724:224:18","statements":[{"body":{"nodeType":"YulBlock","src":"2770:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2779:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2782:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2772:6:18"},"nodeType":"YulFunctionCall","src":"2772:12:18"},"nodeType":"YulExpressionStatement","src":"2772:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2745:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2754:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2741:3:18"},"nodeType":"YulFunctionCall","src":"2741:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2766:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2737:3:18"},"nodeType":"YulFunctionCall","src":"2737:32:18"},"nodeType":"YulIf","src":"2734:52:18"},{"nodeType":"YulAssignment","src":"2795:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2824:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2805:18:18"},"nodeType":"YulFunctionCall","src":"2805:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2795:6:18"}]},{"nodeType":"YulAssignment","src":"2843:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2876:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2887:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2872:3:18"},"nodeType":"YulFunctionCall","src":"2872:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2853:18:18"},"nodeType":"YulFunctionCall","src":"2853:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2843:6:18"}]},{"nodeType":"YulAssignment","src":"2900:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2927:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2938:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2923:3:18"},"nodeType":"YulFunctionCall","src":"2923:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2910:12:18"},"nodeType":"YulFunctionCall","src":"2910:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2900:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2674:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2685:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2697:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2705:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2713:6:18","type":""}],"src":"2620:328:18"},{"body":{"nodeType":"YulBlock","src":"3050:87:18","statements":[{"nodeType":"YulAssignment","src":"3060:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3072:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3083:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3068:3:18"},"nodeType":"YulFunctionCall","src":"3068:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3060:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3102:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3117:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3125:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3113:3:18"},"nodeType":"YulFunctionCall","src":"3113:17:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3095:6:18"},"nodeType":"YulFunctionCall","src":"3095:36:18"},"nodeType":"YulExpressionStatement","src":"3095:36:18"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3019:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3030:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3041:4:18","type":""}],"src":"2953:184:18"},{"body":{"nodeType":"YulBlock","src":"3243:102:18","statements":[{"nodeType":"YulAssignment","src":"3253:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3265:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3276:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3261:3:18"},"nodeType":"YulFunctionCall","src":"3261:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3253:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3295:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3310:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3326:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3331:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3322:3:18"},"nodeType":"YulFunctionCall","src":"3322:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"3335:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3318:3:18"},"nodeType":"YulFunctionCall","src":"3318:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3306:3:18"},"nodeType":"YulFunctionCall","src":"3306:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3288:6:18"},"nodeType":"YulFunctionCall","src":"3288:51:18"},"nodeType":"YulExpressionStatement","src":"3288:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3212:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3223:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3234:4:18","type":""}],"src":"3142:203:18"},{"body":{"nodeType":"YulBlock","src":"3437:167:18","statements":[{"body":{"nodeType":"YulBlock","src":"3483:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3492:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3495:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3485:6:18"},"nodeType":"YulFunctionCall","src":"3485:12:18"},"nodeType":"YulExpressionStatement","src":"3485:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3458:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3454:3:18"},"nodeType":"YulFunctionCall","src":"3454:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3479:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3450:3:18"},"nodeType":"YulFunctionCall","src":"3450:32:18"},"nodeType":"YulIf","src":"3447:52:18"},{"nodeType":"YulAssignment","src":"3508:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3531:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3518:12:18"},"nodeType":"YulFunctionCall","src":"3518:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3508:6:18"}]},{"nodeType":"YulAssignment","src":"3550:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3583:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3594:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3579:3:18"},"nodeType":"YulFunctionCall","src":"3579:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3560:18:18"},"nodeType":"YulFunctionCall","src":"3560:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3550:6:18"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3395:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3406:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3418:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3426:6:18","type":""}],"src":"3350:254:18"},{"body":{"nodeType":"YulBlock","src":"3725:102:18","statements":[{"nodeType":"YulAssignment","src":"3735:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3747:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3758:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3743:3:18"},"nodeType":"YulFunctionCall","src":"3743:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3735:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3777:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3792:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3808:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3813:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3804:3:18"},"nodeType":"YulFunctionCall","src":"3804:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"3817:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3800:3:18"},"nodeType":"YulFunctionCall","src":"3800:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3788:3:18"},"nodeType":"YulFunctionCall","src":"3788:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:18"},"nodeType":"YulFunctionCall","src":"3770:51:18"},"nodeType":"YulExpressionStatement","src":"3770:51:18"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1047__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3694:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3705:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3716:4:18","type":""}],"src":"3609:218:18"},{"body":{"nodeType":"YulBlock","src":"3931:76:18","statements":[{"nodeType":"YulAssignment","src":"3941:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3953:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3964:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3949:3:18"},"nodeType":"YulFunctionCall","src":"3949:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3941:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3983:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"3994:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3976:6:18"},"nodeType":"YulFunctionCall","src":"3976:25:18"},"nodeType":"YulExpressionStatement","src":"3976:25:18"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3911:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3922:4:18","type":""}],"src":"3832:175:18"},{"body":{"nodeType":"YulBlock","src":"4116:224:18","statements":[{"body":{"nodeType":"YulBlock","src":"4162:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4171:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4174:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4164:6:18"},"nodeType":"YulFunctionCall","src":"4164:12:18"},"nodeType":"YulExpressionStatement","src":"4164:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4137:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4146:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4133:3:18"},"nodeType":"YulFunctionCall","src":"4133:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4158:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4129:3:18"},"nodeType":"YulFunctionCall","src":"4129:32:18"},"nodeType":"YulIf","src":"4126:52:18"},{"nodeType":"YulAssignment","src":"4187:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4210:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4197:12:18"},"nodeType":"YulFunctionCall","src":"4197:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4187:6:18"}]},{"nodeType":"YulAssignment","src":"4229:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4262:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4273:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4258:3:18"},"nodeType":"YulFunctionCall","src":"4258:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4239:18:18"},"nodeType":"YulFunctionCall","src":"4239:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4229:6:18"}]},{"nodeType":"YulAssignment","src":"4286:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4319:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4330:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4315:3:18"},"nodeType":"YulFunctionCall","src":"4315:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4296:18:18"},"nodeType":"YulFunctionCall","src":"4296:38:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4286:6:18"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4066:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4077:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4089:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4097:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4105:6:18","type":""}],"src":"4012:328:18"},{"body":{"nodeType":"YulBlock","src":"4387:76:18","statements":[{"body":{"nodeType":"YulBlock","src":"4441:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4450:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4453:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4443:6:18"},"nodeType":"YulFunctionCall","src":"4443:12:18"},"nodeType":"YulExpressionStatement","src":"4443:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4410:5:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4431:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4424:6:18"},"nodeType":"YulFunctionCall","src":"4424:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4417:6:18"},"nodeType":"YulFunctionCall","src":"4417:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4407:2:18"},"nodeType":"YulFunctionCall","src":"4407:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4400:6:18"},"nodeType":"YulFunctionCall","src":"4400:40:18"},"nodeType":"YulIf","src":"4397:60:18"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4376:5:18","type":""}],"src":"4345:118:18"},{"body":{"nodeType":"YulBlock","src":"4535:174:18","statements":[{"body":{"nodeType":"YulBlock","src":"4581:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4590:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4593:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4583:6:18"},"nodeType":"YulFunctionCall","src":"4583:12:18"},"nodeType":"YulExpressionStatement","src":"4583:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4556:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4565:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4552:3:18"},"nodeType":"YulFunctionCall","src":"4552:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4577:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4548:3:18"},"nodeType":"YulFunctionCall","src":"4548:32:18"},"nodeType":"YulIf","src":"4545:52:18"},{"nodeType":"YulVariableDeclaration","src":"4606:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4632:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4619:12:18"},"nodeType":"YulFunctionCall","src":"4619:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4610:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4673:5:18"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"4651:21:18"},"nodeType":"YulFunctionCall","src":"4651:28:18"},"nodeType":"YulExpressionStatement","src":"4651:28:18"},{"nodeType":"YulAssignment","src":"4688:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"4698:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4688:6:18"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4501:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4512:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4524:6:18","type":""}],"src":"4468:241:18"},{"body":{"nodeType":"YulBlock","src":"4832:328:18","statements":[{"body":{"nodeType":"YulBlock","src":"4879:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4888:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4891:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4881:6:18"},"nodeType":"YulFunctionCall","src":"4881:12:18"},"nodeType":"YulExpressionStatement","src":"4881:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4853:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4862:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4849:3:18"},"nodeType":"YulFunctionCall","src":"4849:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4874:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4845:3:18"},"nodeType":"YulFunctionCall","src":"4845:33:18"},"nodeType":"YulIf","src":"4842:53:18"},{"nodeType":"YulAssignment","src":"4904:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4927:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4914:12:18"},"nodeType":"YulFunctionCall","src":"4914:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4904:6:18"}]},{"nodeType":"YulAssignment","src":"4946:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4973:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4984:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4969:3:18"},"nodeType":"YulFunctionCall","src":"4969:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4956:12:18"},"nodeType":"YulFunctionCall","src":"4956:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4946:6:18"}]},{"nodeType":"YulAssignment","src":"4997:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5024:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5035:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5020:3:18"},"nodeType":"YulFunctionCall","src":"5020:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5007:12:18"},"nodeType":"YulFunctionCall","src":"5007:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4997:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"5048:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5078:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5089:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5074:3:18"},"nodeType":"YulFunctionCall","src":"5074:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5061:12:18"},"nodeType":"YulFunctionCall","src":"5061:32:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5052:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5124:5:18"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"5102:21:18"},"nodeType":"YulFunctionCall","src":"5102:28:18"},"nodeType":"YulExpressionStatement","src":"5102:28:18"},{"nodeType":"YulAssignment","src":"5139:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"5149:5:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5139:6:18"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4774:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4785:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4797:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4805:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4813:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4821:6:18","type":""}],"src":"4714:446:18"},{"body":{"nodeType":"YulBlock","src":"5252:173:18","statements":[{"body":{"nodeType":"YulBlock","src":"5298:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5307:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5310:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5300:6:18"},"nodeType":"YulFunctionCall","src":"5300:12:18"},"nodeType":"YulExpressionStatement","src":"5300:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5273:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5282:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5269:3:18"},"nodeType":"YulFunctionCall","src":"5269:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5294:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5265:3:18"},"nodeType":"YulFunctionCall","src":"5265:32:18"},"nodeType":"YulIf","src":"5262:52:18"},{"nodeType":"YulAssignment","src":"5323:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5352:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5333:18:18"},"nodeType":"YulFunctionCall","src":"5333:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5323:6:18"}]},{"nodeType":"YulAssignment","src":"5371:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5404:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5415:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5400:3:18"},"nodeType":"YulFunctionCall","src":"5400:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5381:18:18"},"nodeType":"YulFunctionCall","src":"5381:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5371:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5210:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5221:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5233:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5241:6:18","type":""}],"src":"5165:260:18"},{"body":{"nodeType":"YulBlock","src":"5462:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5479:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5486:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5491:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5482:3:18"},"nodeType":"YulFunctionCall","src":"5482:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5472:6:18"},"nodeType":"YulFunctionCall","src":"5472:31:18"},"nodeType":"YulExpressionStatement","src":"5472:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5519:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5522:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5512:6:18"},"nodeType":"YulFunctionCall","src":"5512:15:18"},"nodeType":"YulExpressionStatement","src":"5512:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5543:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5546:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5536:6:18"},"nodeType":"YulFunctionCall","src":"5536:15:18"},"nodeType":"YulExpressionStatement","src":"5536:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5430:127:18"},{"body":{"nodeType":"YulBlock","src":"5611:79:18","statements":[{"nodeType":"YulAssignment","src":"5621:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5633:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"5636:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5629:3:18"},"nodeType":"YulFunctionCall","src":"5629:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5621:4:18"}]},{"body":{"nodeType":"YulBlock","src":"5662:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5664:16:18"},"nodeType":"YulFunctionCall","src":"5664:18:18"},"nodeType":"YulExpressionStatement","src":"5664:18:18"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5653:4:18"},{"name":"x","nodeType":"YulIdentifier","src":"5659:1:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5650:2:18"},"nodeType":"YulFunctionCall","src":"5650:11:18"},"nodeType":"YulIf","src":"5647:37:18"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5593:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"5596:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5602:4:18","type":""}],"src":"5562:128:18"},{"body":{"nodeType":"YulBlock","src":"5738:93:18","statements":[{"body":{"nodeType":"YulBlock","src":"5774:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5776:16:18"},"nodeType":"YulFunctionCall","src":"5776:18:18"},"nodeType":"YulExpressionStatement","src":"5776:18:18"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5754:5:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5765:3:18","type":"","value":"255"},{"kind":"number","nodeType":"YulLiteral","src":"5770:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5761:3:18"},"nodeType":"YulFunctionCall","src":"5761:11:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5751:2:18"},"nodeType":"YulFunctionCall","src":"5751:22:18"},"nodeType":"YulIf","src":"5748:48:18"},{"nodeType":"YulAssignment","src":"5805:20:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5816:1:18","type":"","value":"0"},{"name":"value","nodeType":"YulIdentifier","src":"5819:5:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5812:3:18"},"nodeType":"YulFunctionCall","src":"5812:13:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5805:3:18"}]}]},"name":"negate_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5720:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5730:3:18","type":""}],"src":"5695:136:18"},{"body":{"nodeType":"YulBlock","src":"5884:77:18","statements":[{"nodeType":"YulAssignment","src":"5894:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5905:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"5908:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5901:3:18"},"nodeType":"YulFunctionCall","src":"5901:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5894:3:18"}]},{"body":{"nodeType":"YulBlock","src":"5933:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5935:16:18"},"nodeType":"YulFunctionCall","src":"5935:18:18"},"nodeType":"YulExpressionStatement","src":"5935:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5925:1:18"},{"name":"sum","nodeType":"YulIdentifier","src":"5928:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5922:2:18"},"nodeType":"YulFunctionCall","src":"5922:10:18"},"nodeType":"YulIf","src":"5919:36:18"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5867:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"5870:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5876:3:18","type":""}],"src":"5836:125:18"},{"body":{"nodeType":"YulBlock","src":"6021:325:18","statements":[{"nodeType":"YulAssignment","src":"6031:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6045:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"6048:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6041:3:18"},"nodeType":"YulFunctionCall","src":"6041:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6031:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"6062:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6092:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"6098:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6088:3:18"},"nodeType":"YulFunctionCall","src":"6088:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6066:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6139:31:18","statements":[{"nodeType":"YulAssignment","src":"6141:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6155:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6163:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6151:3:18"},"nodeType":"YulFunctionCall","src":"6151:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6141:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6119:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6112:6:18"},"nodeType":"YulFunctionCall","src":"6112:26:18"},"nodeType":"YulIf","src":"6109:61:18"},{"body":{"nodeType":"YulBlock","src":"6229:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6250:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6257:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6262:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6253:3:18"},"nodeType":"YulFunctionCall","src":"6253:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6243:6:18"},"nodeType":"YulFunctionCall","src":"6243:31:18"},"nodeType":"YulExpressionStatement","src":"6243:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6294:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6297:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6287:6:18"},"nodeType":"YulFunctionCall","src":"6287:15:18"},"nodeType":"YulExpressionStatement","src":"6287:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6315:6:18"},"nodeType":"YulFunctionCall","src":"6315:15:18"},"nodeType":"YulExpressionStatement","src":"6315:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6185:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6208:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6216:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6205:2:18"},"nodeType":"YulFunctionCall","src":"6205:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6182:2:18"},"nodeType":"YulFunctionCall","src":"6182:38:18"},"nodeType":"YulIf","src":"6179:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6001:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6010:6:18","type":""}],"src":"5966:380:18"},{"body":{"nodeType":"YulBlock","src":"6403:116:18","statements":[{"nodeType":"YulAssignment","src":"6413:20:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6428:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"6431:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6424:3:18"},"nodeType":"YulFunctionCall","src":"6424:9:18"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6413:7:18"}]},{"body":{"nodeType":"YulBlock","src":"6491:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6493:16:18"},"nodeType":"YulFunctionCall","src":"6493:18:18"},"nodeType":"YulExpressionStatement","src":"6493:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6462:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6455:6:18"},"nodeType":"YulFunctionCall","src":"6455:9:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6469:1:18"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"6476:7:18"},{"name":"x","nodeType":"YulIdentifier","src":"6485:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6472:3:18"},"nodeType":"YulFunctionCall","src":"6472:15:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6466:2:18"},"nodeType":"YulFunctionCall","src":"6466:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6452:2:18"},"nodeType":"YulFunctionCall","src":"6452:37:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6445:6:18"},"nodeType":"YulFunctionCall","src":"6445:45:18"},"nodeType":"YulIf","src":"6442:71:18"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6382:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"6385:1:18","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6391:7:18","type":""}],"src":"6351:168:18"},{"body":{"nodeType":"YulBlock","src":"6570:102:18","statements":[{"nodeType":"YulAssignment","src":"6580:38:18","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6595:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"6598:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6591:3:18"},"nodeType":"YulFunctionCall","src":"6591:12:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6609:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"6612:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6605:3:18"},"nodeType":"YulFunctionCall","src":"6605:12:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6587:3:18"},"nodeType":"YulFunctionCall","src":"6587:31:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6580:3:18"}]},{"body":{"nodeType":"YulBlock","src":"6644:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6646:16:18"},"nodeType":"YulFunctionCall","src":"6646:18:18"},"nodeType":"YulExpressionStatement","src":"6646:18:18"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"6633:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"6638:4:18","type":"","value":"0xff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6630:2:18"},"nodeType":"YulFunctionCall","src":"6630:13:18"},"nodeType":"YulIf","src":"6627:39:18"}]},"name":"checked_add_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6553:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"6556:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6562:3:18","type":""}],"src":"6524:148:18"},{"body":{"nodeType":"YulBlock","src":"6725:152:18","statements":[{"nodeType":"YulAssignment","src":"6735:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6747:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"6750:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6743:3:18"},"nodeType":"YulFunctionCall","src":"6743:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6735:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"6761:19:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6775:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"6778:1:18","type":"","value":"0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6771:3:18"},"nodeType":"YulFunctionCall","src":"6771:9:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6765:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6849:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6851:16:18"},"nodeType":"YulFunctionCall","src":"6851:18:18"},"nodeType":"YulExpressionStatement","src":"6851:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6806:2:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6799:6:18"},"nodeType":"YulFunctionCall","src":"6799:10:18"},{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"6815:4:18"},{"name":"x","nodeType":"YulIdentifier","src":"6821:1:18"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"6811:3:18"},"nodeType":"YulFunctionCall","src":"6811:12:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6795:3:18"},"nodeType":"YulFunctionCall","src":"6795:29:18"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6830:2:18"},{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"6838:4:18"},{"name":"x","nodeType":"YulIdentifier","src":"6844:1:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6834:3:18"},"nodeType":"YulFunctionCall","src":"6834:12:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6826:3:18"},"nodeType":"YulFunctionCall","src":"6826:21:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6792:2:18"},"nodeType":"YulFunctionCall","src":"6792:56:18"},"nodeType":"YulIf","src":"6789:82:18"}]},"name":"checked_sub_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6707:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"6710:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6716:4:18","type":""}],"src":"6677:200:18"},{"body":{"nodeType":"YulBlock","src":"6929:169:18","statements":[{"nodeType":"YulAssignment","src":"6939:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6950:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"6953:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6946:3:18"},"nodeType":"YulFunctionCall","src":"6946:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6939:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"6964:21:18","value":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"6978:3:18"},{"name":"y","nodeType":"YulIdentifier","src":"6983:1:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6974:3:18"},"nodeType":"YulFunctionCall","src":"6974:11:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6968:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6994:19:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7008:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"7011:1:18","type":"","value":"0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7004:3:18"},"nodeType":"YulFunctionCall","src":"7004:9:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6998:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7070:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7072:16:18"},"nodeType":"YulFunctionCall","src":"7072:18:18"},"nodeType":"YulExpressionStatement","src":"7072:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7039:2:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7032:6:18"},"nodeType":"YulFunctionCall","src":"7032:10:18"},{"name":"_1","nodeType":"YulIdentifier","src":"7044:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7028:3:18"},"nodeType":"YulFunctionCall","src":"7028:19:18"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7053:2:18"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7064:2:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7057:6:18"},"nodeType":"YulFunctionCall","src":"7057:10:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7049:3:18"},"nodeType":"YulFunctionCall","src":"7049:19:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7025:2:18"},"nodeType":"YulFunctionCall","src":"7025:44:18"},"nodeType":"YulIf","src":"7022:70:18"}]},"name":"checked_add_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6912:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"6915:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6921:3:18","type":""}],"src":"6882:216:18"},{"body":{"nodeType":"YulBlock","src":"7135:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7152:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7159:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7164:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7155:3:18"},"nodeType":"YulFunctionCall","src":"7155:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7145:6:18"},"nodeType":"YulFunctionCall","src":"7145:31:18"},"nodeType":"YulExpressionStatement","src":"7145:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7192:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7195:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7185:6:18"},"nodeType":"YulFunctionCall","src":"7185:15:18"},"nodeType":"YulExpressionStatement","src":"7185:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7216:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7219:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7209:6:18"},"nodeType":"YulFunctionCall","src":"7209:15:18"},"nodeType":"YulExpressionStatement","src":"7209:15:18"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"7103:127:18"},{"body":{"nodeType":"YulBlock","src":"7280:148:18","statements":[{"body":{"nodeType":"YulBlock","src":"7303:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"7305:16:18"},"nodeType":"YulFunctionCall","src":"7305:18:18"},"nodeType":"YulExpressionStatement","src":"7305:18:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7300:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7293:6:18"},"nodeType":"YulFunctionCall","src":"7293:9:18"},"nodeType":"YulIf","src":"7290:35:18"},{"body":{"nodeType":"YulBlock","src":"7376:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7378:16:18"},"nodeType":"YulFunctionCall","src":"7378:18:18"},"nodeType":"YulExpressionStatement","src":"7378:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7344:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7351:3:18","type":"","value":"255"},{"kind":"number","nodeType":"YulLiteral","src":"7356:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7347:3:18"},"nodeType":"YulFunctionCall","src":"7347:11:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7341:2:18"},"nodeType":"YulFunctionCall","src":"7341:18:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7364:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7371:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7367:3:18"},"nodeType":"YulFunctionCall","src":"7367:6:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7361:2:18"},"nodeType":"YulFunctionCall","src":"7361:13:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7337:3:18"},"nodeType":"YulFunctionCall","src":"7337:38:18"},"nodeType":"YulIf","src":"7334:64:18"},{"nodeType":"YulAssignment","src":"7407:15:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7417:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"7420:1:18"}],"functionName":{"name":"sdiv","nodeType":"YulIdentifier","src":"7412:4:18"},"nodeType":"YulFunctionCall","src":"7412:10:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7407:1:18"}]}]},"name":"checked_div_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7265:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"7268:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"7274:1:18","type":""}],"src":"7235:193:18"},{"body":{"nodeType":"YulBlock","src":"7479:74:18","statements":[{"body":{"nodeType":"YulBlock","src":"7502:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"7504:16:18"},"nodeType":"YulFunctionCall","src":"7504:18:18"},"nodeType":"YulExpressionStatement","src":"7504:18:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7499:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7492:6:18"},"nodeType":"YulFunctionCall","src":"7492:9:18"},"nodeType":"YulIf","src":"7489:35:18"},{"nodeType":"YulAssignment","src":"7533:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7542:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"7545:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7538:3:18"},"nodeType":"YulFunctionCall","src":"7538:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7533:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7464:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"7467:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"7473:1:18","type":""}],"src":"7433:120:18"},{"body":{"nodeType":"YulBlock","src":"7765:266:18","statements":[{"nodeType":"YulAssignment","src":"7775:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7787:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7798:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7783:3:18"},"nodeType":"YulFunctionCall","src":"7783:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7775:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7818:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7843:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7836:6:18"},"nodeType":"YulFunctionCall","src":"7836:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7829:6:18"},"nodeType":"YulFunctionCall","src":"7829:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7811:6:18"},"nodeType":"YulFunctionCall","src":"7811:41:18"},"nodeType":"YulExpressionStatement","src":"7811:41:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7872:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7883:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7868:3:18"},"nodeType":"YulFunctionCall","src":"7868:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"7888:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7861:6:18"},"nodeType":"YulFunctionCall","src":"7861:34:18"},"nodeType":"YulExpressionStatement","src":"7861:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7915:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7926:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7911:3:18"},"nodeType":"YulFunctionCall","src":"7911:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"7931:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7904:6:18"},"nodeType":"YulFunctionCall","src":"7904:34:18"},"nodeType":"YulExpressionStatement","src":"7904:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7958:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7969:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7954:3:18"},"nodeType":"YulFunctionCall","src":"7954:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"7974:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7947:6:18"},"nodeType":"YulFunctionCall","src":"7947:34:18"},"nodeType":"YulExpressionStatement","src":"7947:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8001:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8012:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7997:3:18"},"nodeType":"YulFunctionCall","src":"7997:19:18"},{"name":"value4","nodeType":"YulIdentifier","src":"8018:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7990:6:18"},"nodeType":"YulFunctionCall","src":"7990:35:18"},"nodeType":"YulExpressionStatement","src":"7990:35:18"}]},"name":"abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7702:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7713:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7721:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7729:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7737:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7745:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7756:4:18","type":""}],"src":"7558:473:18"},{"body":{"nodeType":"YulBlock","src":"8117:103:18","statements":[{"body":{"nodeType":"YulBlock","src":"8163:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8172:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8175:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8165:6:18"},"nodeType":"YulFunctionCall","src":"8165:12:18"},"nodeType":"YulExpressionStatement","src":"8165:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8138:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"8147:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8134:3:18"},"nodeType":"YulFunctionCall","src":"8134:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"8159:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8130:3:18"},"nodeType":"YulFunctionCall","src":"8130:32:18"},"nodeType":"YulIf","src":"8127:52:18"},{"nodeType":"YulAssignment","src":"8188:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8204:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8198:5:18"},"nodeType":"YulFunctionCall","src":"8198:16:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8188:6:18"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8083:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8094:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8106:6:18","type":""}],"src":"8036:184:18"},{"body":{"nodeType":"YulBlock","src":"8289:358:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8299:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8314:1:18","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"8303:7:18","type":""}]},{"nodeType":"YulAssignment","src":"8324:16:18","value":{"name":"power_1","nodeType":"YulIdentifier","src":"8333:7:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8324:5:18"}]},{"nodeType":"YulAssignment","src":"8349:13:18","value":{"name":"_base","nodeType":"YulIdentifier","src":"8357:5:18"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"8349:4:18"}]},{"body":{"nodeType":"YulBlock","src":"8413:228:18","statements":[{"body":{"nodeType":"YulBlock","src":"8458:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8460:16:18"},"nodeType":"YulFunctionCall","src":"8460:18:18"},"nodeType":"YulExpressionStatement","src":"8460:18:18"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"8433:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8447:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8443:3:18"},"nodeType":"YulFunctionCall","src":"8443:6:18"},{"name":"base","nodeType":"YulIdentifier","src":"8451:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8439:3:18"},"nodeType":"YulFunctionCall","src":"8439:17:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8430:2:18"},"nodeType":"YulFunctionCall","src":"8430:27:18"},"nodeType":"YulIf","src":"8427:53:18"},{"body":{"nodeType":"YulBlock","src":"8519:29:18","statements":[{"nodeType":"YulAssignment","src":"8521:25:18","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"8534:5:18"},{"name":"base","nodeType":"YulIdentifier","src":"8541:4:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8530:3:18"},"nodeType":"YulFunctionCall","src":"8530:16:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8521:5:18"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"8500:8:18"},{"name":"power_1","nodeType":"YulIdentifier","src":"8510:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8496:3:18"},"nodeType":"YulFunctionCall","src":"8496:22:18"},"nodeType":"YulIf","src":"8493:55:18"},{"nodeType":"YulAssignment","src":"8561:23:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"8573:4:18"},{"name":"base","nodeType":"YulIdentifier","src":"8579:4:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8569:3:18"},"nodeType":"YulFunctionCall","src":"8569:15:18"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"8561:4:18"}]},{"nodeType":"YulAssignment","src":"8597:34:18","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"8613:7:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"8622:8:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8609:3:18"},"nodeType":"YulFunctionCall","src":"8609:22:18"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"8597:8:18"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"8382:8:18"},{"name":"power_1","nodeType":"YulIdentifier","src":"8392:7:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8379:2:18"},"nodeType":"YulFunctionCall","src":"8379:21:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8401:3:18","statements":[]},"pre":{"nodeType":"YulBlock","src":"8375:3:18","statements":[]},"src":"8371:270:18"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"8253:5:18","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"8260:8:18","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"8273:5:18","type":""},{"name":"base","nodeType":"YulTypedName","src":"8280:4:18","type":""}],"src":"8225:422:18"},{"body":{"nodeType":"YulBlock","src":"8711:747:18","statements":[{"body":{"nodeType":"YulBlock","src":"8749:52:18","statements":[{"nodeType":"YulAssignment","src":"8763:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8772:1:18","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8763:5:18"}]},{"nodeType":"YulLeave","src":"8786:5:18"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"8731:8:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8724:6:18"},"nodeType":"YulFunctionCall","src":"8724:16:18"},"nodeType":"YulIf","src":"8721:80:18"},{"body":{"nodeType":"YulBlock","src":"8834:52:18","statements":[{"nodeType":"YulAssignment","src":"8848:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8857:1:18","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8848:5:18"}]},{"nodeType":"YulLeave","src":"8871:5:18"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"8820:4:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8813:6:18"},"nodeType":"YulFunctionCall","src":"8813:12:18"},"nodeType":"YulIf","src":"8810:76:18"},{"cases":[{"body":{"nodeType":"YulBlock","src":"8922:52:18","statements":[{"nodeType":"YulAssignment","src":"8936:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8945:1:18","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"8936:5:18"}]},{"nodeType":"YulLeave","src":"8959:5:18"}]},"nodeType":"YulCase","src":"8915:59:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8920:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8990:123:18","statements":[{"body":{"nodeType":"YulBlock","src":"9025:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9027:16:18"},"nodeType":"YulFunctionCall","src":"9027:18:18"},"nodeType":"YulExpressionStatement","src":"9027:18:18"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9010:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"9020:3:18","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9007:2:18"},"nodeType":"YulFunctionCall","src":"9007:17:18"},"nodeType":"YulIf","src":"9004:43:18"},{"nodeType":"YulAssignment","src":"9060:25:18","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9073:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"9083:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9069:3:18"},"nodeType":"YulFunctionCall","src":"9069:16:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9060:5:18"}]},{"nodeType":"YulLeave","src":"9098:5:18"}]},"nodeType":"YulCase","src":"8983:130:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8988:1:18","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"8902:4:18"},"nodeType":"YulSwitch","src":"8895:218:18"},{"body":{"nodeType":"YulBlock","src":"9211:70:18","statements":[{"nodeType":"YulAssignment","src":"9225:28:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9238:4:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"9244:8:18"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"9234:3:18"},"nodeType":"YulFunctionCall","src":"9234:19:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9225:5:18"}]},{"nodeType":"YulLeave","src":"9266:5:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9135:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"9141:2:18","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9132:2:18"},"nodeType":"YulFunctionCall","src":"9132:12:18"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9149:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"9159:2:18","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9146:2:18"},"nodeType":"YulFunctionCall","src":"9146:16:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9128:3:18"},"nodeType":"YulFunctionCall","src":"9128:35:18"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9172:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"9178:3:18","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9169:2:18"},"nodeType":"YulFunctionCall","src":"9169:13:18"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9187:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"9197:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9184:2:18"},"nodeType":"YulFunctionCall","src":"9184:16:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9165:3:18"},"nodeType":"YulFunctionCall","src":"9165:36:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9125:2:18"},"nodeType":"YulFunctionCall","src":"9125:77:18"},"nodeType":"YulIf","src":"9122:159:18"},{"nodeType":"YulVariableDeclaration","src":"9290:57:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9332:4:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"9338:8:18"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"9313:18:18"},"nodeType":"YulFunctionCall","src":"9313:34:18"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"9294:7:18","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"9303:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"9392:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9394:16:18"},"nodeType":"YulFunctionCall","src":"9394:18:18"},"nodeType":"YulExpressionStatement","src":"9394:18:18"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"9362:7:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9379:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9375:3:18"},"nodeType":"YulFunctionCall","src":"9375:6:18"},{"name":"base_1","nodeType":"YulIdentifier","src":"9383:6:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9371:3:18"},"nodeType":"YulFunctionCall","src":"9371:19:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9359:2:18"},"nodeType":"YulFunctionCall","src":"9359:32:18"},"nodeType":"YulIf","src":"9356:58:18"},{"nodeType":"YulAssignment","src":"9423:29:18","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"9436:7:18"},{"name":"base_1","nodeType":"YulIdentifier","src":"9445:6:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9432:3:18"},"nodeType":"YulFunctionCall","src":"9432:20:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9423:5:18"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"8682:4:18","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"8688:8:18","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"8701:5:18","type":""}],"src":"8652:806:18"},{"body":{"nodeType":"YulBlock","src":"9531:72:18","statements":[{"nodeType":"YulAssignment","src":"9541:56:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"9571:4:18"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"9581:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"9591:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9577:3:18"},"nodeType":"YulFunctionCall","src":"9577:19:18"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"9550:20:18"},"nodeType":"YulFunctionCall","src":"9550:47:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"9541:5:18"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"9502:4:18","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"9508:8:18","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"9521:5:18","type":""}],"src":"9463:140:18"},{"body":{"nodeType":"YulBlock","src":"9765:188:18","statements":[{"nodeType":"YulAssignment","src":"9775:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9787:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9798:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9783:3:18"},"nodeType":"YulFunctionCall","src":"9783:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9775:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9817:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9832:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9848:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9853:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9844:3:18"},"nodeType":"YulFunctionCall","src":"9844:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"9857:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9840:3:18"},"nodeType":"YulFunctionCall","src":"9840:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9828:3:18"},"nodeType":"YulFunctionCall","src":"9828:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9810:6:18"},"nodeType":"YulFunctionCall","src":"9810:51:18"},"nodeType":"YulExpressionStatement","src":"9810:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9881:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9892:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9877:3:18"},"nodeType":"YulFunctionCall","src":"9877:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"9897:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9870:6:18"},"nodeType":"YulFunctionCall","src":"9870:34:18"},"nodeType":"YulExpressionStatement","src":"9870:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9924:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9935:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9920:3:18"},"nodeType":"YulFunctionCall","src":"9920:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"9940:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9913:6:18"},"nodeType":"YulFunctionCall","src":"9913:34:18"},"nodeType":"YulExpressionStatement","src":"9913:34:18"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9718:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9729:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9737:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9745:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9756:4:18","type":""}],"src":"9608:345:18"},{"body":{"nodeType":"YulBlock","src":"10115:218:18","statements":[{"nodeType":"YulAssignment","src":"10125:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10137:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10148:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10133:3:18"},"nodeType":"YulFunctionCall","src":"10133:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10125:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"10160:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10178:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10183:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10174:3:18"},"nodeType":"YulFunctionCall","src":"10174:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"10187:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10170:3:18"},"nodeType":"YulFunctionCall","src":"10170:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10164:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10205:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10220:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"10228:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10216:3:18"},"nodeType":"YulFunctionCall","src":"10216:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10198:6:18"},"nodeType":"YulFunctionCall","src":"10198:34:18"},"nodeType":"YulExpressionStatement","src":"10198:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10252:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10263:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10248:3:18"},"nodeType":"YulFunctionCall","src":"10248:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10272:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"10280:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10268:3:18"},"nodeType":"YulFunctionCall","src":"10268:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10241:6:18"},"nodeType":"YulFunctionCall","src":"10241:43:18"},"nodeType":"YulExpressionStatement","src":"10241:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10304:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10315:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10300:3:18"},"nodeType":"YulFunctionCall","src":"10300:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"10320:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10293:6:18"},"nodeType":"YulFunctionCall","src":"10293:34:18"},"nodeType":"YulExpressionStatement","src":"10293:34:18"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10068:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10079:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10087:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10095:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10106:4:18","type":""}],"src":"9958:375:18"},{"body":{"nodeType":"YulBlock","src":"10467:119:18","statements":[{"nodeType":"YulAssignment","src":"10477:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10489:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10500:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10485:3:18"},"nodeType":"YulFunctionCall","src":"10485:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10477:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10519:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"10530:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10512:6:18"},"nodeType":"YulFunctionCall","src":"10512:25:18"},"nodeType":"YulExpressionStatement","src":"10512:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10557:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10568:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10553:3:18"},"nodeType":"YulFunctionCall","src":"10553:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"10573:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10546:6:18"},"nodeType":"YulFunctionCall","src":"10546:34:18"},"nodeType":"YulExpressionStatement","src":"10546:34:18"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10428:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10439:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10447:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10458:4:18","type":""}],"src":"10338:248:18"},{"body":{"nodeType":"YulBlock","src":"10669:167:18","statements":[{"body":{"nodeType":"YulBlock","src":"10715:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10724:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10727:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10717:6:18"},"nodeType":"YulFunctionCall","src":"10717:12:18"},"nodeType":"YulExpressionStatement","src":"10717:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10690:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"10699:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10686:3:18"},"nodeType":"YulFunctionCall","src":"10686:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"10711:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10682:3:18"},"nodeType":"YulFunctionCall","src":"10682:32:18"},"nodeType":"YulIf","src":"10679:52:18"},{"nodeType":"YulVariableDeclaration","src":"10740:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10759:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10753:5:18"},"nodeType":"YulFunctionCall","src":"10753:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10744:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10800:5:18"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"10778:21:18"},"nodeType":"YulFunctionCall","src":"10778:28:18"},"nodeType":"YulExpressionStatement","src":"10778:28:18"},{"nodeType":"YulAssignment","src":"10815:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"10825:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10815:6:18"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10635:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10646:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10658:6:18","type":""}],"src":"10591:245:18"},{"body":{"nodeType":"YulBlock","src":"10873:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10890:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10897:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10902:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10893:3:18"},"nodeType":"YulFunctionCall","src":"10893:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10883:6:18"},"nodeType":"YulFunctionCall","src":"10883:31:18"},"nodeType":"YulExpressionStatement","src":"10883:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10930:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10933:4:18","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10923:6:18"},"nodeType":"YulFunctionCall","src":"10923:15:18"},"nodeType":"YulExpressionStatement","src":"10923:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10954:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10957:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10947:6:18"},"nodeType":"YulFunctionCall","src":"10947:15:18"},"nodeType":"YulExpressionStatement","src":"10947:15:18"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"10841:127:18"},{"body":{"nodeType":"YulBlock","src":"11009:121:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11019:23:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11034:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"11037:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11030:3:18"},"nodeType":"YulFunctionCall","src":"11030:12:18"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"11023:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"11066:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"11068:16:18"},"nodeType":"YulFunctionCall","src":"11068:18:18"},"nodeType":"YulExpressionStatement","src":"11068:18:18"}]},"condition":{"arguments":[{"name":"y_1","nodeType":"YulIdentifier","src":"11061:3:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11054:6:18"},"nodeType":"YulFunctionCall","src":"11054:11:18"},"nodeType":"YulIf","src":"11051:37:18"},{"nodeType":"YulAssignment","src":"11097:27:18","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11110:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"11113:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11106:3:18"},"nodeType":"YulFunctionCall","src":"11106:12:18"},{"name":"y_1","nodeType":"YulIdentifier","src":"11120:3:18"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"11102:3:18"},"nodeType":"YulFunctionCall","src":"11102:22:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"11097:1:18"}]}]},"name":"mod_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10994:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"10997:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"11003:1:18","type":""}],"src":"10973:157:18"},{"body":{"nodeType":"YulBlock","src":"11264:145:18","statements":[{"nodeType":"YulAssignment","src":"11274:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11286:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11297:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11282:3:18"},"nodeType":"YulFunctionCall","src":"11282:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11274:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11316:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11331:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11347:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11352:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11343:3:18"},"nodeType":"YulFunctionCall","src":"11343:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"11356:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11339:3:18"},"nodeType":"YulFunctionCall","src":"11339:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11327:3:18"},"nodeType":"YulFunctionCall","src":"11327:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11309:6:18"},"nodeType":"YulFunctionCall","src":"11309:51:18"},"nodeType":"YulExpressionStatement","src":"11309:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11380:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11391:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11376:3:18"},"nodeType":"YulFunctionCall","src":"11376:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"11396:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11369:6:18"},"nodeType":"YulFunctionCall","src":"11369:34:18"},"nodeType":"YulExpressionStatement","src":"11369:34:18"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11225:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11236:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11244:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11255:4:18","type":""}],"src":"11135:274:18"},{"body":{"nodeType":"YulBlock","src":"11551:150:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11561:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11581:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11575:5:18"},"nodeType":"YulFunctionCall","src":"11575:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11565:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11636:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"11644:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11632:3:18"},"nodeType":"YulFunctionCall","src":"11632:17:18"},{"name":"pos","nodeType":"YulIdentifier","src":"11651:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"11656:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11597:34:18"},"nodeType":"YulFunctionCall","src":"11597:66:18"},"nodeType":"YulExpressionStatement","src":"11597:66:18"},{"nodeType":"YulAssignment","src":"11672:23:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11683:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"11688:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11679:3:18"},"nodeType":"YulFunctionCall","src":"11679:16:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11672:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11527:3:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11532:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11543:3:18","type":""}],"src":"11414:287:18"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_struct$_Position_$5415_memory_ptr__to_t_struct$_Position_$5415_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), iszero(iszero(mload(add(value0, 0x60)))))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1047__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_bool(value)\n        value3 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function negate_t_int256(value) -> ret\n    {\n        if eq(value, shl(255, 1)) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n    function checked_sub_t_int256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        let _1 := slt(y, 0)\n        if or(and(iszero(_1), sgt(diff, x)), and(_1, slt(diff, x))) { panic_error_0x11() }\n    }\n    function checked_add_t_int256(x, y) -> sum\n    {\n        sum := add(x, y)\n        let _1 := slt(sum, y)\n        let _2 := slt(x, 0)\n        if or(and(iszero(_2), _1), and(_2, iszero(_1))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_int256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        if and(eq(x, shl(255, 1)), eq(y, not(0))) { panic_error_0x11() }\n        r := sdiv(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function mod_t_uint8(x, y) -> r\n    {\n        let y_1 := and(y, 0xff)\n        if iszero(y_1) { panic_error_0x12() }\n        r := mod(and(x, 0xff), y_1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1070":[{"length":32,"start":866},{"length":32,"start":3148},{"length":32,"start":5010},{"length":32,"start":5188}],"1072":[{"length":32,"start":2023}],"5365":[{"length":32,"start":1018},{"length":32,"start":2724}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106102325760003560e01c80638da5cb5b11610130578063c6e6f592116100b8578063dd5b2f521161007c578063dd5b2f52146104fc578063dd62ed3e14610505578063e75722301461053e578063ef8b30f71461049c578063f2fde38b1461054f57600080fd5b8063c6e6f5921461049c578063cc265da9146104af578063ce96cb77146104c3578063d4d5c230146104d6578063d905777e146104e957600080fd5b8063a9059cbb116100ff578063a9059cbb14610450578063b3d7f6b914610463578063b460af9414610476578063ba08765214610489578063c63d75b61461039a57600080fd5b80638da5cb5b1461041c57806394bf804d1461042d57806395d89b41146104405780639f0066511461044857600080fd5b806323b872dd116101be5780634cdad506116101825780634cdad506146102705780636e553f65146103af57806370a08231146103c2578063715018a6146103eb578063798cd94c146103f557600080fd5b806323b872dd1461032b5780632bdb4e731461033e578063313ce5671461034657806338d52e0f14610360578063402d267d1461039a57600080fd5b8063095ea7b311610205578063095ea7b3146102835780630a28a477146102a6578063169fffe2146102b957806316c19739146102cc57806318160ddd1461032357600080fd5b806301e1d114146102375780630258d92a1461025257806306fdde031461025b57806307a2d13a14610270575b600080fd5b61023f610562565b6040519081526020015b60405180910390f35b61023f600e5481565b6102636105cf565b6040516102499190611844565b61023f61027e366004611877565b610661565b6102966102913660046118ac565b610674565b6040519015158152602001610249565b61023f6102b4366004611877565b61068c565b61023f6102c73660046118d6565b610699565b6102df6102da3660046118f8565b6106b0565b6040516102499190600060a0820190508251825260208301516020830152604083015160408301526060830151151560608301526080830151608083015292915050565b60025461023f565b610296610339366004611913565b6107b9565b61023f600f81565b61034e6107df565b60405160ff9091168152602001610249565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610249565b61023f6103a83660046118f8565b5060001990565b61023f6103bd36600461194f565b610810565b61023f6103d03660046118f8565b6001600160a01b031660009081526020819052604090205490565b6103f3610848565b005b6103827f000000000000000000000000000000000000000000000000000000000000000081565b6005546001600160a01b0316610382565b61023f61043b36600461194f565b61085c565b610263610893565b61023f6108a2565b61029661045e3660046118ac565b610928565b61023f610471366004611877565b610936565b61023f61048436600461197b565b610943565b61023f61049736600461197b565b61097c565b61023f6104aa366004611877565b6109b4565b6102966104bd3660046119c5565b50600190565b61023f6104d13660046118f8565b6109c1565b6103f36104e43660046119e2565b6109e5565b61023f6104f73660046118f8565b610ba9565b61023f600c5481565b61023f610513366004611a23565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61023f61054c366004611877565b90565b6103f361055d3660046118f8565b610bc7565b60008061056d6108a2565b905060008113156105a657600c5461058482610c0a565b61058c610c34565b6105969190611a63565b6105a09190611a63565b91505090565b6105af81611a76565b9050600c546105bd82610c0a565b6105c5610c34565b6105969190611a92565b6060600380546105de90611aa5565b80601f016020809104026020016040519081016040528092919081815260200182805461060a90611aa5565b80156106575780601f1061062c57610100808354040283529160200191610657565b820191906000526020600020905b81548152906001019060200180831161063a57829003601f168201915b5050505050905090565b600061066e826000610cbf565b92915050565b600033610682818585610cf9565b5060019392505050565b600061066e826001610d0b565b600081816106a78583611adf565b95945050505050565b6106e46040518060a00160405280600081526020016000815260200160008152602001600015158152602001600081525090565b6001600160a01b0382166000908152600b60209081526040808320815160a0810183528154808252600183015494820194909452600282015492810192909252600381015460ff1615156060830152600401546080820152910361075b57604051632f4cb18560e21b815260040160405180910390fd5b50506001600160a01b03166000908152600b6020908152604091829020825160a08101845281548152600182015492810192909252600281015492820192909252600382015460ff1615156060820152600490910154608082015290565b6000336107c7858285610d3b565b6107d2858585610da6565b60019150505b9392505050565b600061080b817f0000000000000000000000000000000000000000000000000000000000000000611af6565b905090565b600061081a610e05565b600083600e5461082a9190611a92565b90506108368484610e2f565b600e91909155905061066e6001600655565b610850610e55565b61085a6000610e82565b565b6000610866610e05565b6108708383610ed4565b905080600e60008282546108849190611a92565b9091555050600160065561066e565b6060600480546105de90611aa5565b6000806108b3600760000154610ef2565b6108cb6108c66007600101546001610699565b610ef2565b6108d59190611b0f565b905060006108ec6108c66009600101546001610699565b6009546108f890610ef2565b6109029190611b0f565b9050670de0b6b3a76400006109178383611b36565b6109219190611b6c565b9250505090565b600033610682818585610da6565b600061066e826001610cbf565b600061094d610e05565b600084600e5461095d9190611a63565b905061096a858585610f1f565b600e9190915590506107d86001600655565b6000610986610e05565b610991848484610f6e565b905080600e60008282546109a59190611a63565b909155505060016006556107d8565b600061066e826000610d0b565b6001600160a01b03811660009081526020819052604081205461066e906000610cbf565b60008311610a0657604051637b92cb4360e01b815260040160405180910390fd5b60008411610a275760405163062a73c560e41b815260040160405180910390fd5b336000908152600b602052604090205415610a5557604051630c7b567d60e31b815260040160405180910390fd5b60006040518060a001604052808581526020018481526020018487610a7a9190611b9a565b81526020018315158152602001428152509050610a978184610fbd565b610acc6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333087611072565b8051600c8054600090610ae0908490611a92565b9091555050336000908152600b6020908152604091829020835181559083015160018201559082015160028201819055606083015160038301805460ff19169115159190911790556080830151600490920191909155610b42908690846110d9565b606081810151604080840151602080860151835194151585529084018a9052838301899052938301526080820192909252905133917f0e8f4b81343afa64bc4ddcfbf2d80e883e0ddfc6663c400ca09da13d1d28d588919081900360a00190a25050505050565b6001600160a01b03811660009081526020819052604081205461066e565b610bcf610e55565b6001600160a01b038116610bfe57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610c0781610e82565b50565b600080821215610c3057604051635467221960e11b815260048101839052602401610bf5565b5090565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610c9b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080b9190611bae565b60006107d8610ccc610562565b610cd7906001611a92565b610ce36000600a611cab565b600254610cf09190611a92565b85919085611152565b610d0683838360016111a1565b505050565b60006107d8610d1b82600a611cab565b600254610d289190611a92565b610d30610562565b610cf0906001611a92565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610da05781811015610d9157828183604051637dc7a0d960e11b8152600401610bf593929190611cba565b610da0848484840360006111a1565b50505050565b6001600160a01b038316610dd057604051634b637e8f60e11b815260006004820152602401610bf5565b6001600160a01b038216610dfa5760405163ec442f0560e01b815260006004820152602401610bf5565b610d06838383611276565b600260065403610e2857604051633ee5aeb560e01b815260040160405180910390fd5b6002600655565b60006000196000610e3f856109b4565b9050610e4d3385878461138d565b949350505050565b6005546001600160a01b0316331461085a5760405163118cdaa760e01b8152336004820152602401610bf5565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006000196000610ee485610936565b9050610e4d3385838861138d565b60006001600160ff1b03821115610c305760405163123baf0360e11b815260048101839052602401610bf5565b600080610f2b836109c1565b905080851115610f5457828582604051633fa733bb60e21b8152600401610bf593929190611cba565b6000610f5f8661068c565b90506106a73386868985611411565b600080610f7a83610ba9565b905080851115610fa357828582604051632e52afbb60e21b8152600401610bf593929190611cba565b6000610fae86610661565b90506106a7338686848a611411565b6000610fc983836114d1565b9050600081610fdb8560000151610ef2565b610fe59190611b36565b13611003576040516327ad135d60e11b815260040160405180910390fd5b6000611025826110168660000151610ef2565b6110209190611b36565b610c0a565b90506000818560200151866040015161103e9190611adf565b6110489190611b9a565b9050600f811061106b57604051633e5ff32760e21b815260040160405180910390fd5b5050505050565b6040516001600160a01b038481166024830152838116604483015260648201839052610da09186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611533565b80156111195782600760000160008282546110f49190611a92565b90915550506008805483919060009061110e908490611a92565b90915550610d069050565b826009600001600082825461112e9190611a92565b9091555050600a8054839190600090611148908490611a92565b9091555050505050565b600080611160868686611596565b905061116b8361165a565b801561118757506000848061118257611182611b56565b868809115b156106a757611197600182611a92565b9695505050505050565b6001600160a01b0384166111cb5760405163e602df0560e01b815260006004820152602401610bf5565b6001600160a01b0383166111f557604051634a1406b160e11b815260006004820152602401610bf5565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610da057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161126891815260200190565b60405180910390a350505050565b6001600160a01b0383166112a15780600260008282546112969190611a92565b909155506113009050565b6001600160a01b038316600090815260208190526040902054818110156112e15783818360405163391434e360e21b8152600401610bf593929190611cba565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661131c5760028054829003905561133b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161138091815260200190565b60405180910390a3505050565b6113b97f0000000000000000000000000000000000000000000000000000000000000000853085611072565b6113c38382611687565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051611268929190918252602082015260400190565b826001600160a01b0316856001600160a01b03161461143557611435838683610d3b565b61143f83826116c1565b61146a7f000000000000000000000000000000000000000000000000000000000000000085846116f7565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db85856040516114c2929190918252602082015260400190565b60405180910390a45050505050565b6000806114e78385604001516108c69190611adf565b90506000611502856020015186604001516108c69190611adf565b9050846060015115611521576115188183611b0f565b9250505061066e565b6115188282611b0f565b505092915050565b60006115486001600160a01b03841683611728565b9050805160001415801561156d57508080602001905181019061156b9190611cdb565b155b15610d0657604051635274afe760e01b81526001600160a01b0384166004820152602401610bf5565b60008383028160001985870982811083820303915050806000036115cd578382816115c3576115c3611b56565b04925050506107d8565b8084116115ed5760405163227bc15360e01b815260040160405180910390fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000600282600381111561167057611670611cf8565b61167a9190611d0e565b60ff166001149050919050565b6001600160a01b0382166116b15760405163ec442f0560e01b815260006004820152602401610bf5565b6116bd60008383611276565b5050565b6001600160a01b0382166116eb57604051634b637e8f60e11b815260006004820152602401610bf5565b6116bd82600083611276565b6040516001600160a01b03838116602483015260448201839052610d0691859182169063a9059cbb906064016110a7565b60606107d88383600084600080856001600160a01b0316848660405161174e9190611d30565b60006040518083038185875af1925050503d806000811461178b576040519150601f19603f3d011682016040523d82523d6000602084013e611790565b606091505b50915091506111978683836060826117b0576117ab826117f7565b6107d8565b81511580156117c757506001600160a01b0384163b155b156117f057604051639996b31560e01b81526001600160a01b0385166004820152602401610bf5565b50806107d8565b8051156118075780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60005b8381101561183b578181015183820152602001611823565b50506000910152565b6020815260008251806020840152611863816040850160208701611820565b601f01601f19169190910160400192915050565b60006020828403121561188957600080fd5b5035919050565b80356001600160a01b03811681146118a757600080fd5b919050565b600080604083850312156118bf57600080fd5b6118c883611890565b946020939093013593505050565b600080604083850312156118e957600080fd5b50508035926020909101359150565b60006020828403121561190a57600080fd5b6107d882611890565b60008060006060848603121561192857600080fd5b61193184611890565b925061193f60208501611890565b9150604084013590509250925092565b6000806040838503121561196257600080fd5b8235915061197260208401611890565b90509250929050565b60008060006060848603121561199057600080fd5b833592506119a060208501611890565b91506119ae60408501611890565b90509250925092565b8015158114610c0757600080fd5b6000602082840312156119d757600080fd5b81356107d8816119b7565b600080600080608085870312156119f857600080fd5b8435935060208501359250604085013591506060850135611a18816119b7565b939692955090935050565b60008060408385031215611a3657600080fd5b611a3f83611890565b915061197260208401611890565b634e487b7160e01b600052601160045260246000fd5b8181038181111561066e5761066e611a4d565b6000600160ff1b8201611a8b57611a8b611a4d565b5060000390565b8082018082111561066e5761066e611a4d565b600181811c90821680611ab957607f821691505b602082108103611ad957634e487b7160e01b600052602260045260246000fd5b50919050565b808202811582820484141761066e5761066e611a4d565b60ff818116838216019081111561066e5761066e611a4d565b8181036000831280158383131683831282161715611b2f57611b2f611a4d565b5092915050565b808201828112600083128015821682158216171561152b5761152b611a4d565b634e487b7160e01b600052601260045260246000fd5b600082611b7b57611b7b611b56565b600160ff1b821460001984141615611b9557611b95611a4d565b500590565b600082611ba957611ba9611b56565b500490565b600060208284031215611bc057600080fd5b5051919050565b600181815b80851115611c02578160001904821115611be857611be8611a4d565b80851615611bf557918102915b93841c9390800290611bcc565b509250929050565b600082611c195750600161066e565b81611c265750600061066e565b8160018114611c3c5760028114611c4657611c62565b600191505061066e565b60ff841115611c5757611c57611a4d565b50506001821b61066e565b5060208310610133831016604e8410600b8410161715611c85575081810a61066e565b611c8f8383611bc7565b8060001904821115611ca357611ca3611a4d565b029392505050565b60006107d860ff841683611c0a565b6001600160a01b039390931683526020830191909152604082015260600190565b600060208284031215611ced57600080fd5b81516107d8816119b7565b634e487b7160e01b600052602160045260246000fd5b600060ff831680611d2157611d21611b56565b8060ff84160691505092915050565b60008251611d42818460208701611820565b919091019291505056fea2646970667358221220cffa4ce0f91f446a2c8f990a155173c691bff35ced68b07e4353033f7f01856064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xC6E6F592 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xDD5B2F52 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDD5B2F52 EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xE7572230 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xCC265DA9 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xCE96CB77 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xD4D5C230 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xD905777E EQ PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xB3D7F6B9 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0xB460AF94 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xBA087652 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xC63D75B6 EQ PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x9F006651 EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4CDAD506 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4CDAD506 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x798CD94C EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x2BDB4E73 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x402D267D EQ PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xA28A477 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x169FFFE2 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x16C19739 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x258D92A EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x270 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23F PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1844 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST PUSH2 0x296 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AC JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x249 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x23F PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x23F JUMP JUMPDEST PUSH2 0x296 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1913 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x23F PUSH1 0xF DUP2 JUMP JUMPDEST PUSH2 0x34E PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x249 JUMP JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x249 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST POP PUSH1 0x0 NOT SWAP1 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x848 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x382 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x382 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x194F JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST PUSH2 0x263 PUSH2 0x893 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x296 PUSH2 0x45E CALLDATASIZE PUSH1 0x4 PUSH2 0x18AC JUMP JUMPDEST PUSH2 0x928 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x471 CALLDATASIZE PUSH1 0x4 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x197B JUMP JUMPDEST PUSH2 0x943 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x197B JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST PUSH2 0x23F PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x296 PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x19C5 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x4D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x4E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19E2 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x4F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x23F PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x513 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x54C CALLDATASIZE PUSH1 0x4 PUSH2 0x1877 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x55D CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x56D PUSH2 0x8A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0xC SLOAD PUSH2 0x584 DUP3 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x58C PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5AF DUP2 PUSH2 0x1A76 JUMP JUMPDEST SWAP1 POP PUSH1 0xC SLOAD PUSH2 0x5BD DUP3 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x5C5 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x1AA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x60A SWAP1 PUSH2 0x1AA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x657 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x657 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x63A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E DUP3 PUSH1 0x0 PUSH2 0xCBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x682 DUP2 DUP6 DUP6 PUSH2 0xCF9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E DUP3 PUSH1 0x1 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 PUSH2 0x6A7 DUP6 DUP4 PUSH2 0x1ADF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6E4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP2 SUB PUSH2 0x75B JUMPI PUSH1 0x40 MLOAD PUSH4 0x2F4CB185 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7C7 DUP6 DUP3 DUP6 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x7D2 DUP6 DUP6 DUP6 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80B DUP2 PUSH32 0x0 PUSH2 0x1AF6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81A PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xE SLOAD PUSH2 0x82A SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 POP PUSH2 0x836 DUP5 DUP5 PUSH2 0xE2F JUMP JUMPDEST PUSH1 0xE SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x66E PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x850 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x85A PUSH1 0x0 PUSH2 0xE82 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x866 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x870 DUP4 DUP4 PUSH2 0xED4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH2 0x66E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8B3 PUSH1 0x7 PUSH1 0x0 ADD SLOAD PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0x8CB PUSH2 0x8C6 PUSH1 0x7 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH2 0x699 JUMP JUMPDEST PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0x8D5 SWAP2 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8EC PUSH2 0x8C6 PUSH1 0x9 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x8F8 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0x902 SWAP2 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x917 DUP4 DUP4 PUSH2 0x1B36 JUMP JUMPDEST PUSH2 0x921 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x682 DUP2 DUP6 DUP6 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E DUP3 PUSH1 0x1 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94D PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0xE SLOAD PUSH2 0x95D SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST SWAP1 POP PUSH2 0x96A DUP6 DUP6 DUP6 PUSH2 0xF1F JUMP JUMPDEST PUSH1 0xE SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP PUSH2 0x7D8 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x986 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x991 DUP5 DUP5 DUP5 PUSH2 0xF6E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9A5 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E DUP3 PUSH1 0x0 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x66E SWAP1 PUSH1 0x0 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA06 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7B92CB43 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH4 0x62A73C5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC7B567D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP8 PUSH2 0xA7A SWAP2 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH2 0xA97 DUP2 DUP5 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0xACC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP8 PUSH2 0x1072 JUMP JUMPDEST DUP1 MLOAD PUSH1 0xC DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xAE0 SWAP1 DUP5 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xB42 SWAP1 DUP7 SWAP1 DUP5 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x20 DUP1 DUP7 ADD MLOAD DUP4 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE SWAP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP4 DUP4 ADD DUP10 SWAP1 MSTORE SWAP4 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE8F4B81343AFA64BC4DDCFBF2D80E883E0DDFC6663C400CA09DA13D1D28D588 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x66E JUMP JUMPDEST PUSH2 0xBCF PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC07 DUP2 PUSH2 0xE82 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54672219 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D8 PUSH2 0xCCC PUSH2 0x562 JUMP JUMPDEST PUSH2 0xCD7 SWAP1 PUSH1 0x1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0xCE3 PUSH1 0x0 PUSH1 0xA PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xCF0 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST DUP6 SWAP2 SWAP1 DUP6 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0xD06 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D8 PUSH2 0xD1B DUP3 PUSH1 0xA PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xD28 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0xD30 PUSH2 0x562 JUMP JUMPDEST PUSH2 0xCF0 SWAP1 PUSH1 0x1 PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xDA0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD91 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0xDA0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x11A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDD0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0xD06 DUP4 DUP4 DUP4 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT PUSH1 0x0 PUSH2 0xE3F DUP6 PUSH2 0x9B4 JUMP JUMPDEST SWAP1 POP PUSH2 0xE4D CALLER DUP6 DUP8 DUP5 PUSH2 0x138D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT PUSH1 0x0 PUSH2 0xEE4 DUP6 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP PUSH2 0xE4D CALLER DUP6 DUP4 DUP9 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD PUSH4 0x123BAF03 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF2B DUP4 PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0xF54 JUMPI DUP3 DUP6 DUP3 PUSH1 0x40 MLOAD PUSH4 0x3FA733BB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP7 PUSH2 0x68C JUMP JUMPDEST SWAP1 POP PUSH2 0x6A7 CALLER DUP7 DUP7 DUP10 DUP6 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF7A DUP4 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0xFA3 JUMPI DUP3 DUP6 DUP3 PUSH1 0x40 MLOAD PUSH4 0x2E52AFBB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAE DUP7 PUSH2 0x661 JUMP JUMPDEST SWAP1 POP PUSH2 0x6A7 CALLER DUP7 DUP7 DUP5 DUP11 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC9 DUP4 DUP4 PUSH2 0x14D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0xFDB DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0xFE5 SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST SGT PUSH2 0x1003 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27AD135D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1025 DUP3 PUSH2 0x1016 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0x1020 SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST PUSH2 0xC0A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x103E SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH2 0x1048 SWAP2 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST SWAP1 POP PUSH1 0xF DUP2 LT PUSH2 0x106B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E5FF327 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xDA0 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1533 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1119 JUMPI DUP3 PUSH1 0x7 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10F4 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x110E SWAP1 DUP5 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD06 SWAP1 POP JUMP JUMPDEST DUP3 PUSH1 0x9 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x112E SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1148 SWAP1 DUP5 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1160 DUP7 DUP7 DUP7 PUSH2 0x1596 JUMP JUMPDEST SWAP1 POP PUSH2 0x116B DUP4 PUSH2 0x165A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1187 JUMPI POP PUSH1 0x0 DUP5 DUP1 PUSH2 0x1182 JUMPI PUSH2 0x1182 PUSH2 0x1B56 JUMP JUMPDEST DUP7 DUP9 MULMOD GT JUMPDEST ISZERO PUSH2 0x6A7 JUMPI PUSH2 0x1197 PUSH1 0x1 DUP3 PUSH2 0x1A92 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x11CB JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xDA0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1268 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12A1 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1300 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12E1 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x131C JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x133B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1380 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x13B9 PUSH32 0x0 DUP6 ADDRESS DUP6 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x13C3 DUP4 DUP3 PUSH2 0x1687 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1268 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1435 JUMPI PUSH2 0x1435 DUP4 DUP7 DUP4 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x143F DUP4 DUP3 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x146A PUSH32 0x0 DUP6 DUP5 PUSH2 0x16F7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x14C2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14E7 DUP4 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1502 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x1ADF JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x60 ADD MLOAD ISZERO PUSH2 0x1521 JUMPI PUSH2 0x1518 DUP2 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x66E JUMP JUMPDEST PUSH2 0x1518 DUP3 DUP3 PUSH2 0x1B0F JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1548 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x1728 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x156D JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x156B SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xD06 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 MUL DUP2 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 SUB PUSH2 0x15CD JUMPI DUP4 DUP3 DUP2 PUSH2 0x15C3 JUMPI PUSH2 0x15C3 PUSH2 0x1B56 JUMP JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x7D8 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x15ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x227BC153 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1670 JUMPI PUSH2 0x1670 PUSH2 0x1CF8 JUMP JUMPDEST PUSH2 0x167A SWAP2 SWAP1 PUSH2 0x1D0E JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x16BD PUSH1 0x0 DUP4 DUP4 PUSH2 0x1276 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x16BD DUP3 PUSH1 0x0 DUP4 PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xD06 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7D8 DUP4 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x174E SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x178B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1197 DUP7 DUP4 DUP4 PUSH1 0x60 DUP3 PUSH2 0x17B0 JUMPI PUSH2 0x17AB DUP3 PUSH2 0x17F7 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x17C7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBF5 JUMP JUMPDEST POP DUP1 PUSH2 0x7D8 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1807 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x183B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1823 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1863 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18C8 DUP4 PUSH2 0x1890 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x190A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D8 DUP3 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1931 DUP5 PUSH2 0x1890 JUMP JUMPDEST SWAP3 POP PUSH2 0x193F PUSH1 0x20 DUP6 ADD PUSH2 0x1890 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1972 PUSH1 0x20 DUP5 ADD PUSH2 0x1890 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x19A0 PUSH1 0x20 DUP6 ADD PUSH2 0x1890 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AE PUSH1 0x40 DUP6 ADD PUSH2 0x1890 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7D8 DUP2 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x1A18 DUP2 PUSH2 0x19B7 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3F DUP4 PUSH2 0x1890 JUMP JUMPDEST SWAP2 POP PUSH2 0x1972 PUSH1 0x20 DUP5 ADD PUSH2 0x1890 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x66E JUMPI PUSH2 0x66E PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 ADD PUSH2 0x1A8B JUMPI PUSH2 0x1A8B PUSH2 0x1A4D JUMP JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x66E JUMPI PUSH2 0x66E PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1AB9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AD9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x66E JUMPI PUSH2 0x66E PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x66E JUMPI PUSH2 0x66E PUSH2 0x1A4D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP4 SLT DUP1 ISZERO DUP4 DUP4 SGT AND DUP4 DUP4 SLT DUP3 AND OR ISZERO PUSH2 0x1B2F JUMPI PUSH2 0x1B2F PUSH2 0x1A4D JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 SLT PUSH1 0x0 DUP4 SLT DUP1 ISZERO DUP3 AND DUP3 ISZERO DUP3 AND OR ISZERO PUSH2 0x152B JUMPI PUSH2 0x152B PUSH2 0x1A4D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B7B JUMPI PUSH2 0x1B7B PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ PUSH1 0x0 NOT DUP5 EQ AND ISZERO PUSH2 0x1B95 JUMPI PUSH2 0x1B95 PUSH2 0x1A4D JUMP JUMPDEST POP SDIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BA9 JUMPI PUSH2 0x1BA9 PUSH2 0x1B56 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1C02 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1BE8 JUMPI PUSH2 0x1BE8 PUSH2 0x1A4D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1BF5 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1BCC JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C19 JUMPI POP PUSH1 0x1 PUSH2 0x66E JUMP JUMPDEST DUP2 PUSH2 0x1C26 JUMPI POP PUSH1 0x0 PUSH2 0x66E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1C3C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1C46 JUMPI PUSH2 0x1C62 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x66E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1C57 JUMPI PUSH2 0x1C57 PUSH2 0x1A4D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x66E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1C85 JUMPI POP DUP2 DUP2 EXP PUSH2 0x66E JUMP JUMPDEST PUSH2 0x1C8F DUP4 DUP4 PUSH2 0x1BC7 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1CA3 JUMPI PUSH2 0x1CA3 PUSH2 0x1A4D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D8 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7D8 DUP2 PUSH2 0x19B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP4 AND DUP1 PUSH2 0x1D21 JUMPI PUSH2 0x1D21 PUSH2 0x1B56 JUMP JUMPDEST DUP1 PUSH1 0xFF DUP5 AND MOD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1D42 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1820 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF STATICCALL 0x4C 0xE0 0xF9 0x1F PREVRANDAO PUSH11 0x2C8F990A155173C691BFF3 0x5C 0xED PUSH9 0xB07E4353033F7F0185 PUSH1 0x64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"783:9568:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3249:362;;;:::i;:::-;;;160:25:18;;;148:2;133:18;3249:362:15;;;;;;;;1661:40;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;6152:148:5:-;;;;;;:::i;:::-;;:::i;4293:186:3:-;;;;;;:::i;:::-;;:::i;:::-;;;1639:14:18;;1632:22;1614:41;;1602:2;1587:18;4293:186:3;1474:187:18;7418:147:5;;;;;;:::i;:::-;;:::i;7876:241:15:-;;;;;;:::i;:::-;;:::i;6525:302::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;2254:4:18;2296:3;2285:9;2281:19;2273:27;;2333:6;2327:13;2316:9;2309:32;2397:4;2389:6;2385:17;2379:24;2372:4;2361:9;2357:20;2350:54;2460:4;2452:6;2448:17;2442:24;2435:4;2424:9;2420:20;2413:54;2537:4;2529:6;2525:17;2519:24;2512:32;2505:40;2498:4;2487:9;2483:20;2476:70;2602:4;2594:6;2590:17;2584:24;2577:4;2566:9;2562:20;2555:54;2110:505;;;;;3144:97:3;3222:12;;3144:97;;5039:244;;;;;;:::i;:::-;;:::i;2802:41:15:-;;2841:2;2802:41;;5441:151:5;;;:::i;:::-;;;3125:4:18;3113:17;;;3095:36;;3083:2;3068:18;5441:151:5;2953:184:18;5636:94:5;5716:6;5636:94;;;-1:-1:-1;;;;;3306:32:18;;;3288:51;;3276:2;3261:18;5636:94:5;3142:203:18;6349:108:5;;;;;;:::i;:::-;-1:-1:-1;;;6433:17:5;6349:108;3617:289:15;;;;;;:::i;:::-;;:::i;3299:116:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:3;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;:::i;:::-;;1415:29:15;;;;;1638:85:0;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;4267:201:15;;;;;;:::i;:::-;;:::i;2276:93:3:-;;;:::i;6833:429:15:-;;;:::i;3610:178:3:-;;;;;;:::i;:::-;;:::i;7221:143:5:-;;;;;;:::i;:::-;;:::i;3912:349:15:-;;;;;;:::i;:::-;;:::i;4474:263::-;;;;;;:::i;:::-;;:::i;5950:148:5:-;;;;;;:::i;:::-;;:::i;4946:84:15:-;;;;;;:::i;:::-;-1:-1:-1;5019:4:15;;4946:84;6658:153:5;;;;;;:::i;:::-;;:::i;5036:1265:15:-;;;;;;:::i;:::-;;:::i;6859:112:5:-;;;;;;:::i;:::-;;:::i;1579:32:15:-;;;;;;3846:140:3;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:3;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;7758:112:15;;;;;;:::i;:::-;7848:15;7758:112;2543:215:0;;;;;;:::i;:::-;;:::i;3249:362:15:-;3310:7;3329:17;3349:15;:13;:15::i;:::-;3329:35;;3391:1;3378:10;:14;3374:116;;;3462:17;;3437:22;:10;:20;:22::i;:::-;3415:19;:17;:19::i;:::-;:44;;;;:::i;:::-;:64;;;;:::i;:::-;3408:71;;;3249:362;:::o;3374:116::-;3512:11;3513:10;3512:11;:::i;:::-;3499:24;;3587:17;;3562:22;:10;:20;:22::i;:::-;3540:19;:17;:19::i;:::-;:44;;;;:::i;2074:89:3:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;6152:148:5:-;6222:7;6248:45;6265:6;6273:19;6248:16;:45::i;:::-;6241:52;6152:148;-1:-1:-1;;6152:148:5:o;4293:186:3:-;4366:4;735:10:10;4420:31:3;735:10:10;4436:7:3;4445:5;4420:8;:31::i;:::-;-1:-1:-1;4468:4:3;;4293:186;-1:-1:-1;;;4293:186:3:o;7418:147:5:-;7488:7;7514:44;7531:6;7539:18;7514:16;:44::i;7876:241:15:-;7960:7;8007:15;7960:7;8060:17;8071:6;8007:15;8060:17;:::i;:::-;8033:45;7876:241;-1:-1:-1;;;;;7876:241:15:o;6525:302::-;6582:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6582:24:15;-1:-1:-1;;;;;6654:16:15;;6618:33;6654:16;;;:9;:16;;;;;;;;6618:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6684:33;6680:108;;6740:37;;-1:-1:-1;;;6740:37:15;;;;;;;;;;;6680:108;-1:-1:-1;;;;;;;6804:16:15;;;;;:9;:16;;;;;;;;;6797:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6525:302::o;5039:244:3:-;5126:4;735:10:10;5182:37:3;5198:4;735:10:10;5213:5:3;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;;:::o;5441:151:5:-;5522:5;5546:39;5522:5;5546:19;:39;:::i;:::-;5539:46;;5441:151;:::o;3617:289:15:-;3706:14;2356:21:11;:19;:21::i;:::-;3732:25:15::1;3788:6;3760:25;;:34;;;;:::i;:::-;3732:62;;3813:31;3827:6;3835:8;3813:13;:31::i;:::-;3854:25;:45:::0;;;;3804:40;-1:-1:-1;2398:20:11;1713:1;2924:7;:21;2744:208;2293:101:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4267:201:15:-;4353:14;2356:21:11;:19;:21::i;:::-;4388:28:15::1;4399:6;4407:8;4388:10;:28::i;:::-;4379:37;;4455:6;4426:25;;:35;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;1713:1:11;2924:7;:21;2398:20;2744:208;2276:93:3;2323:13;2355:7;2348:14;;;;;:::i;6833:429:15:-;6879:6;6897:14;7019:40;:18;:29;;;:38;:40::i;:::-;6960:56;:45;6973:18;:28;;;7003:1;6960:12;:45::i;:::-;:54;:56::i;:::-;:99;;;;:::i;:::-;6897:162;;7070:15;7144:57;:46;7157:19;:29;;;7188:1;7144:12;:46::i;:57::-;7100:19;:30;:41;;:39;:41::i;:::-;:101;;;;:::i;:::-;7070:131;-1:-1:-1;7242:4:15;7220:18;7231:7;7070:131;7220:18;:::i;:::-;7219:27;;;;:::i;:::-;7212:34;;;;6833:429;:::o;3610:178:3:-;3679:4;735:10:10;3733:27:3;735:10:10;3750:2:3;3754:5;3733:9;:27::i;7221:143:5:-;7287:7;7313:44;7330:6;7338:18;7313:16;:44::i;3912:349:15:-;4049:14;2356:21:11;:19;:21::i;:::-;4079:25:15::1;4135:6;4107:25;;:34;;;;:::i;:::-;4079:62;;4160:39;4175:6;4183:8;4193:5;4160:14;:39::i;:::-;4209:25;:45:::0;;;;4151:48;-1:-1:-1;2398:20:11;1713:1;2924:7;:21;2744:208;4474:263:15;4609:14;2356:21:11;:19;:21::i;:::-;4648:37:15::1;4661:6;4669:8;4679:5;4648:12;:37::i;:::-;4639:46;;4724:6;4695:25;;:35;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;1713:1:11;2924:7;:21;2398:20;2744:208;5950:148:5;6020:7;6046:45;6063:6;6071:19;6046:16;:45::i;6658:153::-;-1:-1:-1;;;;;3390:18:3;;6723:7:5;3390:18:3;;;;;;;;;;;6749:55:5;;6784:19;6749:16;:55::i;5036:1265:15:-;5165:1;5151:10;:15;5147:97;;5189:44;;-1:-1:-1;;;5189:44:15;;;;;;;;;;;5147:97;5265:1;5257:4;:9;5253:73;;5289:26;;-1:-1:-1;;;5289:26:15;;;;;;;;;;;5253:73;5349:10;5339:21;;;;:9;:21;;;;;:32;:37;5335:112;;5399:37;;-1:-1:-1;;;5399:37:15;;;;;;;;;;;5335:112;5535:24;5562:281;;;;;;;;5673:10;5562:281;;;;5598:15;5562:281;;;;5729:15;5722:4;:22;;;;:::i;:::-;5562:281;;;;5776:6;5562:281;;;;;;5817:15;5562:281;;;5535:308;;5853:47;5874:8;5884:15;5853:20;:47::i;:::-;5910:61;-1:-1:-1;;;;;5910:5:15;:22;5933:10;5953:4;5960:10;5910:22;:61::i;:::-;6028:19;;6007:17;:40;;6028:19;;6007:40;;6028:19;;6007:40;:::i;:::-;;;;-1:-1:-1;;6067:10:15;6057:21;;;;:9;:21;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6057:32:15;;;;;;;;;;;;;;;;;;;;;;6099:58;;6124:4;;6150:6;6099:24;:58::i;:::-;6218:15;;;;;6253:18;;;;;6273:20;;;;;6191:103;;7836:14:18;;7829:22;7811:41;;7868:18;;;7861:34;;;7911:18;;;7904:34;;;7954:18;;;7947:34;8012:3;7997:19;;7990:35;;;;6191:103:15;;6206:10;;6191:103;;;;;;7798:3:18;6191:103:15;;;5137:1164;5036:1265;;;;:::o;6859:112:5:-;-1:-1:-1;;;;;3390:18:3;;6922:7:5;3390:18:3;;;;;;;;;;;6948:16:5;3299:116:3;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;3288:51:18::0;3261:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;17166:193:13:-;17222:7;17253:1;17245:5;:9;17241:81;;;17277:34;;-1:-1:-1;;;17277:34:13;;;;;160:25:18;;;133:18;;17277:34:13;14:177:18;17241:81:13;-1:-1:-1;17346:5:13;17166:193::o;5780:116:5:-;5858:31;;-1:-1:-1;;;5858:31:5;;5883:4;5858:31;;;3288:51:18;5832:7:5;;5858:6;-1:-1:-1;;;;;5858:16:5;;;;3261:18:18;;5858:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10219:213::-;10316:7;10342:83;10356:13;:11;:13::i;:::-;:17;;10372:1;10356:17;:::i;:::-;10391:23;12371:5;10391:2;:23;:::i;:::-;3222:12:3;;10375:39:5;;;;:::i;:::-;10342:6;;:83;10416:8;10342:13;:83::i;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;9882:213:5:-;9979:7;10005:83;10035:23;9979:7;10035:2;:23;:::i;:::-;3222:12:3;;10019:39:5;;;;:::i;:::-;10060:13;:11;:13::i;:::-;:17;;10076:1;10060:17;:::i;10663:477:3:-;-1:-1:-1;;;;;3952:18:3;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:3;;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;-1:-1:-1;;;10936:60:3;;;;;;;;;;:::i;10881:130::-;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:3;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:3;;5807:1;5780:30;;;3288:51:18;3261:18;;5780:30:3;3142:203:18;5735:86:3;-1:-1:-1;;;;;5834:16:3;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:3;;5902:1;5873:32;;;3288:51:18;3261:18;;5873:32:3;3142:203:18;5830:86:3;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;2431:307:11:-;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:11;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;7809:392:5:-;7884:7;-1:-1:-1;;8073:14:5;8090:22;8105:6;8090:14;:22::i;:::-;8073:39;-1:-1:-1;8122:48:5;735:10:10;8145:8:5;8155:6;8163;8122:8;:48::i;:::-;8188:6;7809:392;-1:-1:-1;;;;7809:392:5:o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:10;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:10;1901:40:0;;;3288:51:18;3261:18;;1901:40:0;3142:203:18;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;8468:380:5:-;8540:7;-1:-1:-1;;8723:14:5;8740:19;8752:6;8740:11;:19::i;:::-;8723:36;-1:-1:-1;8769:48:5;735:10:10;8792:8:5;8802:6;8810;8769:8;:48::i;34375:314:13:-;34431:6;-1:-1:-1;;;;;34552:5:13;:33;34548:105;;;34608:34;;-1:-1:-1;;;34608:34:13;;;;;160:25:18;;;133:18;;34608:34:13;14:177:18;8895:413:5;8986:7;9005:17;9025:18;9037:5;9025:11;:18::i;:::-;9005:38;;9066:9;9057:6;:18;9053:108;;;9125:5;9132:6;9140:9;9098:52;;-1:-1:-1;;;9098:52:5;;;;;;;;;;:::i;9053:108::-;9171:14;9188:23;9204:6;9188:15;:23::i;:::-;9171:40;-1:-1:-1;9221:56:5;735:10:10;9245:8:5;9255:5;9262:6;9270;9221:9;:56::i;9353:405::-;9442:7;9461:17;9481:16;9491:5;9481:9;:16::i;:::-;9461:36;;9520:9;9511:6;:18;9507:106;;;9577:5;9584:6;9592:9;9552:50;;-1:-1:-1;;;9552:50:5;;;;;;;;;;:::i;9507:106::-;9623:14;9640:21;9654:6;9640:13;:21::i;:::-;9623:38;-1:-1:-1;9671:56:5;735:10:10;9695:8:5;9705:5;9712:6;9720;9671:9;:56::i;9090:636:15:-;9195:18;9216:48;9238:8;9248:15;9216:21;:48::i;:::-;9195:69;;9327:1;9312:11;9279:30;:8;:19;;;:28;:30::i;:::-;:44;;;;:::i;:::-;:49;9275:134;;9351:47;;-1:-1:-1;;;9351:47:15;;;;;;;;;;;9275:134;9419:26;9448:58;9482:11;9449:30;:8;:19;;;:28;:30::i;:::-;:44;;;;:::i;:::-;9448:56;:58::i;:::-;9419:87;;9517:16;9583:18;9559:8;:20;;;9538:8;:18;;;:41;;;;:::i;:::-;9537:64;;;;:::i;:::-;9517:85;;2841:2;9627:8;:24;9623:97;;9674:35;;-1:-1:-1;;;9674:35:15;;;;;;;;;;;9623:97;9185:541;;;9090:636;;:::o;1702:188:8:-;1829:53;;-1:-1:-1;;;;;10216:15:18;;;1829:53:8;;;10198:34:18;10268:15;;;10248:18;;;10241:43;10300:18;;;10293:34;;;1802:81:8;;1822:5;;1844:18;;;;;10133::18;;1829:53:8;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1829:53:8;;;;;;;;;;;1802:19;:81::i;8323:377:15:-;8432:6;8428:266;;;8487:10;8454:18;:29;;;:43;;;;;;;:::i;:::-;;;;-1:-1:-1;;8511:28:15;:41;;8543:9;;8511:28;;;:41;;8543:9;;8511:41;:::i;:::-;;;;-1:-1:-1;8428:266:15;;-1:-1:-1;8428:266:15;;8617:10;8583:19;:30;;;:44;;;;;;;:::i;:::-;;;;-1:-1:-1;;8641:29:15;:42;;8674:9;;8641:29;;;:42;;8674:9;;8641:42;:::i;:::-;;;;-1:-1:-1;;8323:377:15;;;:::o;8051:302:12:-;8152:7;8171:14;8188:25;8195:1;8198;8201:11;8188:6;:25::i;:::-;8171:42;;8227:26;8244:8;8227:16;:26::i;:::-;:59;;;;;8285:1;8270:11;8257:25;;;;;:::i;:::-;8267:1;8264;8257:25;:29;8227:59;8223:101;;;8302:11;8312:1;8302:11;;:::i;:::-;;8340:6;-1:-1:-1;;;;;;8051:302:12:o;9949:432:3:-;-1:-1:-1;;;;;10061:19:3;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:3;;10132:1;10103:32;;;3288:51:18;3261:18;;10103:32:3;3142:203:18;10057:89:3;-1:-1:-1;;;;;10159:21:3;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:3;;10231:1;10203:31;;;3288:51:18;3261:18;;10203:31:3;3142:203:18;10155:90:3;-1:-1:-1;;;;;10254:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:3;10342:5;-1:-1:-1;;;;;10333:31:3;;10358:5;10333:31;;;;160:25:18;;148:2;133:18;;14:177;10333:31:3;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:3;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:3;;-1:-1:-1;6356:540:3;;-1:-1:-1;;;;;6570:15:3;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6674:4;6680:11;6693:5;6649:50;;-1:-1:-1;;;6649:50:3;;;;;;;;;;:::i;6599:115::-;-1:-1:-1;;;;;6834:15:3;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:3;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:3;7355:4;-1:-1:-1;;;;;7346:25:3;;7365:5;7346:25;;;;160::18;;148:2;133:18;;14:177;7346:25:3;;;;;;;;6271:1107;;;:::o;10496:830:5:-;11164:65;11191:6;11199;11215:4;11222:6;11164:26;:65::i;:::-;11239:23;11245:8;11255:6;11239:5;:23::i;:::-;11294:8;-1:-1:-1;;;;;11278:41:5;11286:6;-1:-1:-1;;;;;11278:41:5;;11304:6;11312;11278:41;;;;;;10512:25:18;;;10568:2;10553:18;;10546:34;10500:2;10485:18;;10338:248;11393:914:5;11580:5;-1:-1:-1;;;;;11570:15:5;:6;-1:-1:-1;;;;;11570:15:5;;11566:84;;11601:38;11617:5;11624:6;11632;11601:15;:38::i;:::-;12157:20;12163:5;12170:6;12157:5;:20::i;:::-;12187:48;12210:6;12218:8;12228:6;12187:22;:48::i;:::-;12278:5;-1:-1:-1;;;;;12251:49:5;12268:8;-1:-1:-1;;;;;12251:49:5;12260:6;-1:-1:-1;;;;;12251:49:5;;12285:6;12293;12251:49;;;;;;10512:25:18;;;10568:2;10553:18;;10546:34;10500:2;10485:18;;10338:248;12251:49:5;;;;;;;;11393:914;;;;;:::o;9732:569:15:-;9837:6;9855:27;9885:49;9907:15;9886:8;:18;;;:36;;;;:::i;9885:49::-;9855:79;;9976:31;10010:54;10032:8;:20;;;10011:8;:18;;;:41;;;;:::i;10010:54::-;9976:88;;10110:8;:15;;;10106:189;;;10149:47;10172:24;10149:20;:47;:::i;:::-;10141:56;;;;;;10106:189;10236:47;10263:20;10236:24;:47;:::i;10106:189::-;9845:456;;9732:569;;;;:::o;4059:629:8:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:8;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:8;;-1:-1:-1;;;;;3306:32:18;;4631:40:8;;;3288:51:18;3261:18;;4631:40:8;3142:203:18;3803:4116:12;3885:14;4248:5;;;3885:14;-1:-1:-1;;4252:1:12;4248;4420:20;4493:5;4489:2;4486:13;4478:5;4474:2;4470:14;4466:34;4457:43;;;4595:5;4604:1;4595:10;4591:368;;4933:11;4925:5;:19;;;;;:::i;:::-;;4918:26;;;;;;4591:368;5080:5;5065:11;:20;5061:88;;5112:22;;-1:-1:-1;;;5112:22:12;;;;;;;;;;;5061:88;5404:17;5539:11;5536:1;5533;5526:25;5939:12;5969:15;;;5954:31;;6088:22;;;;;6813:1;6794;:15;;6793:21;;7046;;;7042:25;;7031:36;7115:21;;;7111:25;;7100:36;7185:21;;;7181:25;;7170:36;7255:21;;;7251:25;;7240:36;7325:21;;;7321:25;;7310:36;7396:21;;;7392:25;;;7381:36;6333:12;;;;6329:23;;;6354:1;6325:31;5653:20;;;5642:32;;;6445:12;;;;5700:21;;;;6186:16;;;;6436:21;;;;7860:15;;;;;-1:-1:-1;;3803:4116:12;;;;;:::o;14993:122::-;15061:4;15102:1;15090:8;15084:15;;;;;;;;:::i;:::-;:19;;;;:::i;:::-;:24;;15107:1;15084:24;15077:31;;14993:122;;;:::o;7721:208:3:-;-1:-1:-1;;;;;7791:21:3;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:3;;7864:1;7835:32;;;3288:51:18;3261:18;;7835:32:3;3142:203:18;7787:91:3;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;-1:-1:-1;;;;;8317:21:3;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:3;;8388:1;8361:30;;;3288:51:18;3261:18;;8361:30:3;3142:203:18;8313:89:3;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;1303:160:8:-;1412:43;;-1:-1:-1;;;;;11327:32:18;;;1412:43:8;;;11309:51:18;11376:18;;;11369:34;;;1385:71:8;;1405:5;;1427:14;;;;;11282:18:18;;1412:43:8;11135:274:18;2705:151:9;2780:12;2811:38;2833:6;2841:4;2847:1;2780:12;3421;3435:23;3462:6;-1:-1:-1;;;;;3462:11:9;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:9;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:9;;-1:-1:-1;;;;;3306:32:18;;5121:24:9;;;3288:51:18;3261:18;;5121:24:9;3142:203:18;5041:119:9;-1:-1:-1;5180:10:9;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:9;;;;;;;;;;;196:250:18;281:1;291:113;305:6;302:1;299:13;291:113;;;381:11;;;375:18;362:11;;;355:39;327:2;320:10;291:113;;;-1:-1:-1;;438:1:18;420:16;;413:27;196:250::o;451:396::-;600:2;589:9;582:21;563:4;632:6;626:13;675:6;670:2;659:9;655:18;648:34;691:79;763:6;758:2;747:9;743:18;738:2;730:6;726:15;691:79;:::i;:::-;831:2;810:15;-1:-1:-1;;806:29:18;791:45;;;;838:2;787:54;;451:396;-1:-1:-1;;451:396:18:o;852:180::-;911:6;964:2;952:9;943:7;939:23;935:32;932:52;;;980:1;977;970:12;932:52;-1:-1:-1;1003:23:18;;852:180;-1:-1:-1;852:180:18:o;1037:173::-;1105:20;;-1:-1:-1;;;;;1154:31:18;;1144:42;;1134:70;;1200:1;1197;1190:12;1134:70;1037:173;;;:::o;1215:254::-;1283:6;1291;1344:2;1332:9;1323:7;1319:23;1315:32;1312:52;;;1360:1;1357;1350:12;1312:52;1383:29;1402:9;1383:29;:::i;:::-;1373:39;1459:2;1444:18;;;;1431:32;;-1:-1:-1;;;1215:254:18:o;1666:248::-;1734:6;1742;1795:2;1783:9;1774:7;1770:23;1766:32;1763:52;;;1811:1;1808;1801:12;1763:52;-1:-1:-1;;1834:23:18;;;1904:2;1889:18;;;1876:32;;-1:-1:-1;1666:248:18:o;1919:186::-;1978:6;2031:2;2019:9;2010:7;2006:23;2002:32;1999:52;;;2047:1;2044;2037:12;1999:52;2070:29;2089:9;2070:29;:::i;2620:328::-;2697:6;2705;2713;2766:2;2754:9;2745:7;2741:23;2737:32;2734:52;;;2782:1;2779;2772:12;2734:52;2805:29;2824:9;2805:29;:::i;:::-;2795:39;;2853:38;2887:2;2876:9;2872:18;2853:38;:::i;:::-;2843:48;;2938:2;2927:9;2923:18;2910:32;2900:42;;2620:328;;;;;:::o;3350:254::-;3418:6;3426;3479:2;3467:9;3458:7;3454:23;3450:32;3447:52;;;3495:1;3492;3485:12;3447:52;3531:9;3518:23;3508:33;;3560:38;3594:2;3583:9;3579:18;3560:38;:::i;:::-;3550:48;;3350:254;;;;;:::o;4012:328::-;4089:6;4097;4105;4158:2;4146:9;4137:7;4133:23;4129:32;4126:52;;;4174:1;4171;4164:12;4126:52;4210:9;4197:23;4187:33;;4239:38;4273:2;4262:9;4258:18;4239:38;:::i;:::-;4229:48;;4296:38;4330:2;4319:9;4315:18;4296:38;:::i;:::-;4286:48;;4012:328;;;;;:::o;4345:118::-;4431:5;4424:13;4417:21;4410:5;4407:32;4397:60;;4453:1;4450;4443:12;4468:241;4524:6;4577:2;4565:9;4556:7;4552:23;4548:32;4545:52;;;4593:1;4590;4583:12;4545:52;4632:9;4619:23;4651:28;4673:5;4651:28;:::i;4714:446::-;4797:6;4805;4813;4821;4874:3;4862:9;4853:7;4849:23;4845:33;4842:53;;;4891:1;4888;4881:12;4842:53;4927:9;4914:23;4904:33;;4984:2;4973:9;4969:18;4956:32;4946:42;;5035:2;5024:9;5020:18;5007:32;4997:42;;5089:2;5078:9;5074:18;5061:32;5102:28;5124:5;5102:28;:::i;:::-;4714:446;;;;-1:-1:-1;4714:446:18;;-1:-1:-1;;4714:446:18:o;5165:260::-;5233:6;5241;5294:2;5282:9;5273:7;5269:23;5265:32;5262:52;;;5310:1;5307;5300:12;5262:52;5333:29;5352:9;5333:29;:::i;:::-;5323:39;;5381:38;5415:2;5404:9;5400:18;5381:38;:::i;5430:127::-;5491:10;5486:3;5482:20;5479:1;5472:31;5522:4;5519:1;5512:15;5546:4;5543:1;5536:15;5562:128;5629:9;;;5650:11;;;5647:37;;;5664:18;;:::i;5695:136::-;5730:3;-1:-1:-1;;;5751:22:18;;5748:48;;5776:18;;:::i;:::-;-1:-1:-1;5816:1:18;5812:13;;5695:136::o;5836:125::-;5901:9;;;5922:10;;;5919:36;;;5935:18;;:::i;5966:380::-;6045:1;6041:12;;;;6088;;;6109:61;;6163:4;6155:6;6151:17;6141:27;;6109:61;6216:2;6208:6;6205:14;6185:18;6182:38;6179:161;;6262:10;6257:3;6253:20;6250:1;6243:31;6297:4;6294:1;6287:15;6325:4;6322:1;6315:15;6179:161;;5966:380;;;:::o;6351:168::-;6424:9;;;6455;;6472:15;;;6466:22;;6452:37;6442:71;;6493:18;;:::i;6524:148::-;6612:4;6591:12;;;6605;;;6587:31;;6630:13;;6627:39;;;6646:18;;:::i;6677:200::-;6743:9;;;6716:4;6771:9;;6799:10;;6811:12;;;6795:29;6834:12;;;6826:21;;6792:56;6789:82;;;6851:18;;:::i;:::-;6789:82;6677:200;;;;:::o;6882:216::-;6946:9;;;6974:11;;;6921:3;7004:9;;7032:10;;7028:19;;7057:10;;7049:19;;7025:44;7022:70;;;7072:18;;:::i;7103:127::-;7164:10;7159:3;7155:20;7152:1;7145:31;7195:4;7192:1;7185:15;7219:4;7216:1;7209:15;7235:193;7274:1;7300;7290:35;;7305:18;;:::i;:::-;-1:-1:-1;;;7341:18:18;;-1:-1:-1;;7361:13:18;;7337:38;7334:64;;;7378:18;;:::i;:::-;-1:-1:-1;7412:10:18;;7235:193::o;7433:120::-;7473:1;7499;7489:35;;7504:18;;:::i;:::-;-1:-1:-1;7538:9:18;;7433:120::o;8036:184::-;8106:6;8159:2;8147:9;8138:7;8134:23;8130:32;8127:52;;;8175:1;8172;8165:12;8127:52;-1:-1:-1;8198:16:18;;8036:184;-1:-1:-1;8036:184:18:o;8225:422::-;8314:1;8357:5;8314:1;8371:270;8392:7;8382:8;8379:21;8371:270;;;8451:4;8447:1;8443:6;8439:17;8433:4;8430:27;8427:53;;;8460:18;;:::i;:::-;8510:7;8500:8;8496:22;8493:55;;;8530:16;;;;8493:55;8609:22;;;;8569:15;;;;8371:270;;;8375:3;8225:422;;;;;:::o;8652:806::-;8701:5;8731:8;8721:80;;-1:-1:-1;8772:1:18;8786:5;;8721:80;8820:4;8810:76;;-1:-1:-1;8857:1:18;8871:5;;8810:76;8902:4;8920:1;8915:59;;;;8988:1;8983:130;;;;8895:218;;8915:59;8945:1;8936:10;;8959:5;;;8983:130;9020:3;9010:8;9007:17;9004:43;;;9027:18;;:::i;:::-;-1:-1:-1;;9083:1:18;9069:16;;9098:5;;8895:218;;9197:2;9187:8;9184:16;9178:3;9172:4;9169:13;9165:36;9159:2;9149:8;9146:16;9141:2;9135:4;9132:12;9128:35;9125:77;9122:159;;;-1:-1:-1;9234:19:18;;;9266:5;;9122:159;9313:34;9338:8;9332:4;9313:34;:::i;:::-;9383:6;9379:1;9375:6;9371:19;9362:7;9359:32;9356:58;;;9394:18;;:::i;:::-;9432:20;;8652:806;-1:-1:-1;;;8652:806:18:o;9463:140::-;9521:5;9550:47;9591:4;9581:8;9577:19;9571:4;9550:47;:::i;9608:345::-;-1:-1:-1;;;;;9828:32:18;;;;9810:51;;9892:2;9877:18;;9870:34;;;;9935:2;9920:18;;9913:34;9798:2;9783:18;;9608:345::o;10591:245::-;10658:6;10711:2;10699:9;10690:7;10686:23;10682:32;10679:52;;;10727:1;10724;10717:12;10679:52;10759:9;10753:16;10778:28;10800:5;10778:28;:::i;10841:127::-;10902:10;10897:3;10893:20;10890:1;10883:31;10933:4;10930:1;10923:15;10957:4;10954:1;10947:15;10973:157;11003:1;11037:4;11034:1;11030:12;11061:3;11051:37;;11068:18;;:::i;:::-;11120:3;11113:4;11110:1;11106:12;11102:22;11097:27;;;10973:157;;;;:::o;11414:287::-;11543:3;11581:6;11575:13;11597:66;11656:6;11651:3;11644:4;11636:6;11632:17;11597:66;:::i;:::-;11679:16;;;;;11414:287;-1:-1:-1;;11414:287:18:o"},"methodIdentifiers":{"MAX_LEVARAGE()":"2bdb4e73","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","getPosition(address)":"16c19739","getPrice(uint256)":"e7572230","getTradersPnL()":"9f006651","getUsdtValue(uint256,uint256)":"169fffe2","i_xdc()":"798cd94c","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","openPosition(uint256,uint256,uint256,bool)":"d4d5c230","owner()":"8da5cb5b","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address)":"ba087652","renounceOwnership()":"715018a6","s_totalLiquidityDeposited()":"0258d92a","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","tradersCollateral()":"dd5b2f52","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","tryfunction(bool)":"cc265da9","withdraw(uint256,address,address)":"b460af94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_xdc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxDeposit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxRedeem\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UDex__BreaksHealthFactor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UDex__ErrorInsufficientCollateral\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UDex__ErrorSize\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UDex__InsufficientPositionCollateral\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UDex__PositionAlreadyExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UDex__PositionDoesNotExist\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDecreased\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDecreased\",\"type\":\"uint256\"}],\"name\":\"PositionDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"xdcAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"avgXdcPrice\",\"type\":\"uint256\"}],\"name\":\"PositionOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_LEVARAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"avgXdcPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xdcAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct UDex.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentXDCPrice\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTradersPnL\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentXDCPrice\",\"type\":\"uint256\"}],\"name\":\"getUsdtValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_xdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentXDCPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"}],\"name\":\"openPosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalLiquidityDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradersCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isTrue\",\"type\":\"bool\"}],\"name\":\"tryfunction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC4626ExceededMaxDeposit(address,uint256,uint256)\":[{\"details\":\"Attempted to deposit more assets than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxMint(address,uint256,uint256)\":[{\"details\":\"Attempted to mint more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxRedeem(address,uint256,uint256)\":[{\"details\":\"Attempted to redeem more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxWithdraw(address,uint256,uint256)\":[{\"details\":\"Attempted to withdraw more assets than the max amount for `receiver`.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"See {IERC4626-asset}. \"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"convertToAssets(uint256)\":{\"details\":\"See {IERC4626-convertToAssets}. \"},\"convertToShares(uint256)\":{\"details\":\"See {IERC4626-convertToShares}. \"},\"decimals()\":{\"details\":\"Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This \\\"original\\\" value is cached during construction of the vault contract. If this read operation fails (e.g., the asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals. See {IERC20Metadata-decimals}.\"},\"deposit(uint256,address)\":{\"details\":\"See {IERC4626-deposit}. \"},\"maxDeposit(address)\":{\"details\":\"See {IERC4626-maxDeposit}. \"},\"maxMint(address)\":{\"details\":\"See {IERC4626-maxMint}. \"},\"maxRedeem(address)\":{\"details\":\"See {IERC4626-maxRedeem}. \"},\"maxWithdraw(address)\":{\"details\":\"See {IERC4626-maxWithdraw}. \"},\"mint(uint256,address)\":{\"details\":\"See {IERC4626-mint}. As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero. In this case, the shares will be minted without requiring any assets to be deposited.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"previewDeposit(uint256)\":{\"details\":\"See {IERC4626-previewDeposit}. \"},\"previewMint(uint256)\":{\"details\":\"See {IERC4626-previewMint}. \"},\"previewRedeem(uint256)\":{\"details\":\"See {IERC4626-previewRedeem}. \"},\"previewWithdraw(uint256)\":{\"details\":\"See {IERC4626-previewWithdraw}. \"},\"redeem(uint256,address,address)\":{\"details\":\"See {IERC4626-redeem}. \"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"See {IERC4626-totalAssets}. \"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,address,address)\":{\"details\":\"See {IERC4626-withdraw}. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UDex.sol\":\"UDex\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0x1837547e04d5fe5334eeb77a345683c22995f1e7aa033020757ddf83a80fc72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d6031bc0e6f70edceb4e63fd624fe6be09dc48f5201c7a9078c26e6a9ef95f\",\"dweb:/ipfs/QmPTEBH7dmU3NgE6vtjMy7xEK54as9VHSgf9ojupwnvoke\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"contracts/UDex.sol\":{\"keccak256\":\"0xfc568d4435606122fa0594f3bf61ebbcb79ef31edc33851192ec9425ab63fd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://604302c3a37b508876b5cc530c25d753ea17f5331626d393952c7d973b61725f\",\"dweb:/ipfs/QmeKuJjfPagXxvJDggM4iY2K7voYs2jH7JCCqFCQcKQ3n8\"]},\"contracts/lib/LibError.sol\":{\"keccak256\":\"0x9511457d97add2040dfd64203be7f8da2bed49a76b5025fb9a073d4720c09550\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58bc73716a3c7c0d3c9beedbcd9512097ab07a51508a413f239136a18b371b00\",\"dweb:/ipfs/QmYvQEuh7J3CG94HpUZMYsEFB8Ji2YFpvS3W3GFUu4dqcR\"]}},\"version\":1}"}},"contracts/interface/IStatus.sol":{"IStatus":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IStatus.sol\":\"IStatus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IStatus.sol\":{\"keccak256\":\"0xa28ad55b7ad21d45976c8a01514d34775acb45ffa305147c7813ef69e9822a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04d35eb6f705a087a321a1acac0d0b433d21690230804636319e121eeb96ae91\",\"dweb:/ipfs/Qmc8BRYa9nQ3xZos7fFw1ofZYpqAySzHfaHnMLUYvG1gVp\"]}},\"version\":1}"}},"contracts/lib/LibError.sol":{"LibError":{"abi":[{"inputs":[],"name":"Oracle__ErrorPrice","type":"error"},{"inputs":[],"name":"UDex__BreaksHealthFactor","type":"error"},{"inputs":[],"name":"UDex__ErrorInsufficientCollateral","type":"error"},{"inputs":[],"name":"UDex__ErrorSize","type":"error"},{"inputs":[],"name":"UDex__InsufficientPositionCollateral","type":"error"},{"inputs":[],"name":"UDex__PositionAlreadyExist","type":"error"},{"inputs":[],"name":"UDex__PositionDoesNotExist","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206bddf85bff5fb7b9ed07b0db7db531ad4b1fc4de4b1853a550cfd0e46a6dfa6064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xDDF85BFF5FB7B9ED07B0DB7D 0xB5 BALANCE 0xAD 0x4B 0x1F 0xC4 0xDE 0x4B XOR MSTORE8 0xA5 POP 0xCF 0xD0 0xE4 PUSH11 0x6DFA6064736F6C63430008 EQ STOP CALLER ","sourceMap":"59:323:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;59:323:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206bddf85bff5fb7b9ed07b0db7db531ad4b1fc4de4b1853a550cfd0e46a6dfa6064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xDDF85BFF5FB7B9ED07B0DB7D 0xB5 BALANCE 0xAD 0x4B 0x1F 0xC4 0xDE 0x4B XOR MSTORE8 0xA5 POP 0xCF 0xD0 0xE4 PUSH11 0x6DFA6064736F6C63430008 EQ STOP CALLER ","sourceMap":"59:323:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Oracle__ErrorPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UDex__BreaksHealthFactor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UDex__ErrorInsufficientCollateral\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UDex__ErrorSize\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UDex__InsufficientPositionCollateral\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UDex__PositionAlreadyExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UDex__PositionDoesNotExist\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/LibError.sol\":\"LibError\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/LibError.sol\":{\"keccak256\":\"0x9511457d97add2040dfd64203be7f8da2bed49a76b5025fb9a073d4720c09550\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58bc73716a3c7c0d3c9beedbcd9512097ab07a51508a413f239136a18b371b00\",\"dweb:/ipfs/QmYvQEuh7J3CG94HpUZMYsEFB8Ji2YFpvS3W3GFUu4dqcR\"]}},\"version\":1}"}}}}}